{"allContent":{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/docs","tagsPath":"/docs/tags","editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs","editUrlLocalized":"https://github.com/home-assistant/developers.home-assistant/edit/master/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/Users/martinpark/homeassistant-app/sidebars.js","contentPath":"/Users/martinpark/homeassistant-app/docs","contentPathLocalized":"/Users/martinpark/homeassistant-app/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"add-ons","title":"Developing an add-on","description":"Add-ons for Home Assistant allow the user to extend the functionality around Home Assistant. This can be running an application that Home Assistant can integrate with (like an MQTT broker) or to share the configuration via Samba for easy editing from other computers. Add-ons can be configured via the Supervisor panel in Home Assistant.","source":"@site/docs/add-ons.md","sourceDirName":".","slug":"/add-ons","permalink":"/docs/add-ons","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Developing an add-on","sidebar_label":"Introduction"},"sidebar":"Addons","next":{"title":"Tutorial: Making your first add-on","permalink":"/docs/add-ons/tutorial"}},{"id":"add-ons/communication","title":"Add-on communication","description":"There are different ways of communicating between add-ons inside Home Assistant.","source":"@site/docs/add-ons/communication.md","sourceDirName":"add-ons","slug":"/add-ons/communication","permalink":"/docs/add-ons/communication","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/communication.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Add-on communication"},"sidebar":"Addons","previous":{"title":"Add-on configuration","permalink":"/docs/add-ons/configuration"},"next":{"title":"Local add-on testing","permalink":"/docs/add-ons/testing"}},{"id":"add-ons/configuration","title":"Add-on configuration","description":"Each add-on is stored in a folder. The file structure looks like this:","source":"@site/docs/add-ons/configuration.md","sourceDirName":"add-ons","slug":"/add-ons/configuration","permalink":"/docs/add-ons/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/configuration.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Add-on configuration"},"sidebar":"Addons","previous":{"title":"Tutorial: Making your first add-on","permalink":"/docs/add-ons/tutorial"},"next":{"title":"Add-on communication","permalink":"/docs/add-ons/communication"}},{"id":"add-ons/presentation","title":"Presenting your addon","description":"If you choose to make your add-on available to the public, providing clear information, graphics and security reassurances will help attract users.  The recommendations below are a guideline for presenting your add-on.","source":"@site/docs/add-ons/presentation.md","sourceDirName":"add-ons","slug":"/add-ons/presentation","permalink":"/docs/add-ons/presentation","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/presentation.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Presenting your addon"},"sidebar":"Addons","previous":{"title":"Publishing your add-on","permalink":"/docs/add-ons/publishing"},"next":{"title":"Create an add-on repository","permalink":"/docs/add-ons/repository"}},{"id":"add-ons/publishing","title":"Publishing your add-on","description":"There are two different ways of publishing add-ons. One is to publish pre-built containers to a container registry and the other option is to have users build the containers locally on their Home Assistant instance.","source":"@site/docs/add-ons/publishing.md","sourceDirName":"add-ons","slug":"/add-ons/publishing","permalink":"/docs/add-ons/publishing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/publishing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Publishing your add-on"},"sidebar":"Addons","previous":{"title":"Local add-on testing","permalink":"/docs/add-ons/testing"},"next":{"title":"Presenting your addon","permalink":"/docs/add-ons/presentation"}},{"id":"add-ons/repository","title":"Create an add-on repository","description":"An add-on repository can contain one or more add-ons. Each add-on is stored in its own unique folder. To be identified as a repository, the repository must contain a configuration file.","source":"@site/docs/add-ons/repository.md","sourceDirName":"add-ons","slug":"/add-ons/repository","permalink":"/docs/add-ons/repository","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/repository.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Create an add-on repository"},"sidebar":"Addons","previous":{"title":"Presenting your addon","permalink":"/docs/add-ons/presentation"},"next":{"title":"Add-on security","permalink":"/docs/add-ons/security"}},{"id":"add-ons/security","title":"Add-on security","description":"Home Assistant rates every add-on based on the wanted rights. An add-on with a rating of 6 is very secure. If an add-on has a rating of 1, you shouldn't run this add-on unless you are 100% sure that you can trust the source.","source":"@site/docs/add-ons/security.md","sourceDirName":"add-ons","slug":"/add-ons/security","permalink":"/docs/add-ons/security","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/security.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Add-on security"},"sidebar":"Addons","previous":{"title":"Create an add-on repository","permalink":"/docs/add-ons/repository"}},{"id":"add-ons/testing","title":"Local add-on testing","description":"The fastest and recommended way to develop add-ons is using a local Visual Studio Code devcontainer. We maintain a devcontainer for this purpose which is used in all our add-on repositories. This devcontainer setup for VS Code runs Supervisor and Home Assistant, with all of the add-ons mapped as local add-ons inside, making it simple for add-on developers on Windows, Mac and Linux desktop OS-es.","source":"@site/docs/add-ons/testing.md","sourceDirName":"add-ons","slug":"/add-ons/testing","permalink":"/docs/add-ons/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/testing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Local add-on testing"},"sidebar":"Addons","previous":{"title":"Add-on communication","permalink":"/docs/add-ons/communication"},"next":{"title":"Publishing your add-on","permalink":"/docs/add-ons/publishing"}},{"id":"add-ons/tutorial","title":"Tutorial: Making your first add-on","description":"So you've got Home Assistant going and you've been enjoying the built-in add-ons but you're missing this one application. Time to make your own add-on!","source":"@site/docs/add-ons/tutorial.md","sourceDirName":"add-ons","slug":"/add-ons/tutorial","permalink":"/docs/add-ons/tutorial","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/add-ons/tutorial.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Tutorial: Making your first add-on"},"sidebar":"Addons","previous":{"title":"Introduction","permalink":"/docs/add-ons"},"next":{"title":"Add-on configuration","permalink":"/docs/add-ons/configuration"}},{"id":"api_lib_auth","title":"Python library: authentication","description":"The Authentication part of your library is responsible for acquiring authentication and for making authenticated requests. It should not be aware of what is in the requests.","source":"@site/docs/api_lib_auth.md","sourceDirName":".","slug":"/api_lib_auth","permalink":"/docs/api_lib_auth","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api_lib_auth.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Python library: authentication","sidebar_label":"Authentication"},"sidebar":"Misc","previous":{"title":"Introduction","permalink":"/docs/api_lib_index"},"next":{"title":"Modelling data","permalink":"/docs/api_lib_data_models"}},{"id":"api_lib_data_models","title":"Python library: modelling data","description":"Now that we have authentication going, we can start making authenticated requests and fetch data!","source":"@site/docs/api_lib_data_models.md","sourceDirName":".","slug":"/api_lib_data_models","permalink":"/docs/api_lib_data_models","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api_lib_data_models.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Python library: modelling data","sidebar_label":"Modelling data"},"sidebar":"Misc","previous":{"title":"Authentication","permalink":"/docs/api_lib_auth"},"next":{"title":"Introduction","permalink":"/docs/asyncio_index"}},{"id":"api_lib_index","title":"Building a Python library for an API","description":"One of the foundational rules of Home Assistant is that we do not include any protocol specific code. Instead, this code should be put into a standalone Python library and published to PyPI. This guide will describe how to get started with this!","source":"@site/docs/api_lib_index.md","sourceDirName":".","slug":"/api_lib_index","permalink":"/docs/api_lib_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api_lib_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Building a Python library for an API","sidebar_label":"Introduction"},"sidebar":"Misc","previous":{"title":"Create a new page","permalink":"/docs/documenting/create-page"},"next":{"title":"Authentication","permalink":"/docs/api_lib_auth"}},{"id":"api/native-app-integration","title":"Native app integration","description":"This guide describes how to build a native Home Assistant app that communicates with Home Assistant and offers a seamless integration. Below is a list of the things that we will discuss in this guide.","source":"@site/docs/api/native-app-integration.md","sourceDirName":"api","slug":"/api/native-app-integration","permalink":"/docs/api/native-app-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Native app integration","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"LLM API","permalink":"/docs/core/llm/"},"next":{"title":"Connecting to an instance","permalink":"/docs/api/native-app-integration/setup"}},{"id":"api/native-app-integration/notifications","title":"Push notifications","description":"The mobile_app integration has a notify platform built in that allows for a generic way to send push notifications to your users without requiring installation of an external custom component. Push notifications can either be delivered via a websocket connection or via a cloud service.","source":"@site/docs/api/native-app-integration/notifications.md","sourceDirName":"api/native-app-integration","slug":"/api/native-app-integration/notifications","permalink":"/docs/api/native-app-integration/notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration/notifications.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Push notifications"},"sidebar":"Core","previous":{"title":"Sensors","permalink":"/docs/api/native-app-integration/sensors"},"next":{"title":"Authenticated WebView","permalink":"/docs/api/native-app-integration/webview"}},{"id":"api/native-app-integration/sending-data","title":"Sending data home","description":"Once you have registered your app with the mobile app component, you can start interacting with Home Assistant via the provided webhook information.","source":"@site/docs/api/native-app-integration/sending-data.md","sourceDirName":"api/native-app-integration","slug":"/api/native-app-integration/sending-data","permalink":"/docs/api/native-app-integration/sending-data","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration/sending-data.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Sending data home"},"sidebar":"Core","previous":{"title":"Connecting to an instance","permalink":"/docs/api/native-app-integration/setup"},"next":{"title":"Sensors","permalink":"/docs/api/native-app-integration/sensors"}},{"id":"api/native-app-integration/sensors","title":"Sensors","description":"The mobile_app integration supports exposing custom sensors that can be managed entirely via your app.","source":"@site/docs/api/native-app-integration/sensors.md","sourceDirName":"api/native-app-integration","slug":"/api/native-app-integration/sensors","permalink":"/docs/api/native-app-integration/sensors","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration/sensors.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Sensors"},"sidebar":"Core","previous":{"title":"Sending data home","permalink":"/docs/api/native-app-integration/sending-data"},"next":{"title":"Push notifications","permalink":"/docs/api/native-app-integration/notifications"}},{"id":"api/native-app-integration/setup","title":"Connecting to an instance","description":"When a user first opens the app, they will need to connect to their local instance to authenticate and register the device.","source":"@site/docs/api/native-app-integration/setup.md","sourceDirName":"api/native-app-integration","slug":"/api/native-app-integration/setup","permalink":"/docs/api/native-app-integration/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration/setup.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Connecting to an instance"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/api/native-app-integration"},"next":{"title":"Sending data home","permalink":"/docs/api/native-app-integration/sending-data"}},{"id":"api/native-app-integration/webview","title":"Authenticated WebView","description":"Your application already asked the user to authenticate. This means that your app should not ask the user to authenticate again when they open the Home Assistant UI.","source":"@site/docs/api/native-app-integration/webview.md","sourceDirName":"api/native-app-integration","slug":"/api/native-app-integration/webview","permalink":"/docs/api/native-app-integration/webview","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/native-app-integration/webview.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Authenticated WebView"},"sidebar":"Core","previous":{"title":"Push notifications","permalink":"/docs/api/native-app-integration/notifications"},"next":{"title":"Brands","permalink":"/docs/creating_integration_brand"}},{"id":"api/rest","title":"REST API","description":"Home Assistant provides a RESTful API on the same port as the web frontend (default port is port 8123).","source":"@site/docs/api/rest.md","sourceDirName":"api","slug":"/api/rest","permalink":"/docs/api/rest","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/rest.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"REST API"},"sidebar":"Core","previous":{"title":"WebSocket API","permalink":"/docs/api/websocket"},"next":{"title":"Validate the input","permalink":"/docs/development_validation"}},{"id":"api/supervisor/endpoints","title":"Endpoints","description":"For API endpoints marked with you need use an authorization header with a Bearer token.","source":"@site/docs/api/supervisor/endpoints.md","sourceDirName":"api/supervisor","slug":"/api/supervisor/endpoints","permalink":"/docs/api/supervisor/endpoints","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/supervisor/endpoints.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Endpoints"},"sidebar":"Supervisor","previous":{"title":"Debugging","permalink":"/docs/supervisor/debugging"},"next":{"title":"Models","permalink":"/docs/api/supervisor/models"}},{"id":"api/supervisor/examples","title":"Examples","description":"Examples on how to interface against the supervisor API.","source":"@site/docs/api/supervisor/examples.md","sourceDirName":"api/supervisor","slug":"/api/supervisor/examples","permalink":"/docs/api/supervisor/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/supervisor/examples.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Examples"},"sidebar":"Supervisor","previous":{"title":"Models","permalink":"/docs/api/supervisor/models"}},{"id":"api/supervisor/models","title":"Models","description":"These models are describing objects that are getting returned from the supervisor API.","source":"@site/docs/api/supervisor/models.md","sourceDirName":"api/supervisor","slug":"/api/supervisor/models","permalink":"/docs/api/supervisor/models","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/supervisor/models.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Models"},"sidebar":"Supervisor","previous":{"title":"Endpoints","permalink":"/docs/api/supervisor/endpoints"},"next":{"title":"Examples","permalink":"/docs/api/supervisor/examples"}},{"id":"api/websocket","title":"WebSocket API","description":"Home Assistant hosts a WebSocket API at /api/websocket. This API can be used to stream information from a Home Assistant instance to any client that implements WebSockets. We maintain a JavaScript library which we use in our frontend.","source":"@site/docs/api/websocket.md","sourceDirName":"api","slug":"/api/websocket","permalink":"/docs/api/websocket","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/api/websocket.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"WebSocket API"},"sidebar":"Core","previous":{"title":"Significant change","permalink":"/docs/core/platform/significant_change"},"next":{"title":"REST API","permalink":"/docs/api/rest"}},{"id":"architecture_components","title":"Integration architecture","description":"Home Assistant Core can be extended with integrations. Each integration is responsible for a specific domain within Home Assistant. Integrations can listen for or trigger events, offer actions, and maintain states. Integrations are made up of a component (the base logic) and platforms (bits that integrate with other integrations). Integrations are written in Python and can do all the goodness that Python has to offer. Out of the box, Home Assistant offers a bunch of built-in integrations.","source":"@site/docs/architecture_components.md","sourceDirName":".","slug":"/architecture_components","permalink":"/docs/architecture_components","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/architecture_components.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration architecture","sidebar_label":"Integrations"},"sidebar":"Core","previous":{"title":"Core","permalink":"/docs/architecture/core"},"next":{"title":"Set up development environment","permalink":"/docs/development_environment"}},{"id":"architecture_index","title":"Architecture overview","description":"Home Assistant provides a platform for home control and home automation. Home Assistant is not just an application onboarding, configuration and updating is all done via an easy to use interface.","source":"@site/docs/architecture_index.md","sourceDirName":".","slug":"/architecture_index","permalink":"/docs/architecture_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/architecture_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Architecture overview"},"sidebar":"Overview"},{"id":"architecture/core","title":"Core architecture","description":"The Home Assistant Core consists of four main parts. On top of this it includes many helper classes to deal with common scenarios, like providing an entity or dealing with locations.","source":"@site/docs/architecture/core.md","sourceDirName":"architecture","slug":"/architecture/core","permalink":"/docs/architecture/core","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/architecture/core.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Core architecture","sidebar_label":"Core"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/development_index"},"next":{"title":"Integrations","permalink":"/docs/architecture_components"}},{"id":"architecture/devices-and-services","title":"Entities: integrating devices & services","description":"Integrations can represent devices & services in Home Assistant. The data points are represented as entities. Entities are standardized by other integrations like light, switch, etc. Standardized entities come with actions for control, but an integration can also provide their own service actions in case something is not standardized.","source":"@site/docs/architecture/devices-and-services.md","sourceDirName":"architecture","slug":"/architecture/devices-and-services","permalink":"/docs/architecture/devices-and-services","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/architecture/devices-and-services.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities: integrating devices & services","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Weather","permalink":"/docs/core/entity/weather"},"next":{"title":"Entity registry","permalink":"/docs/entity_registry_index"}},{"id":"area_registry_index","title":"Area registry","description":"The area registry is a registry where Home Assistant keeps track of areas. An area represents a physical location for Home Assistant. It can be used to place devices in different areas.","source":"@site/docs/area_registry_index.md","sourceDirName":".","slug":"/area_registry_index","permalink":"/docs/area_registry_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/area_registry_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Area registry"},"sidebar":"Core","previous":{"title":"Device registry","permalink":"/docs/device_registry_index"},"next":{"title":"Introduction","permalink":"/docs/auth_index"}},{"id":"asyncio_101","title":"Asyncio 101","description":"If you are not familiar yet with asyncio, please watch the below video. It's a great introduction by Robert Smallshire in how and why asyncio works the way it does.","source":"@site/docs/asyncio_101.md","sourceDirName":".","slug":"/asyncio_101","permalink":"/docs/asyncio_101","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_101.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Asyncio 101"},"sidebar":"Misc","previous":{"title":"Introduction","permalink":"/docs/asyncio_index"},"next":{"title":"Categorizing functions","permalink":"/docs/asyncio_categorizing_functions"}},{"id":"asyncio_blocking_operations","title":"Blocking operations with asyncio","description":"When writing asyncio code, it's essential to ensure that all blocking operations are done in a separate thread. If blocking operations happen in the event loop, nothing else can run until the operation is complete. For this reason, no blocking operations happen in the event loop, as the entire system will stall for the duration of the blocking operation.","source":"@site/docs/asyncio_blocking_operations.md","sourceDirName":".","slug":"/asyncio_blocking_operations","permalink":"/docs/asyncio_blocking_operations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_blocking_operations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Blocking operations with asyncio"},"sidebar":"Misc","previous":{"title":"Thread safety with asyncio","permalink":"/docs/asyncio_thread_safety"}},{"id":"asyncio_categorizing_functions","title":"Categorizing functions","description":"A piece of work within Home Assistant is represented by a function that will be invoked. It will either run inside our event loop or inside our thread pool, depending on if it is async safe.","source":"@site/docs/asyncio_categorizing_functions.md","sourceDirName":".","slug":"/asyncio_categorizing_functions","permalink":"/docs/asyncio_categorizing_functions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_categorizing_functions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Categorizing functions"},"sidebar":"Misc","previous":{"title":"Asyncio 101","permalink":"/docs/asyncio_101"},"next":{"title":"Working with Async","permalink":"/docs/asyncio_working_with_async"}},{"id":"asyncio_index","title":"Asynchronous programming","description":"On September 29, 2016 we released Home Assistant 0.29 as part of our bi-weekly release schedule. This release introduced a complete overhaul of the core spearheaded by Ben Bangert.","source":"@site/docs/asyncio_index.md","sourceDirName":".","slug":"/asyncio_index","permalink":"/docs/asyncio_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Asynchronous programming","sidebar_label":"Introduction"},"sidebar":"Misc","previous":{"title":"Modelling data","permalink":"/docs/api_lib_data_models"},"next":{"title":"Asyncio 101","permalink":"/docs/asyncio_101"}},{"id":"asyncio_thread_safety","title":"Thread safety with asyncio","description":"Developing with asyncio requires careful attention to thread safety, as nearly all asyncio objects are not thread-safe. If you are just getting started with asyncio, review Python's documentation on Developing with asyncio for tips to avoid pitfalls.","source":"@site/docs/asyncio_thread_safety.md","sourceDirName":".","slug":"/asyncio_thread_safety","permalink":"/docs/asyncio_thread_safety","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_thread_safety.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Thread safety with asyncio"},"sidebar":"Misc","previous":{"title":"Working with Async","permalink":"/docs/asyncio_working_with_async"},"next":{"title":"Blocking operations with asyncio","permalink":"/docs/asyncio_blocking_operations"}},{"id":"asyncio_working_with_async","title":"Working with Async","description":"Although we have a backwards compatible API, using the async core directly will be a lot faster. Most core components have already been rewritten to leverage the async core. This includes the EntityComponent helper (foundation of light, switch, etc), scripts, groups and automation.","source":"@site/docs/asyncio_working_with_async.md","sourceDirName":".","slug":"/asyncio_working_with_async","permalink":"/docs/asyncio_working_with_async","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/asyncio_working_with_async.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Working with Async"},"sidebar":"Misc","previous":{"title":"Categorizing functions","permalink":"/docs/asyncio_categorizing_functions"},"next":{"title":"Thread safety with asyncio","permalink":"/docs/asyncio_thread_safety"}},{"id":"auth_api","title":"Authentication API","description":"This page will describe the steps required for your application to authorize against and integrate with Home Assistant instances. See a demo powered by our helper lib home-assistant-js-websocket.","source":"@site/docs/auth_api.md","sourceDirName":".","slug":"/auth_api","permalink":"/docs/auth_api","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/auth_api.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Authentication API","sidebar_label":"API"},"sidebar":"Core","previous":{"title":"Permissions","permalink":"/docs/auth_permissions"},"next":{"title":"Authentication providers","permalink":"/docs/auth_auth_provider"}},{"id":"auth_auth_module","title":"Multi-factor authentication modules","description":"Multi-factor Authentication Modules are used in conjunction with Authentication Provider to provide a fully configurable authentication framework. Each MFA module may provide one multi-factor authentication function. User can enable multiple mfa modules, but can only select one module in login process.","source":"@site/docs/auth_auth_module.md","sourceDirName":".","slug":"/auth_auth_module","permalink":"/docs/auth_auth_module","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/auth_auth_module.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Multi-factor authentication modules"},"sidebar":"Core","previous":{"title":"Authentication providers","permalink":"/docs/auth_auth_provider"},"next":{"title":"Config entries","permalink":"/docs/config_entries_index"}},{"id":"auth_auth_provider","title":"Authentication providers","description":"Authentication providers confirm the identity of users. The user proofs their identity by going through the login flow for an auth provider. The auth provider defines the login flow and can ask the user all information this needs. This will commonly be username and password but could also include a 2FA token or other challenges.","source":"@site/docs/auth_auth_provider.md","sourceDirName":".","slug":"/auth_auth_provider","permalink":"/docs/auth_auth_provider","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/auth_auth_provider.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Authentication providers"},"sidebar":"Core","previous":{"title":"API","permalink":"/docs/auth_api"},"next":{"title":"Multi-factor authentication modules","permalink":"/docs/auth_auth_module"}},{"id":"auth_index","title":"Authentication","description":"Home Assistant has a built-in authentication system allowing different users to interact with Home Assistant. The authentication system consist of various parts.","source":"@site/docs/auth_index.md","sourceDirName":".","slug":"/auth_index","permalink":"/docs/auth_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/auth_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Authentication","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Area registry","permalink":"/docs/area_registry_index"},"next":{"title":"Permissions","permalink":"/docs/auth_permissions"}},{"id":"auth_permissions","title":"Permissions","description":"This is an experimental feature that is not enabled or enforced yet","source":"@site/docs/auth_permissions.md","sourceDirName":".","slug":"/auth_permissions","permalink":"/docs/auth_permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/auth_permissions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Permissions"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/auth_index"},"next":{"title":"API","permalink":"/docs/auth_api"}},{"id":"bluetooth","title":"Bluetooth","description":"Best practices for integration authors","source":"@site/docs/bluetooth.md","sourceDirName":".","slug":"/bluetooth","permalink":"/docs/bluetooth","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/bluetooth.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Bluetooth","sidebar_label":"Building a Bluetooth integration"},"sidebar":"Core","previous":{"title":"Networking and discovery","permalink":"/docs/network_discovery"},"next":{"title":"Fetching Bluetooth data","permalink":"/docs/core/bluetooth/bluetooth_fetching_data"}},{"id":"config_entries_config_flow_handler","title":"Config flow","description":"Integrations can be set up via the user interface by adding support for a config flow to create a config entry. Components that want to support config entries will need to define a Config Flow Handler. This handler will manage the creation of entries from user input, discovery or other sources (like Home Assistant OS).","source":"@site/docs/config_entries_config_flow_handler.md","sourceDirName":".","slug":"/config_entries_config_flow_handler","permalink":"/docs/config_entries_config_flow_handler","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/config_entries_config_flow_handler.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Config flow"},"sidebar":"Core","previous":{"title":"Manifest","permalink":"/docs/creating_integration_manifest"},"next":{"title":"Options flow","permalink":"/docs/config_entries_options_flow_handler"}},{"id":"config_entries_index","title":"Config entries","description":"Config Entries are configuration data that are persistently stored by Home Assistant. A config entry is created by a user via the UI. The UI flow is powered by a config flow handler as defined by the component. Config entries can also have an extra options flow handler, also defined by the component.","source":"@site/docs/config_entries_index.md","sourceDirName":".","slug":"/config_entries_index","permalink":"/docs/config_entries_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/config_entries_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Config entries"},"sidebar":"Core","previous":{"title":"Multi-factor authentication modules","permalink":"/docs/auth_auth_module"},"next":{"title":"Data entry flow","permalink":"/docs/data_entry_flow_index"}},{"id":"config_entries_options_flow_handler","title":"Options flow","description":"An integration that is configured via a config entry can expose options to the user to allow tweaking behavior of the integration, like which devices or locations should be integrated.","source":"@site/docs/config_entries_options_flow_handler.md","sourceDirName":".","slug":"/config_entries_options_flow_handler","permalink":"/docs/config_entries_options_flow_handler","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/config_entries_options_flow_handler.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Options flow"},"sidebar":"Core","previous":{"title":"Config flow","permalink":"/docs/config_entries_config_flow_handler"},"next":{"title":"Diagnostics","permalink":"/docs/core/integration_diagnostics"}},{"id":"configuration_yaml_index","title":"Integration configuration via YAML","description":"configuration.yaml is a configuration file defined by the user. It is automatically created by Home Assistant on first launch. It defines which components to load.","source":"@site/docs/configuration_yaml_index.md","sourceDirName":".","slug":"/configuration_yaml_index","permalink":"/docs/configuration_yaml_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/configuration_yaml_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration configuration via YAML"},"sidebar":"Core","previous":{"title":"System health","permalink":"/docs/core/integration_system_health"},"next":{"title":"Custom actions","permalink":"/docs/dev_101_services"}},{"id":"core/bluetooth/api","title":"Bluetooth APIs","description":"Subscribing to Bluetooth discoveries","source":"@site/docs/core/bluetooth/api.md","sourceDirName":"core/bluetooth","slug":"/core/bluetooth/api","permalink":"/docs/core/bluetooth/api","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/bluetooth/api.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Bluetooth APIs"},"sidebar":"Core","previous":{"title":"Fetching Bluetooth data","permalink":"/docs/core/bluetooth/bluetooth_fetching_data"},"next":{"title":"Introduction","permalink":"/docs/development_checklist"}},{"id":"core/bluetooth/bluetooth_fetching_data","title":"Fetching Bluetooth data","description":"Choosing a method to fetch data","source":"@site/docs/core/bluetooth/bluetooth_fetching_data.md","sourceDirName":"core/bluetooth","slug":"/core/bluetooth/bluetooth_fetching_data","permalink":"/docs/core/bluetooth/bluetooth_fetching_data","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/bluetooth/bluetooth_fetching_data.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Fetching Bluetooth data"},"sidebar":"Core","previous":{"title":"Building a Bluetooth integration","permalink":"/docs/bluetooth"},"next":{"title":"Bluetooth APIs","permalink":"/docs/core/bluetooth/api"}},{"id":"core/entity","title":"Entity","description":"For a generic introduction of entities, see entities architecture.","source":"@site/docs/core/entity.md","sourceDirName":"core","slug":"/core/entity","permalink":"/docs/core/entity","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entity","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Config","permalink":"/docs/dev_101_config"},"next":{"title":"Air quality","permalink":"/docs/core/entity/air-quality"}},{"id":"core/entity/air-quality","title":"Air quality entity","description":"Properties","source":"@site/docs/core/entity/air-quality.md","sourceDirName":"core/entity","slug":"/core/entity/air-quality","permalink":"/docs/core/entity/air-quality","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/air-quality.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Air quality entity","sidebar_label":"Air quality"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/core/entity"},"next":{"title":"Alarm control panel","permalink":"/docs/core/entity/alarm-control-panel"}},{"id":"core/entity/alarm-control-panel","title":"Alarm control panel entity","description":"An alarm control panel entity controls an alarm.  Derive a platform entity from homeassistant.components.alarmcontrolpanel.AlarmControlPanelEntity.","source":"@site/docs/core/entity/alarm-control-panel.md","sourceDirName":"core/entity","slug":"/core/entity/alarm-control-panel","permalink":"/docs/core/entity/alarm-control-panel","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/alarm-control-panel.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Alarm control panel entity","sidebar_label":"Alarm control panel"},"sidebar":"Core","previous":{"title":"Air quality","permalink":"/docs/core/entity/air-quality"},"next":{"title":"Assist satellite","permalink":"/docs/core/entity/assist-satellite"}},{"id":"core/entity/assist-satellite","title":"Assist satellite entity","description":"An Assist Satellite entity represents the Assist pipeline-powered voice assistant capabilities of a device. Devices with such entities can allow users to control Home Assistant using their voice.","source":"@site/docs/core/entity/assist-satellite.md","sourceDirName":"core/entity","slug":"/core/entity/assist-satellite","permalink":"/docs/core/entity/assist-satellite","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/assist-satellite.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Assist satellite entity","sidebar_label":"Assist satellite"},"sidebar":"Core","previous":{"title":"Alarm control panel","permalink":"/docs/core/entity/alarm-control-panel"},"next":{"title":"Binary sensor","permalink":"/docs/core/entity/binary-sensor"}},{"id":"core/entity/binary-sensor","title":"Binary sensor entity","description":"A binary sensor is a sensor that can only have two states. Derive entity platforms from homeassistant.components.binarysensor.BinarySensorEntity","source":"@site/docs/core/entity/binary-sensor.md","sourceDirName":"core/entity","slug":"/core/entity/binary-sensor","permalink":"/docs/core/entity/binary-sensor","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/binary-sensor.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Binary sensor entity","sidebar_label":"Binary sensor"},"sidebar":"Core","previous":{"title":"Assist satellite","permalink":"/docs/core/entity/assist-satellite"},"next":{"title":"Button","permalink":"/docs/core/entity/button"}},{"id":"core/entity/button","title":"Button entity","description":"A button entity is an entity that can fire an event / trigger an action towards a device or service but remains stateless from the Home Assistant perspective.","source":"@site/docs/core/entity/button.md","sourceDirName":"core/entity","slug":"/core/entity/button","permalink":"/docs/core/entity/button","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/button.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Button entity","sidebar_label":"Button"},"sidebar":"Core","previous":{"title":"Binary sensor","permalink":"/docs/core/entity/binary-sensor"},"next":{"title":"Calendar","permalink":"/docs/core/entity/calendar"}},{"id":"core/entity/calendar","title":"Calendar entity","description":"A calendar entity is an entity that represents a set of events with a start","source":"@site/docs/core/entity/calendar.md","sourceDirName":"core/entity","slug":"/core/entity/calendar","permalink":"/docs/core/entity/calendar","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/calendar.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Calendar entity","sidebar_label":"Calendar"},"sidebar":"Core","previous":{"title":"Button","permalink":"/docs/core/entity/button"},"next":{"title":"Camera","permalink":"/docs/core/entity/camera"}},{"id":"core/entity/camera","title":"Camera entity","description":"A camera entity can display images, and optionally a video stream. Derive a platform entity from homeassistant.components.camera.Camera.","source":"@site/docs/core/entity/camera.md","sourceDirName":"core/entity","slug":"/core/entity/camera","permalink":"/docs/core/entity/camera","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/camera.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Camera entity","sidebar_label":"Camera"},"sidebar":"Core","previous":{"title":"Calendar","permalink":"/docs/core/entity/calendar"},"next":{"title":"Climate","permalink":"/docs/core/entity/climate"}},{"id":"core/entity/climate","title":"Climate entity","description":"A climate entity controls temperature, humidity, or fans, such as A/C systems and humidifiers. Derive a platform entity from homeassistant.components.climate.ClimateEntity","source":"@site/docs/core/entity/climate.md","sourceDirName":"core/entity","slug":"/core/entity/climate","permalink":"/docs/core/entity/climate","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/climate.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Climate entity","sidebar_label":"Climate"},"sidebar":"Core","previous":{"title":"Camera","permalink":"/docs/core/entity/camera"},"next":{"title":"Conversation","permalink":"/docs/core/entity/conversation"}},{"id":"core/entity/conversation","title":"Conversation entity","description":"A conversation entity allows users to converse with Home Assistant.","source":"@site/docs/core/entity/conversation.md","sourceDirName":"core/entity","slug":"/core/entity/conversation","permalink":"/docs/core/entity/conversation","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/conversation.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Conversation entity","sidebar_label":"Conversation"},"sidebar":"Core","previous":{"title":"Climate","permalink":"/docs/core/entity/climate"},"next":{"title":"Cover","permalink":"/docs/core/entity/cover"}},{"id":"core/entity/cover","title":"Cover entity","description":"A cover entity controls an opening or cover, such as a garage door or a window shade. Derive a platform entity from homeassistant.components.cover.CoverEntity.","source":"@site/docs/core/entity/cover.md","sourceDirName":"core/entity","slug":"/core/entity/cover","permalink":"/docs/core/entity/cover","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/cover.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Cover entity","sidebar_label":"Cover"},"sidebar":"Core","previous":{"title":"Conversation","permalink":"/docs/core/entity/conversation"},"next":{"title":"Date","permalink":"/docs/core/entity/date"}},{"id":"core/entity/date","title":"Date entity","description":"A date is an entity that allows the user to input a date to an integration. Derive entity platforms from homeassistant.components.date.DateEntity","source":"@site/docs/core/entity/date.md","sourceDirName":"core/entity","slug":"/core/entity/date","permalink":"/docs/core/entity/date","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/date.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Date entity","sidebar_label":"Date"},"sidebar":"Core","previous":{"title":"Cover","permalink":"/docs/core/entity/cover"},"next":{"title":"Date/Time","permalink":"/docs/core/entity/datetime"}},{"id":"core/entity/datetime","title":"Date/Time entity","description":"A datetime is an entity that allows the user to input a timestamp to an integration. Derive entity platforms from homeassistant.components.datetime.DateTimeEntity","source":"@site/docs/core/entity/datetime.md","sourceDirName":"core/entity","slug":"/core/entity/datetime","permalink":"/docs/core/entity/datetime","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/datetime.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Date/Time entity","sidebar_label":"Date/Time"},"sidebar":"Core","previous":{"title":"Date","permalink":"/docs/core/entity/date"},"next":{"title":"Device tracker","permalink":"/docs/core/entity/device-tracker"}},{"id":"core/entity/device-tracker","title":"Device tracker entity","description":"A device tracker is a read-only entity that provides presence information. There are two types of device tracker entities, a ScannerEntity and a TrackerEntity.","source":"@site/docs/core/entity/device-tracker.md","sourceDirName":"core/entity","slug":"/core/entity/device-tracker","permalink":"/docs/core/entity/device-tracker","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/device-tracker.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device tracker entity","sidebar_label":"Device tracker"},"sidebar":"Core","previous":{"title":"Date/Time","permalink":"/docs/core/entity/datetime"},"next":{"title":"Event","permalink":"/docs/core/entity/event"}},{"id":"core/entity/event","title":"Event entity","description":"Events are signals that are emitted when something happens, for example, when a user presses a physical button like a doorbell or when a button on a remote control is pressed. The event entity captures these events in the physical world and makes them available in Home Assistant as an entity.","source":"@site/docs/core/entity/event.md","sourceDirName":"core/entity","slug":"/core/entity/event","permalink":"/docs/core/entity/event","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/event.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Event entity","sidebar_label":"Event"},"sidebar":"Core","previous":{"title":"Device tracker","permalink":"/docs/core/entity/device-tracker"},"next":{"title":"Fan","permalink":"/docs/core/entity/fan"}},{"id":"core/entity/fan","title":"Fan entity","description":"A fan entity is a device that controls the different vectors of your fan such as speed, direction and oscillation. Derive entity platforms from 'homeassistant.components.fan.FanEntity'.","source":"@site/docs/core/entity/fan.md","sourceDirName":"core/entity","slug":"/core/entity/fan","permalink":"/docs/core/entity/fan","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/fan.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Fan entity","sidebar_label":"Fan"},"sidebar":"Core","previous":{"title":"Event","permalink":"/docs/core/entity/event"},"next":{"title":"Humidifier","permalink":"/docs/core/entity/humidifier"}},{"id":"core/entity/humidifier","title":"Humidifier entity","description":"A humidifier entity is a device whose main purpose is to control humidity, i.e. a humidifier or dehumidifier. Derive entity platforms from homeassistant.components.humidifier.HumidifierEntity","source":"@site/docs/core/entity/humidifier.md","sourceDirName":"core/entity","slug":"/core/entity/humidifier","permalink":"/docs/core/entity/humidifier","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/humidifier.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Humidifier entity","sidebar_label":"Humidifier"},"sidebar":"Core","previous":{"title":"Fan","permalink":"/docs/core/entity/fan"},"next":{"title":"Image","permalink":"/docs/core/entity/image"}},{"id":"core/entity/image","title":"Image entity","description":"An image entity can display a static image. Derive a platform entity from homeassistant.components.image.ImageEntity.","source":"@site/docs/core/entity/image.md","sourceDirName":"core/entity","slug":"/core/entity/image","permalink":"/docs/core/entity/image","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/image.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Image entity","sidebar_label":"Image"},"sidebar":"Core","previous":{"title":"Humidifier","permalink":"/docs/core/entity/humidifier"},"next":{"title":"Lawn mower","permalink":"/docs/core/entity/lawn-mower"}},{"id":"core/entity/lawn-mower","title":"Lawn mower entity","description":"Derive entity platforms from homeassistant.components.lawnmower.LawnMowerEntity","source":"@site/docs/core/entity/lawn-mower.md","sourceDirName":"core/entity","slug":"/core/entity/lawn-mower","permalink":"/docs/core/entity/lawn-mower","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/lawn-mower.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Lawn mower entity","sidebar_label":"Lawn mower"},"sidebar":"Core","previous":{"title":"Image","permalink":"/docs/core/entity/image"},"next":{"title":"Light","permalink":"/docs/core/entity/light"}},{"id":"core/entity/light","title":"Light entity","description":"A light entity controls the brightness, hue and saturation color value, white value, color temperature and effects of a light source. Derive platform entities from homeassistant.components.light.LightEntity.","source":"@site/docs/core/entity/light.md","sourceDirName":"core/entity","slug":"/core/entity/light","permalink":"/docs/core/entity/light","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/light.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Light entity","sidebar_label":"Light"},"sidebar":"Core","previous":{"title":"Lawn mower","permalink":"/docs/core/entity/lawn-mower"},"next":{"title":"Lock","permalink":"/docs/core/entity/lock"}},{"id":"core/entity/lock","title":"Lock entity","description":"A lock entity is able to be locked and unlocked. Locking and unlocking can optionally be secured with a user code. Some locks also allow for opening of latches, this may also be secured with a user code. Derive a platform entity from homeassistant.components.lock.LockEntity.","source":"@site/docs/core/entity/lock.md","sourceDirName":"core/entity","slug":"/core/entity/lock","permalink":"/docs/core/entity/lock","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/lock.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Lock entity","sidebar_label":"Lock"},"sidebar":"Core","previous":{"title":"Light","permalink":"/docs/core/entity/light"},"next":{"title":"Media player","permalink":"/docs/core/entity/media-player"}},{"id":"core/entity/media-player","title":"Media player entity","description":"This entry is incomplete. Contribution welcome.","source":"@site/docs/core/entity/media-player.md","sourceDirName":"core/entity","slug":"/core/entity/media-player","permalink":"/docs/core/entity/media-player","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/media-player.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Media player entity","sidebar_label":"Media player"},"sidebar":"Core","previous":{"title":"Lock","permalink":"/docs/core/entity/lock"},"next":{"title":"Notify","permalink":"/docs/core/entity/notify"}},{"id":"core/entity/notify","title":"Notify entity","description":"A notify entity is an entity that can send a message towards a device or service but remains stateless from the Home Assistant perspective.","source":"@site/docs/core/entity/notify.md","sourceDirName":"core/entity","slug":"/core/entity/notify","permalink":"/docs/core/entity/notify","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/notify.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Notify entity","sidebar_label":"Notify"},"sidebar":"Core","previous":{"title":"Media player","permalink":"/docs/core/entity/media-player"},"next":{"title":"Number","permalink":"/docs/core/entity/number"}},{"id":"core/entity/number","title":"Number entity","description":"A number is an entity that allows the user to input an arbitrary value to an integration. Derive entity platforms from homeassistant.components.number.NumberEntity","source":"@site/docs/core/entity/number.md","sourceDirName":"core/entity","slug":"/core/entity/number","permalink":"/docs/core/entity/number","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/number.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Number entity","sidebar_label":"Number"},"sidebar":"Core","previous":{"title":"Notify","permalink":"/docs/core/entity/notify"},"next":{"title":"Remote","permalink":"/docs/core/entity/remote"}},{"id":"core/entity/remote","title":"Remote entity","description":"The remote entity can represent two different types of devices:","source":"@site/docs/core/entity/remote.md","sourceDirName":"core/entity","slug":"/core/entity/remote","permalink":"/docs/core/entity/remote","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/remote.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Remote entity","sidebar_label":"Remote"},"sidebar":"Core","previous":{"title":"Number","permalink":"/docs/core/entity/number"},"next":{"title":"Scene","permalink":"/docs/core/entity/scene"}},{"id":"core/entity/scene","title":"Scene entity","description":"A scene entity is an entity that can reproduce a wanted state for a group of entities. A scene entity can activate the scene towards a group of devices but remains stateless from the Home Assistant perspective.","source":"@site/docs/core/entity/scene.md","sourceDirName":"core/entity","slug":"/core/entity/scene","permalink":"/docs/core/entity/scene","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/scene.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Scene entity","sidebar_label":"Scene"},"sidebar":"Core","previous":{"title":"Remote","permalink":"/docs/core/entity/remote"},"next":{"title":"Select","permalink":"/docs/core/entity/select"}},{"id":"core/entity/select","title":"Select entity","description":"A select is an entity that allows the user to select an option from a list of limited options provided by the integration. Derive entity platforms from homeassistant.components.select.SelectEntity","source":"@site/docs/core/entity/select.md","sourceDirName":"core/entity","slug":"/core/entity/select","permalink":"/docs/core/entity/select","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/select.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Select entity","sidebar_label":"Select"},"sidebar":"Core","previous":{"title":"Scene","permalink":"/docs/core/entity/scene"},"next":{"title":"Sensor","permalink":"/docs/core/entity/sensor"}},{"id":"core/entity/sensor","title":"Sensor entity","description":"A sensor is a read-only entity that provides some information. Information has a value and optionally, a unit of measurement. Derive entity platforms from homeassistant.components.sensor.SensorEntity","source":"@site/docs/core/entity/sensor.md","sourceDirName":"core/entity","slug":"/core/entity/sensor","permalink":"/docs/core/entity/sensor","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/sensor.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Sensor entity","sidebar_label":"Sensor"},"sidebar":"Core","previous":{"title":"Select","permalink":"/docs/core/entity/select"},"next":{"title":"Siren","permalink":"/docs/core/entity/siren"}},{"id":"core/entity/siren","title":"Siren entity","description":"A siren entity is a device whose main purpose is to control siren devices like a doorbell or chime. Derive entity platforms from homeassistant.components.siren.SirenEntity","source":"@site/docs/core/entity/siren.md","sourceDirName":"core/entity","slug":"/core/entity/siren","permalink":"/docs/core/entity/siren","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/siren.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Siren entity","sidebar_label":"Siren"},"sidebar":"Core","previous":{"title":"Sensor","permalink":"/docs/core/entity/sensor"},"next":{"title":"Speech-to-text","permalink":"/docs/core/entity/stt"}},{"id":"core/entity/stt","title":"Speech-to-text entity","description":"A speech-to-text (STT) entity allows other integrations or applications to stream speech data to the STT API and get text back.","source":"@site/docs/core/entity/stt.md","sourceDirName":"core/entity","slug":"/core/entity/stt","permalink":"/docs/core/entity/stt","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/stt.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Speech-to-text entity","sidebar_label":"Speech-to-text"},"sidebar":"Core","previous":{"title":"Siren","permalink":"/docs/core/entity/siren"},"next":{"title":"Switch","permalink":"/docs/core/entity/switch"}},{"id":"core/entity/switch","title":"Switch entity","description":"A switch entity turns on or off something, for example a relay. Derive a platform entity from homeassistant.components.switch.SwitchEntity.","source":"@site/docs/core/entity/switch.md","sourceDirName":"core/entity","slug":"/core/entity/switch","permalink":"/docs/core/entity/switch","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/switch.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Switch entity","sidebar_label":"Switch"},"sidebar":"Core","previous":{"title":"Speech-to-text","permalink":"/docs/core/entity/stt"},"next":{"title":"Text","permalink":"/docs/core/entity/text"}},{"id":"core/entity/text","title":"Text entity","description":"A text entity is an entity that allows the user to input a text value to an integration. Derive entity platforms from homeassistant.components.text.TextEntity","source":"@site/docs/core/entity/text.md","sourceDirName":"core/entity","slug":"/core/entity/text","permalink":"/docs/core/entity/text","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/text.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Text entity","sidebar_label":"Text"},"sidebar":"Core","previous":{"title":"Switch","permalink":"/docs/core/entity/switch"},"next":{"title":"Time","permalink":"/docs/core/entity/time"}},{"id":"core/entity/time","title":"Time entity","description":"A time is an entity that allows the user to input a time to an integration. Derive entity platforms from homeassistant.components.time.TimeEntity","source":"@site/docs/core/entity/time.md","sourceDirName":"core/entity","slug":"/core/entity/time","permalink":"/docs/core/entity/time","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/time.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Time entity","sidebar_label":"Time"},"sidebar":"Core","previous":{"title":"Text","permalink":"/docs/core/entity/text"},"next":{"title":"To-do list","permalink":"/docs/core/entity/todo"}},{"id":"core/entity/todo","title":"To-do list entity","description":"A To-do list entity is an entity that represents a To-do list. A To-do list contains","source":"@site/docs/core/entity/todo.md","sourceDirName":"core/entity","slug":"/core/entity/todo","permalink":"/docs/core/entity/todo","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/todo.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"To-do list entity","sidebar_label":"To-do list"},"sidebar":"Core","previous":{"title":"Time","permalink":"/docs/core/entity/time"},"next":{"title":"Text-to-speech","permalink":"/docs/core/entity/tts"}},{"id":"core/entity/tts","title":"Text-to-speech entity","description":"A text-to-speech (TTS) entity enables Home Assistant to speak to you.","source":"@site/docs/core/entity/tts.md","sourceDirName":"core/entity","slug":"/core/entity/tts","permalink":"/docs/core/entity/tts","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/tts.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Text-to-speech entity","sidebar_label":"Text-to-speech"},"sidebar":"Core","previous":{"title":"To-do list","permalink":"/docs/core/entity/todo"},"next":{"title":"Update","permalink":"/docs/core/entity/update"}},{"id":"core/entity/update","title":"Update entity","description":"An update entity is an entity that indicates if an update is available for a","source":"@site/docs/core/entity/update.md","sourceDirName":"core/entity","slug":"/core/entity/update","permalink":"/docs/core/entity/update","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/update.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Update entity","sidebar_label":"Update"},"sidebar":"Core","previous":{"title":"Text-to-speech","permalink":"/docs/core/entity/tts"},"next":{"title":"Vacuum","permalink":"/docs/core/entity/vacuum"}},{"id":"core/entity/vacuum","title":"Vacuum entity","description":"Derive entity platforms from homeassistant.components.vacuum.StateVacuumEntity","source":"@site/docs/core/entity/vacuum.md","sourceDirName":"core/entity","slug":"/core/entity/vacuum","permalink":"/docs/core/entity/vacuum","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/vacuum.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Vacuum entity","sidebar_label":"Vacuum"},"sidebar":"Core","previous":{"title":"Update","permalink":"/docs/core/entity/update"},"next":{"title":"Valve","permalink":"/docs/core/entity/valve"}},{"id":"core/entity/valve","title":"Valve entity","description":"A valve entity controls valve devices such as the water or gas valves in your home. Derive a platform entity from homeassistant.components.valve.ValveEntity.","source":"@site/docs/core/entity/valve.md","sourceDirName":"core/entity","slug":"/core/entity/valve","permalink":"/docs/core/entity/valve","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/valve.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Valve entity","sidebar_label":"Valve"},"sidebar":"Core","previous":{"title":"Vacuum","permalink":"/docs/core/entity/vacuum"},"next":{"title":"Wake word detection","permalink":"/docs/core/entity/wake_word"}},{"id":"core/entity/wake_word","title":"Wake word detection entity","description":"A wake word detection entity allows other integrations or applications to detect wake words (also called hotwords) in an audio stream.","source":"@site/docs/core/entity/wake_word.md","sourceDirName":"core/entity","slug":"/core/entity/wake_word","permalink":"/docs/core/entity/wake_word","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/wake_word.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Wake word detection entity","sidebar_label":"Wake word detection"},"sidebar":"Core","previous":{"title":"Valve","permalink":"/docs/core/entity/valve"},"next":{"title":"Water heater","permalink":"/docs/core/entity/water-heater"}},{"id":"core/entity/water-heater","title":"Water heater entity","description":"Derive entity platforms from homeassistant.components.waterheater.WaterHeaterEntity","source":"@site/docs/core/entity/water-heater.md","sourceDirName":"core/entity","slug":"/core/entity/water-heater","permalink":"/docs/core/entity/water-heater","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/water-heater.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Water heater entity","sidebar_label":"Water heater"},"sidebar":"Core","previous":{"title":"Wake word detection","permalink":"/docs/core/entity/wake_word"},"next":{"title":"Weather","permalink":"/docs/core/entity/weather"}},{"id":"core/entity/weather","title":"Weather entity","description":"Derive entity platforms from homeassistant.components.weather.WeatherEntity","source":"@site/docs/core/entity/weather.md","sourceDirName":"core/entity","slug":"/core/entity/weather","permalink":"/docs/core/entity/weather","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/entity/weather.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Weather entity","sidebar_label":"Weather"},"sidebar":"Core","previous":{"title":"Water heater","permalink":"/docs/core/entity/water-heater"},"next":{"title":"Introduction","permalink":"/docs/architecture/devices-and-services"}},{"id":"core/integration_diagnostics","title":"Integration diagnostics","description":"Integrations can provide diagnostics to help the user gather data to aid in troubleshooting. Diagnostics can be provided for config entries but also individually for each device entry.","source":"@site/docs/core/integration_diagnostics.md","sourceDirName":"core","slug":"/core/integration_diagnostics","permalink":"/docs/core/integration_diagnostics","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration_diagnostics.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration diagnostics","sidebar_label":"Diagnostics"},"sidebar":"Core","previous":{"title":"Options flow","permalink":"/docs/config_entries_options_flow_handler"},"next":{"title":"System health","permalink":"/docs/core/integration_system_health"}},{"id":"core/integration_system_health","title":"Integration system health","description":"The system health platform allows integrations to provide information that helps users understand the state of the integration. This can include details such as the availability of an endpoint, the current server that the integration is connected to, how much of a request quota is still available, etc.","source":"@site/docs/core/integration_system_health.md","sourceDirName":"core","slug":"/core/integration_system_health","permalink":"/docs/core/integration_system_health","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration_system_health.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration system health","sidebar_label":"System health"},"sidebar":"Core","previous":{"title":"Diagnostics","permalink":"/docs/core/integration_diagnostics"},"next":{"title":"Integration configuration via YAML","permalink":"/docs/configuration_yaml_index"}},{"id":"core/integration-quality-scale/checklist","title":"Checklist","description":"When changing the quality scale of an integration, make sure you have completed the rules before opening the PR to change the quality scale.","source":"@site/docs/core/integration-quality-scale/checklist.md","sourceDirName":"core/integration-quality-scale","slug":"/core/integration-quality-scale/checklist","permalink":"/docs/core/integration-quality-scale/checklist","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/checklist.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Checklist"},"sidebar":"Core","previous":{"title":"Integration quality scale","permalink":"/docs/core/integration-quality-scale/"},"next":{"title":"Service actions are registered in async_setup","permalink":"/docs/core/integration-quality-scale/rules/action-setup"}},{"id":"core/integration-quality-scale/index","title":"Integration quality scale","description":"The integration quality scale is a framework for Home Assistant to grade integrations based on user experience, features, code quality and developer experience.","source":"@site/docs/core/integration-quality-scale/index.md","sourceDirName":"core/integration-quality-scale","slug":"/core/integration-quality-scale/","permalink":"/docs/core/integration-quality-scale/","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration quality scale"},"sidebar":"Core","previous":{"title":"Platform checklist","permalink":"/docs/creating_platform_code_review"},"next":{"title":"Checklist","permalink":"/docs/core/integration-quality-scale/checklist"}},{"id":"core/integration-quality-scale/rules/action-exceptions","title":"Service actions raise exceptions when encountering failures","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/action-exceptions.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/action-exceptions","permalink":"/docs/core/integration-quality-scale/rules/action-exceptions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/action-exceptions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Service actions raise exceptions when encountering failures","related_rules":["exception-translations","action-setup"]},"sidebar":"Core","previous":{"title":"Don't allow the same device or service to be able to be set up twice","permalink":"/docs/core/integration-quality-scale/rules/unique-config-entry"},"next":{"title":"Support config entry unloading","permalink":"/docs/core/integration-quality-scale/rules/config-entry-unloading"}},{"id":"core/integration-quality-scale/rules/action-setup","title":"Service actions are registered in async_setup","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/action-setup.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/action-setup","permalink":"/docs/core/integration-quality-scale/rules/action-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/action-setup.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Service actions are registered in async_setup","related_rules":["action-exceptions"]},"sidebar":"Core","previous":{"title":"Checklist","permalink":"/docs/core/integration-quality-scale/checklist"},"next":{"title":"If it's a polling integration, set an appropriate polling interval","permalink":"/docs/core/integration-quality-scale/rules/appropriate-polling"}},{"id":"core/integration-quality-scale/rules/appropriate-polling","title":"If it's a polling integration, set an appropriate polling interval","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/appropriate-polling.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/appropriate-polling","permalink":"/docs/core/integration-quality-scale/rules/appropriate-polling","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/appropriate-polling.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"If it's a polling integration, set an appropriate polling interval","related_rules":["parallel-updates"]},"sidebar":"Core","previous":{"title":"Service actions are registered in async_setup","permalink":"/docs/core/integration-quality-scale/rules/action-setup"},"next":{"title":"Has branding assets available for the integration","permalink":"/docs/core/integration-quality-scale/rules/brands"}},{"id":"core/integration-quality-scale/rules/async-dependency","title":"Dependency is async","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/async-dependency.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/async-dependency","permalink":"/docs/core/integration-quality-scale/rules/async-dependency","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/async-dependency.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Dependency is async","related_rules":["inject-websession"]},"sidebar":"Core","previous":{"title":"Clean up stale devices","permalink":"/docs/core/integration-quality-scale/rules/stale-devices"},"next":{"title":"The integration dependency supports passing in a websession","permalink":"/docs/core/integration-quality-scale/rules/inject-websession"}},{"id":"core/integration-quality-scale/rules/brands","title":"Has branding assets available for the integration","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/brands.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/brands","permalink":"/docs/core/integration-quality-scale/rules/brands","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/brands.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Has branding assets available for the integration"},"sidebar":"Core","previous":{"title":"If it's a polling integration, set an appropriate polling interval","permalink":"/docs/core/integration-quality-scale/rules/appropriate-polling"},"next":{"title":"Place common patterns in common modules","permalink":"/docs/core/integration-quality-scale/rules/common-modules"}},{"id":"core/integration-quality-scale/rules/common-modules","title":"Place common patterns in common modules","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/common-modules.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/common-modules","permalink":"/docs/core/integration-quality-scale/rules/common-modules","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/common-modules.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Place common patterns in common modules"},"sidebar":"Core","previous":{"title":"Has branding assets available for the integration","permalink":"/docs/core/integration-quality-scale/rules/brands"},"next":{"title":"Full test coverage for the config flow","permalink":"/docs/core/integration-quality-scale/rules/config-flow-test-coverage"}},{"id":"core/integration-quality-scale/rules/config-entry-unloading","title":"Support config entry unloading","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/config-entry-unloading.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/config-entry-unloading","permalink":"/docs/core/integration-quality-scale/rules/config-entry-unloading","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/config-entry-unloading.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Support config entry unloading","related_rules":["entity-event-setup"]},"sidebar":"Core","previous":{"title":"Service actions raise exceptions when encountering failures","permalink":"/docs/core/integration-quality-scale/rules/action-exceptions"},"next":{"title":"The documentation describes all integration configuration options","permalink":"/docs/core/integration-quality-scale/rules/docs-configuration-parameters"}},{"id":"core/integration-quality-scale/rules/config-flow","title":"Integration needs to be able to be set up via the UI","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/config-flow.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/config-flow","permalink":"/docs/core/integration-quality-scale/rules/config-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/config-flow.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration needs to be able to be set up via the UI","related_rules":["test-before-configure","unique-config-entry","config-flow-test-coverage","discovery","reauthentication-flow","reconfiguration-flow"]},"sidebar":"Core","previous":{"title":"Full test coverage for the config flow","permalink":"/docs/core/integration-quality-scale/rules/config-flow-test-coverage"},"next":{"title":"Dependency transparency","permalink":"/docs/core/integration-quality-scale/rules/dependency-transparency"}},{"id":"core/integration-quality-scale/rules/config-flow-test-coverage","title":"Full test coverage for the config flow","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/config-flow-test-coverage.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/config-flow-test-coverage","permalink":"/docs/core/integration-quality-scale/rules/config-flow-test-coverage","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/config-flow-test-coverage.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Full test coverage for the config flow","related_rules":["config-flow","test-before-configure","unique-config-entry","discovery","reauthentication-flow","reconfiguration-flow"]},"sidebar":"Core","previous":{"title":"Place common patterns in common modules","permalink":"/docs/core/integration-quality-scale/rules/common-modules"},"next":{"title":"Integration needs to be able to be set up via the UI","permalink":"/docs/core/integration-quality-scale/rules/config-flow"}},{"id":"core/integration-quality-scale/rules/dependency-transparency","title":"Dependency transparency","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/dependency-transparency.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/dependency-transparency","permalink":"/docs/core/integration-quality-scale/rules/dependency-transparency","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/dependency-transparency.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Dependency transparency","related_rules":["async-dependency"]},"sidebar":"Core","previous":{"title":"Integration needs to be able to be set up via the UI","permalink":"/docs/core/integration-quality-scale/rules/config-flow"},"next":{"title":"The documentation describes the provided service actions that can be used","permalink":"/docs/core/integration-quality-scale/rules/docs-actions"}},{"id":"core/integration-quality-scale/rules/devices","title":"The integration creates devices","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/devices.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/devices","permalink":"/docs/core/integration-quality-scale/rules/devices","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/devices.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The integration creates devices","related_rules":["has-entity-name"]},"sidebar":"Core","previous":{"title":"Above 95% test coverage for all integration modules","permalink":"/docs/core/integration-quality-scale/rules/test-coverage"},"next":{"title":"Implements diagnostics","permalink":"/docs/core/integration-quality-scale/rules/diagnostics"}},{"id":"core/integration-quality-scale/rules/diagnostics","title":"Implements diagnostics","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/diagnostics.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/diagnostics","permalink":"/docs/core/integration-quality-scale/rules/diagnostics","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/diagnostics.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Implements diagnostics"},"sidebar":"Core","previous":{"title":"The integration creates devices","permalink":"/docs/core/integration-quality-scale/rules/devices"},"next":{"title":"Integration uses discovery info to update network information","permalink":"/docs/core/integration-quality-scale/rules/discovery-update-info"}},{"id":"core/integration-quality-scale/rules/discovery","title":"Can be discovered","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/discovery.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/discovery","permalink":"/docs/core/integration-quality-scale/rules/discovery","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/discovery.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Can be discovered","related_rules":["config-flow","test-before-configure","unique-config-entry","config-flow-test-coverage"]},"sidebar":"Core","previous":{"title":"Integration uses discovery info to update network information","permalink":"/docs/core/integration-quality-scale/rules/discovery-update-info"},"next":{"title":"The documentation describes how data is updated","permalink":"/docs/core/integration-quality-scale/rules/docs-data-update"}},{"id":"core/integration-quality-scale/rules/discovery-update-info","title":"Integration uses discovery info to update network information","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/discovery-update-info.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/discovery-update-info","permalink":"/docs/core/integration-quality-scale/rules/discovery-update-info","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/discovery-update-info.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration uses discovery info to update network information"},"sidebar":"Core","previous":{"title":"Implements diagnostics","permalink":"/docs/core/integration-quality-scale/rules/diagnostics"},"next":{"title":"Can be discovered","permalink":"/docs/core/integration-quality-scale/rules/discovery"}},{"id":"core/integration-quality-scale/rules/docs-actions","title":"The documentation describes the provided service actions that can be used","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-actions.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-actions","permalink":"/docs/core/integration-quality-scale/rules/docs-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-actions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes the provided service actions that can be used"},"sidebar":"Core","previous":{"title":"Dependency transparency","permalink":"/docs/core/integration-quality-scale/rules/dependency-transparency"},"next":{"title":"The documentation includes a high-level description of the integration brand, product, or service","permalink":"/docs/core/integration-quality-scale/rules/docs-high-level-description"}},{"id":"core/integration-quality-scale/rules/docs-configuration-parameters","title":"The documentation describes all integration configuration options","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-configuration-parameters.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-configuration-parameters","permalink":"/docs/core/integration-quality-scale/rules/docs-configuration-parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-configuration-parameters.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes all integration configuration options"},"sidebar":"Core","previous":{"title":"Support config entry unloading","permalink":"/docs/core/integration-quality-scale/rules/config-entry-unloading"},"next":{"title":"The documentation describes all integration installation parameters","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-parameters"}},{"id":"core/integration-quality-scale/rules/docs-data-update","title":"The documentation describes how data is updated","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-data-update.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-data-update","permalink":"/docs/core/integration-quality-scale/rules/docs-data-update","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-data-update.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes how data is updated"},"sidebar":"Core","previous":{"title":"Can be discovered","permalink":"/docs/core/integration-quality-scale/rules/discovery"},"next":{"title":"The documentation provides automation examples the user can use.","permalink":"/docs/core/integration-quality-scale/rules/docs-examples"}},{"id":"core/integration-quality-scale/rules/docs-examples","title":"The documentation provides automation examples the user can use.","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-examples.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-examples","permalink":"/docs/core/integration-quality-scale/rules/docs-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-examples.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation provides automation examples the user can use."},"sidebar":"Core","previous":{"title":"The documentation describes how data is updated","permalink":"/docs/core/integration-quality-scale/rules/docs-data-update"},"next":{"title":"The documentation describes known limitations of the integration (not to be confused with bugs)","permalink":"/docs/core/integration-quality-scale/rules/docs-known-limitations"}},{"id":"core/integration-quality-scale/rules/docs-high-level-description","title":"The documentation includes a high-level description of the integration brand, product, or service","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-high-level-description.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-high-level-description","permalink":"/docs/core/integration-quality-scale/rules/docs-high-level-description","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-high-level-description.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation includes a high-level description of the integration brand, product, or service"},"sidebar":"Core","previous":{"title":"The documentation describes the provided service actions that can be used","permalink":"/docs/core/integration-quality-scale/rules/docs-actions"},"next":{"title":"The documentation provides step-by-step installation instructions for the integration, including, if needed, prerequisites","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-instructions"}},{"id":"core/integration-quality-scale/rules/docs-installation-instructions","title":"The documentation provides step-by-step installation instructions for the integration, including, if needed, prerequisites","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-installation-instructions.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-installation-instructions","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-instructions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-installation-instructions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation provides step-by-step installation instructions for the integration, including, if needed, prerequisites"},"sidebar":"Core","previous":{"title":"The documentation includes a high-level description of the integration brand, product, or service","permalink":"/docs/core/integration-quality-scale/rules/docs-high-level-description"},"next":{"title":"The documentation provides removal instructions","permalink":"/docs/core/integration-quality-scale/rules/docs-removal-instructions"}},{"id":"core/integration-quality-scale/rules/docs-installation-parameters","title":"The documentation describes all integration installation parameters","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-installation-parameters.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-installation-parameters","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-installation-parameters.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes all integration installation parameters"},"sidebar":"Core","previous":{"title":"The documentation describes all integration configuration options","permalink":"/docs/core/integration-quality-scale/rules/docs-configuration-parameters"},"next":{"title":"Mark entity unavailable if appropriate","permalink":"/docs/core/integration-quality-scale/rules/entity-unavailable"}},{"id":"core/integration-quality-scale/rules/docs-known-limitations","title":"The documentation describes known limitations of the integration (not to be confused with bugs)","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-known-limitations.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-known-limitations","permalink":"/docs/core/integration-quality-scale/rules/docs-known-limitations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-known-limitations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes known limitations of the integration (not to be confused with bugs)"},"sidebar":"Core","previous":{"title":"The documentation provides automation examples the user can use.","permalink":"/docs/core/integration-quality-scale/rules/docs-examples"},"next":{"title":"The documentation describes known supported / unsupported devices","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-devices"}},{"id":"core/integration-quality-scale/rules/docs-removal-instructions","title":"The documentation provides removal instructions","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-removal-instructions.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-removal-instructions","permalink":"/docs/core/integration-quality-scale/rules/docs-removal-instructions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-removal-instructions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation provides removal instructions"},"sidebar":"Core","previous":{"title":"The documentation provides step-by-step installation instructions for the integration, including, if needed, prerequisites","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-instructions"},"next":{"title":"Entities event setup","permalink":"/docs/core/integration-quality-scale/rules/entity-event-setup"}},{"id":"core/integration-quality-scale/rules/docs-supported-devices","title":"The documentation describes known supported / unsupported devices","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-supported-devices.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-supported-devices","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-devices","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-supported-devices.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes known supported / unsupported devices"},"sidebar":"Core","previous":{"title":"The documentation describes known limitations of the integration (not to be confused with bugs)","permalink":"/docs/core/integration-quality-scale/rules/docs-known-limitations"},"next":{"title":"The documentation describes the supported functionality, including entities, and platforms","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-functions"}},{"id":"core/integration-quality-scale/rules/docs-supported-functions","title":"The documentation describes the supported functionality, including entities, and platforms","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-supported-functions.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-supported-functions","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-supported-functions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes the supported functionality, including entities, and platforms"},"sidebar":"Core","previous":{"title":"The documentation describes known supported / unsupported devices","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-devices"},"next":{"title":"The documentation provides troubleshooting information","permalink":"/docs/core/integration-quality-scale/rules/docs-troubleshooting"}},{"id":"core/integration-quality-scale/rules/docs-troubleshooting","title":"The documentation provides troubleshooting information","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-troubleshooting.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-troubleshooting","permalink":"/docs/core/integration-quality-scale/rules/docs-troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-troubleshooting.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation provides troubleshooting information"},"sidebar":"Core","previous":{"title":"The documentation describes the supported functionality, including entities, and platforms","permalink":"/docs/core/integration-quality-scale/rules/docs-supported-functions"},"next":{"title":"The documentation describes use cases to illustrate how this integration can be used","permalink":"/docs/core/integration-quality-scale/rules/docs-use-cases"}},{"id":"core/integration-quality-scale/rules/docs-use-cases","title":"The documentation describes use cases to illustrate how this integration can be used","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/docs-use-cases.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/docs-use-cases","permalink":"/docs/core/integration-quality-scale/rules/docs-use-cases","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/docs-use-cases.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The documentation describes use cases to illustrate how this integration can be used"},"sidebar":"Core","previous":{"title":"The documentation provides troubleshooting information","permalink":"/docs/core/integration-quality-scale/rules/docs-troubleshooting"},"next":{"title":"Devices added after integration setup","permalink":"/docs/core/integration-quality-scale/rules/dynamic-devices"}},{"id":"core/integration-quality-scale/rules/dynamic-devices","title":"Devices added after integration setup","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/dynamic-devices.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/dynamic-devices","permalink":"/docs/core/integration-quality-scale/rules/dynamic-devices","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/dynamic-devices.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Devices added after integration setup","related_rules":["stale-devices"]},"sidebar":"Core","previous":{"title":"The documentation describes use cases to illustrate how this integration can be used","permalink":"/docs/core/integration-quality-scale/rules/docs-use-cases"},"next":{"title":"Entities are assigned an appropriate EntityCategory","permalink":"/docs/core/integration-quality-scale/rules/entity-category"}},{"id":"core/integration-quality-scale/rules/entity-category","title":"Entities are assigned an appropriate EntityCategory","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-category.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-category","permalink":"/docs/core/integration-quality-scale/rules/entity-category","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-category.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities are assigned an appropriate EntityCategory"},"sidebar":"Core","previous":{"title":"Devices added after integration setup","permalink":"/docs/core/integration-quality-scale/rules/dynamic-devices"},"next":{"title":"Entities use device classes where possible","permalink":"/docs/core/integration-quality-scale/rules/entity-device-class"}},{"id":"core/integration-quality-scale/rules/entity-device-class","title":"Entities use device classes where possible","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-device-class.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-device-class","permalink":"/docs/core/integration-quality-scale/rules/entity-device-class","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-device-class.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities use device classes where possible","related_rules":["has-entity-name","entity-translations","icon-translations"]},"sidebar":"Core","previous":{"title":"Entities are assigned an appropriate EntityCategory","permalink":"/docs/core/integration-quality-scale/rules/entity-category"},"next":{"title":"Integration disables less popular (or noisy) entities","permalink":"/docs/core/integration-quality-scale/rules/entity-disabled-by-default"}},{"id":"core/integration-quality-scale/rules/entity-disabled-by-default","title":"Integration disables less popular (or noisy) entities","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-disabled-by-default.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-disabled-by-default","permalink":"/docs/core/integration-quality-scale/rules/entity-disabled-by-default","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-disabled-by-default.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration disables less popular (or noisy) entities","related_rules":["appropriate-polling"]},"sidebar":"Core","previous":{"title":"Entities use device classes where possible","permalink":"/docs/core/integration-quality-scale/rules/entity-device-class"},"next":{"title":"Entities have translated names","permalink":"/docs/core/integration-quality-scale/rules/entity-translations"}},{"id":"core/integration-quality-scale/rules/entity-event-setup","title":"Entities event setup","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-event-setup.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-event-setup","permalink":"/docs/core/integration-quality-scale/rules/entity-event-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-event-setup.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities event setup"},"sidebar":"Core","previous":{"title":"The documentation provides removal instructions","permalink":"/docs/core/integration-quality-scale/rules/docs-removal-instructions"},"next":{"title":"Entities have a unique ID","permalink":"/docs/core/integration-quality-scale/rules/entity-unique-id"}},{"id":"core/integration-quality-scale/rules/entity-translations","title":"Entities have translated names","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-translations.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-translations","permalink":"/docs/core/integration-quality-scale/rules/entity-translations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-translations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities have translated names","related_rules":["has-entity-name","entity-device-class","icon-translations","exception-translations"]},"sidebar":"Core","previous":{"title":"Integration disables less popular (or noisy) entities","permalink":"/docs/core/integration-quality-scale/rules/entity-disabled-by-default"},"next":{"title":"Exception messages are translatable","permalink":"/docs/core/integration-quality-scale/rules/exception-translations"}},{"id":"core/integration-quality-scale/rules/entity-unavailable","title":"Mark entity unavailable if appropriate","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-unavailable.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-unavailable","permalink":"/docs/core/integration-quality-scale/rules/entity-unavailable","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-unavailable.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Mark entity unavailable if appropriate","related_rules":["log-when-unavailable"]},"sidebar":"Core","previous":{"title":"The documentation describes all integration installation parameters","permalink":"/docs/core/integration-quality-scale/rules/docs-installation-parameters"},"next":{"title":"Has an integration owner","permalink":"/docs/core/integration-quality-scale/rules/integration-owner"}},{"id":"core/integration-quality-scale/rules/entity-unique-id","title":"Entities have a unique ID","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/entity-unique-id.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/entity-unique-id","permalink":"/docs/core/integration-quality-scale/rules/entity-unique-id","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/entity-unique-id.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities have a unique ID","related_rules":["unique-config-entry"]},"sidebar":"Core","previous":{"title":"Entities event setup","permalink":"/docs/core/integration-quality-scale/rules/entity-event-setup"},"next":{"title":"Entities use has_entity_name = True","permalink":"/docs/core/integration-quality-scale/rules/has-entity-name"}},{"id":"core/integration-quality-scale/rules/exception-translations","title":"Exception messages are translatable","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/exception-translations.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/exception-translations","permalink":"/docs/core/integration-quality-scale/rules/exception-translations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/exception-translations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Exception messages are translatable","related_rules":["entity-translations","action-exceptions"]},"sidebar":"Core","previous":{"title":"Entities have translated names","permalink":"/docs/core/integration-quality-scale/rules/entity-translations"},"next":{"title":"Icon translations","permalink":"/docs/core/integration-quality-scale/rules/icon-translations"}},{"id":"core/integration-quality-scale/rules/has-entity-name","title":"Entities use has_entity_name = True","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/has-entity-name.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/has-entity-name","permalink":"/docs/core/integration-quality-scale/rules/has-entity-name","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/has-entity-name.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entities use has_entity_name = True","related_rules":["entity-translations","entity-device-class","devices"]},"sidebar":"Core","previous":{"title":"Entities have a unique ID","permalink":"/docs/core/integration-quality-scale/rules/entity-unique-id"},"next":{"title":"Use ConfigEntry.runtime_data to store runtime data","permalink":"/docs/core/integration-quality-scale/rules/runtime-data"}},{"id":"core/integration-quality-scale/rules/icon-translations","title":"Icon translations","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/icon-translations.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/icon-translations","permalink":"/docs/core/integration-quality-scale/rules/icon-translations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/icon-translations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Icon translations","related_rules":["entity-translations","entity-device-class"]},"sidebar":"Core","previous":{"title":"Exception messages are translatable","permalink":"/docs/core/integration-quality-scale/rules/exception-translations"},"next":{"title":"Integrations should have a reconfigure flow","permalink":"/docs/core/integration-quality-scale/rules/reconfiguration-flow"}},{"id":"core/integration-quality-scale/rules/inject-websession","title":"The integration dependency supports passing in a websession","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/inject-websession.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/inject-websession","permalink":"/docs/core/integration-quality-scale/rules/inject-websession","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/inject-websession.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"The integration dependency supports passing in a websession","related_rules":["async-dependency"]},"sidebar":"Core","previous":{"title":"Dependency is async","permalink":"/docs/core/integration-quality-scale/rules/async-dependency"},"next":{"title":"Strict typing","permalink":"/docs/core/integration-quality-scale/rules/strict-typing"}},{"id":"core/integration-quality-scale/rules/integration-owner","title":"Has an integration owner","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/integration-owner.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/integration-owner","permalink":"/docs/core/integration-quality-scale/rules/integration-owner","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/integration-owner.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Has an integration owner"},"sidebar":"Core","previous":{"title":"Mark entity unavailable if appropriate","permalink":"/docs/core/integration-quality-scale/rules/entity-unavailable"},"next":{"title":"If internet/device/service is unavailable, log once when unavailable and once when back connected","permalink":"/docs/core/integration-quality-scale/rules/log-when-unavailable"}},{"id":"core/integration-quality-scale/rules/log-when-unavailable","title":"If internet/device/service is unavailable, log once when unavailable and once when back connected","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/log-when-unavailable.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/log-when-unavailable","permalink":"/docs/core/integration-quality-scale/rules/log-when-unavailable","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/log-when-unavailable.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"If internet/device/service is unavailable, log once when unavailable and once when back connected","related_rules":["entity-unavailable"]},"sidebar":"Core","previous":{"title":"Has an integration owner","permalink":"/docs/core/integration-quality-scale/rules/integration-owner"},"next":{"title":"Set Parallel updates","permalink":"/docs/core/integration-quality-scale/rules/parallel-updates"}},{"id":"core/integration-quality-scale/rules/parallel-updates","title":"Set Parallel updates","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/parallel-updates.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/parallel-updates","permalink":"/docs/core/integration-quality-scale/rules/parallel-updates","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/parallel-updates.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Set Parallel updates"},"sidebar":"Core","previous":{"title":"If internet/device/service is unavailable, log once when unavailable and once when back connected","permalink":"/docs/core/integration-quality-scale/rules/log-when-unavailable"},"next":{"title":"Reauthentication flow","permalink":"/docs/core/integration-quality-scale/rules/reauthentication-flow"}},{"id":"core/integration-quality-scale/rules/reauthentication-flow","title":"Reauthentication flow","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/reauthentication-flow.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/reauthentication-flow","permalink":"/docs/core/integration-quality-scale/rules/reauthentication-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/reauthentication-flow.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Reauthentication flow","related_rules":["config-flow","test-before-configure","config-flow-test-coverage","test-before-setup","reconfiguration-flow"]},"sidebar":"Core","previous":{"title":"Set Parallel updates","permalink":"/docs/core/integration-quality-scale/rules/parallel-updates"},"next":{"title":"Above 95% test coverage for all integration modules","permalink":"/docs/core/integration-quality-scale/rules/test-coverage"}},{"id":"core/integration-quality-scale/rules/reconfiguration-flow","title":"Integrations should have a reconfigure flow","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/reconfiguration-flow.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/reconfiguration-flow","permalink":"/docs/core/integration-quality-scale/rules/reconfiguration-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/reconfiguration-flow.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integrations should have a reconfigure flow","related_rules":["config-flow","test-before-configure","unique-config-entry","config-flow-test-coverage","reauthentication-flow"]},"sidebar":"Core","previous":{"title":"Icon translations","permalink":"/docs/core/integration-quality-scale/rules/icon-translations"},"next":{"title":"Repair issues and repair flows are used when user intervention is needed","permalink":"/docs/core/integration-quality-scale/rules/repair-issues"}},{"id":"core/integration-quality-scale/rules/repair-issues","title":"Repair issues and repair flows are used when user intervention is needed","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/repair-issues.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/repair-issues","permalink":"/docs/core/integration-quality-scale/rules/repair-issues","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/repair-issues.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Repair issues and repair flows are used when user intervention is needed"},"sidebar":"Core","previous":{"title":"Integrations should have a reconfigure flow","permalink":"/docs/core/integration-quality-scale/rules/reconfiguration-flow"},"next":{"title":"Clean up stale devices","permalink":"/docs/core/integration-quality-scale/rules/stale-devices"}},{"id":"core/integration-quality-scale/rules/runtime-data","title":"Use ConfigEntry.runtime_data to store runtime data","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/runtime-data.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/runtime-data","permalink":"/docs/core/integration-quality-scale/rules/runtime-data","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/runtime-data.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Use ConfigEntry.runtime_data to store runtime data","related_rules":["strict-typing","test-before-setup"]},"sidebar":"Core","previous":{"title":"Entities use has_entity_name = True","permalink":"/docs/core/integration-quality-scale/rules/has-entity-name"},"next":{"title":"Test a connection in the config flow","permalink":"/docs/core/integration-quality-scale/rules/test-before-configure"}},{"id":"core/integration-quality-scale/rules/stale-devices","title":"Clean up stale devices","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/stale-devices.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/stale-devices","permalink":"/docs/core/integration-quality-scale/rules/stale-devices","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/stale-devices.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Clean up stale devices","related_rules":["dynamic-devices"]},"sidebar":"Core","previous":{"title":"Repair issues and repair flows are used when user intervention is needed","permalink":"/docs/core/integration-quality-scale/rules/repair-issues"},"next":{"title":"Dependency is async","permalink":"/docs/core/integration-quality-scale/rules/async-dependency"}},{"id":"core/integration-quality-scale/rules/strict-typing","title":"Strict typing","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/strict-typing.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/strict-typing","permalink":"/docs/core/integration-quality-scale/rules/strict-typing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/strict-typing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Strict typing","related_rules":["runtime-data"]},"sidebar":"Core","previous":{"title":"The integration dependency supports passing in a websession","permalink":"/docs/core/integration-quality-scale/rules/inject-websession"},"next":{"title":"Introduction","permalink":"/docs/dev_101_hass"}},{"id":"core/integration-quality-scale/rules/test-before-configure","title":"Test a connection in the config flow","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/test-before-configure.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/test-before-configure","permalink":"/docs/core/integration-quality-scale/rules/test-before-configure","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/test-before-configure.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Test a connection in the config flow","related_rules":["config-flow","unique-config-entry","config-flow-test-coverage","discovery","reauthentication-flow","reconfiguration-flow"]},"sidebar":"Core","previous":{"title":"Use ConfigEntry.runtime_data to store runtime data","permalink":"/docs/core/integration-quality-scale/rules/runtime-data"},"next":{"title":"Check during integration initialization if we are able to set it up correctly","permalink":"/docs/core/integration-quality-scale/rules/test-before-setup"}},{"id":"core/integration-quality-scale/rules/test-before-setup","title":"Check during integration initialization if we are able to set it up correctly","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/test-before-setup.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/test-before-setup","permalink":"/docs/core/integration-quality-scale/rules/test-before-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/test-before-setup.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Check during integration initialization if we are able to set it up correctly","related_rules":["runtime-data"]},"sidebar":"Core","previous":{"title":"Test a connection in the config flow","permalink":"/docs/core/integration-quality-scale/rules/test-before-configure"},"next":{"title":"Don't allow the same device or service to be able to be set up twice","permalink":"/docs/core/integration-quality-scale/rules/unique-config-entry"}},{"id":"core/integration-quality-scale/rules/test-coverage","title":"Above 95% test coverage for all integration modules","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/test-coverage.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/test-coverage","permalink":"/docs/core/integration-quality-scale/rules/test-coverage","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/test-coverage.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Above 95% test coverage for all integration modules","related_rules":["config-flow-test-coverage"]},"sidebar":"Core","previous":{"title":"Reauthentication flow","permalink":"/docs/core/integration-quality-scale/rules/reauthentication-flow"},"next":{"title":"The integration creates devices","permalink":"/docs/core/integration-quality-scale/rules/devices"}},{"id":"core/integration-quality-scale/rules/unique-config-entry","title":"Don't allow the same device or service to be able to be set up twice","description":"Reasoning","source":"@site/docs/core/integration-quality-scale/rules/unique-config-entry.md","sourceDirName":"core/integration-quality-scale/rules","slug":"/core/integration-quality-scale/rules/unique-config-entry","permalink":"/docs/core/integration-quality-scale/rules/unique-config-entry","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/integration-quality-scale/rules/unique-config-entry.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Don't allow the same device or service to be able to be set up twice","related_rules":["config-flow","test-before-configure","config-flow-test-coverage","discovery","reauthentication-flow","reconfiguration-flow"]},"sidebar":"Core","previous":{"title":"Check during integration initialization if we are able to set it up correctly","permalink":"/docs/core/integration-quality-scale/rules/test-before-setup"},"next":{"title":"Service actions raise exceptions when encountering failures","permalink":"/docs/core/integration-quality-scale/rules/action-exceptions"}},{"id":"core/llm/index","title":"Home Assistant API for Large Language Models","description":"Home Assistant can interact with large language models (LLMs). By exposing a Home Assistant API to an LLM, the LLM can fetch data or control Home Assistant to better assist the user. Home Assistant comes with a built-in LLM API, but custom integrations can register their own to provide more advanced functionality.","source":"@site/docs/core/llm/index.md","sourceDirName":"core/llm","slug":"/core/llm/","permalink":"/docs/core/llm/","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/llm/index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Home Assistant API for Large Language Models","sidebar_label":"LLM API"},"sidebar":"Core","previous":{"title":"Conversation API","permalink":"/docs/intent_conversation_api"},"next":{"title":"Introduction","permalink":"/docs/api/native-app-integration"}},{"id":"core/platform/application_credentials","title":"Application credentials","description":"Integrations may support Configuration via OAuth2 allowing","source":"@site/docs/core/platform/application_credentials.md","sourceDirName":"core/platform","slug":"/core/platform/application_credentials","permalink":"/docs/core/platform/application_credentials","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/application_credentials.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Application credentials"},"sidebar":"Core","previous":{"title":"Brands","permalink":"/docs/creating_integration_brand"},"next":{"title":"Backup","permalink":"/docs/core/platform/backup"}},{"id":"core/platform/backup","title":"Backup","description":"There are two main purposes for an integration to implement a backup platform:","source":"@site/docs/core/platform/backup.md","sourceDirName":"core/platform","slug":"/core/platform/backup","permalink":"/docs/core/platform/backup","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/backup.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Backup"},"sidebar":"Core","previous":{"title":"Application credentials","permalink":"/docs/core/platform/application_credentials"},"next":{"title":"Raising exceptions","permalink":"/docs/core/platform/raising_exceptions"}},{"id":"core/platform/raising_exceptions","title":"Raising exceptions","description":"Raising exceptions in service action handlers","source":"@site/docs/core/platform/raising_exceptions.md","sourceDirName":"core/platform","slug":"/core/platform/raising_exceptions","permalink":"/docs/core/platform/raising_exceptions","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/raising_exceptions.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Raising exceptions"},"sidebar":"Core","previous":{"title":"Backup","permalink":"/docs/core/platform/backup"},"next":{"title":"Repairs","permalink":"/docs/core/platform/repairs"}},{"id":"core/platform/repairs","title":"Repairs","description":"Home Assistant keeps track of issues which should be brought to the user's attention. These issues can be created by integrations or by Home Assistant itself. Issues can either be fixable via a RepairsFlow or by linking to a website with information on how the user can solve it themselves.","source":"@site/docs/core/platform/repairs.md","sourceDirName":"core/platform","slug":"/core/platform/repairs","permalink":"/docs/core/platform/repairs","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/repairs.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Repairs"},"sidebar":"Core","previous":{"title":"Raising exceptions","permalink":"/docs/core/platform/raising_exceptions"},"next":{"title":"Reproduce state","permalink":"/docs/core/platform/reproduce_state"}},{"id":"core/platform/reproduce_state","title":"Reproduce state","description":"Home Assistant has support for scenes. Scenes are a collection of (partial) entity states. When a scene is activated, Home Assistant will try to call the right service actions to get the specified scenes in their specified state.","source":"@site/docs/core/platform/reproduce_state.md","sourceDirName":"core/platform","slug":"/core/platform/reproduce_state","permalink":"/docs/core/platform/reproduce_state","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/reproduce_state.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Reproduce state"},"sidebar":"Core","previous":{"title":"Repairs","permalink":"/docs/core/platform/repairs"},"next":{"title":"Significant change","permalink":"/docs/core/platform/significant_change"}},{"id":"core/platform/significant_change","title":"Significant change","description":"Home Assistant doesn't only collect data, it also exports data to various services. Not all of these services are interested in every change. To help these services filter insignificant changes, your entity integration can add significant change support.","source":"@site/docs/core/platform/significant_change.md","sourceDirName":"core/platform","slug":"/core/platform/significant_change","permalink":"/docs/core/platform/significant_change","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/core/platform/significant_change.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Significant change"},"sidebar":"Core","previous":{"title":"Reproduce state","permalink":"/docs/core/platform/reproduce_state"},"next":{"title":"WebSocket API","permalink":"/docs/api/websocket"}},{"id":"creating_component_code_review","title":"Checklist for creating a component","description":"A checklist of things to do when you're adding a new component.","source":"@site/docs/creating_component_code_review.md","sourceDirName":".","slug":"/creating_component_code_review","permalink":"/docs/creating_component_code_review","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_component_code_review.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Checklist for creating a component","sidebar_label":"Component checklist"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/development_checklist"},"next":{"title":"Platform checklist","permalink":"/docs/creating_platform_code_review"}},{"id":"creating_component_generic_discovery","title":"Integration with multiple platforms","description":"Most integrations consist of a single platform. And in that case, it's fine to just define that one platform. However, if you are going to add a second platform, you will want to centralize your connection logic. This is done inside the component (init.py).","source":"@site/docs/creating_component_generic_discovery.md","sourceDirName":".","slug":"/creating_component_generic_discovery","permalink":"/docs/creating_component_generic_discovery","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_component_generic_discovery.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration with multiple platforms","sidebar_label":"Multiple platforms"},"sidebar":"Core","previous":{"title":"Platforms","permalink":"/docs/creating_platform_index"},"next":{"title":"Fetching data","permalink":"/docs/integration_fetching_data"}},{"id":"creating_component_index","title":"Creating your first integration","description":"Alright, so it's time to write your first code for your integration. AWESOME. Don't worry, we've tried hard to keep it as easy as possible. From a Home Assistant development environment, type the following and follow the instructions:","source":"@site/docs/creating_component_index.md","sourceDirName":".","slug":"/creating_component_index","permalink":"/docs/creating_component_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_component_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Creating your first integration"},"sidebar":"Core","previous":{"title":"Tips and tricks","permalink":"/docs/development_tips"},"next":{"title":"File structure","permalink":"/docs/creating_integration_file_structure"}},{"id":"creating_integration_brand","title":"Brands","description":"A commercial brand may have several integrations which provide support for different offerings under that brand. Also, a brand may offer devices which comply with an IoT standard, for example Zigbee or Z-Wave.","source":"@site/docs/creating_integration_brand.md","sourceDirName":".","slug":"/creating_integration_brand","permalink":"/docs/creating_integration_brand","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_integration_brand.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Brands"},"sidebar":"Core","previous":{"title":"Authenticated WebView","permalink":"/docs/api/native-app-integration/webview"},"next":{"title":"Application credentials","permalink":"/docs/core/platform/application_credentials"}},{"id":"creating_integration_file_structure","title":"Integration file structure","description":"Each integration is stored inside a directory named after the integration domain. The domain is a short name consisting of characters and underscores. This domain has to be unique and cannot be changed. Example of the domain for the mobile app integration: mobileapp. So all files for this integration are in the folder mobileapp/.","source":"@site/docs/creating_integration_file_structure.md","sourceDirName":".","slug":"/creating_integration_file_structure","permalink":"/docs/creating_integration_file_structure","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_integration_file_structure.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration file structure","sidebar_label":"File structure"},"sidebar":"Core","previous":{"title":"Creating your first integration","permalink":"/docs/creating_component_index"},"next":{"title":"Tests file structure","permalink":"/docs/creating_integration_tests_file_structure"}},{"id":"creating_integration_manifest","title":"Integration manifest","description":"Every integration has a manifest file to specify its basic information. This file is stored as manifest.json in your integration directory. It is required to add such a file.","source":"@site/docs/creating_integration_manifest.md","sourceDirName":".","slug":"/creating_integration_manifest","permalink":"/docs/creating_integration_manifest","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_integration_manifest.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration manifest","sidebar_label":"Manifest"},"sidebar":"Core","previous":{"title":"Tests file structure","permalink":"/docs/creating_integration_tests_file_structure"},"next":{"title":"Config flow","permalink":"/docs/config_entries_config_flow_handler"}},{"id":"creating_integration_tests_file_structure","title":"Integration tests file structure","description":"Tests for each integration are stored inside a directory named after the integration domain. For example, tests for the mobile app integration should be stored in tests/components/mobile_app.","source":"@site/docs/creating_integration_tests_file_structure.md","sourceDirName":".","slug":"/creating_integration_tests_file_structure","permalink":"/docs/creating_integration_tests_file_structure","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_integration_tests_file_structure.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration tests file structure","sidebar_label":"Tests file structure"},"sidebar":"Core","previous":{"title":"File structure","permalink":"/docs/creating_integration_file_structure"},"next":{"title":"Manifest","permalink":"/docs/creating_integration_manifest"}},{"id":"creating_platform_code_review","title":"Checklist for creating a platform","description":"A checklist of things to do when you're adding a new platform.","source":"@site/docs/creating_platform_code_review.md","sourceDirName":".","slug":"/creating_platform_code_review","permalink":"/docs/creating_platform_code_review","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_platform_code_review.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Checklist for creating a platform","sidebar_label":"Platform checklist"},"sidebar":"Core","previous":{"title":"Component checklist","permalink":"/docs/creating_component_code_review"},"next":{"title":"Integration quality scale","permalink":"/docs/core/integration-quality-scale/"}},{"id":"creating_platform_index","title":"Integration platforms","description":"Home Assistant has various built-in integrations that abstract device types. There are lights, switches, covers, climate devices, and many more. Your integration can hook into these integrations by creating a platform. You will need a platform for each integration that you are integrating with.","source":"@site/docs/creating_platform_index.md","sourceDirName":".","slug":"/creating_platform_index","permalink":"/docs/creating_platform_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_platform_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration platforms","sidebar_label":"Platforms"},"sidebar":"Core","previous":{"title":"Custom actions","permalink":"/docs/dev_101_services"},"next":{"title":"Multiple platforms","permalink":"/docs/creating_component_generic_discovery"}},{"id":"data_entry_flow_index","title":"Data entry flow","description":"Data Entry Flow is a data entry framework that is part of Home Assistant. Data entry is done via data entry flows. A flow can represent a simple login form or a multi-step setup wizard for a component. A Flow Manager manages all flows that are in progress and handles creation of new flows.","source":"@site/docs/data_entry_flow_index.md","sourceDirName":".","slug":"/data_entry_flow_index","permalink":"/docs/data_entry_flow_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/data_entry_flow_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Data entry flow"},"sidebar":"Core","previous":{"title":"Config entries","permalink":"/docs/config_entries_index"},"next":{"title":"Introduction","permalink":"/docs/device_automation_index"}},{"id":"dev_101_config","title":"Config","description":"On the hass object there is an instance of the Config class. The Config class contains the users preferred units, the path to the config directory and which components are loaded.","source":"@site/docs/dev_101_config.md","sourceDirName":".","slug":"/dev_101_config","permalink":"/docs/dev_101_config","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/dev_101_config.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Config"},"sidebar":"Core","previous":{"title":"States","permalink":"/docs/dev_101_states"},"next":{"title":"Introduction","permalink":"/docs/core/entity"}},{"id":"dev_101_events","title":"Events","description":"The core of Home Assistant is driven by events. That means that if you want to respond to something happening, you'll have to respond to events. Most of the times you won't interact directly with the event system but use one of the event listener helpers.","source":"@site/docs/dev_101_events.md","sourceDirName":".","slug":"/dev_101_events","permalink":"/docs/dev_101_events","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/dev_101_events.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Events"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/dev_101_hass"},"next":{"title":"States","permalink":"/docs/dev_101_states"}},{"id":"dev_101_hass","title":"Hass object","description":"While developing Home Assistant you will see a variable that is everywhere: hass. This is the Home Assistant instance that will give you access to all the various parts of the system.","source":"@site/docs/dev_101_hass.md","sourceDirName":".","slug":"/dev_101_hass","permalink":"/docs/dev_101_hass","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/dev_101_hass.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Hass object","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Strict typing","permalink":"/docs/core/integration-quality-scale/rules/strict-typing"},"next":{"title":"Events","permalink":"/docs/dev_101_events"}},{"id":"dev_101_services","title":"Integration service actions","description":"Home Assistant provides ready-made actions for a lot of things, but it doesn't always cover everything. Instead of trying to change Home Assistant, it is preferred to add it as a service action under your own integration first. Once we see a pattern in these service actions, we can talk about generalizing them.","source":"@site/docs/dev_101_services.md","sourceDirName":".","slug":"/dev_101_services","permalink":"/docs/dev_101_services","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/dev_101_services.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Integration service actions","sidebar_label":"Custom actions"},"sidebar":"Core","previous":{"title":"Integration configuration via YAML","permalink":"/docs/configuration_yaml_index"},"next":{"title":"Platforms","permalink":"/docs/creating_platform_index"}},{"id":"dev_101_states","title":"States","description":"Home Assistant keeps track of the states of entities in a state machine. The state machine has very few requirements:","source":"@site/docs/dev_101_states.md","sourceDirName":".","slug":"/dev_101_states","permalink":"/docs/dev_101_states","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/dev_101_states.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"States"},"sidebar":"Core","previous":{"title":"Events","permalink":"/docs/dev_101_events"},"next":{"title":"Config","permalink":"/docs/dev_101_config"}},{"id":"development_catching_up","title":"Catching up with reality","description":"If it's taking a while to develop your feature, and you want to catch up with what's in the current Home Assistant dev branch, you can use git rebase. This will pull the latest Home Assistant changes locally, rewind your commits, bring in the latest changes from Home Assistant, and replay all of your commits on top.","source":"@site/docs/development_catching_up.md","sourceDirName":".","slug":"/development_catching_up","permalink":"/docs/development_catching_up","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_catching_up.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Catching up with reality"},"sidebar":"Core","previous":{"title":"Testing your code","permalink":"/docs/development_testing"},"next":{"title":"Tips and tricks","permalink":"/docs/development_tips"}},{"id":"development_checklist","title":"Development checklist","description":"Before you commit any changes, check your work against these requirements:","source":"@site/docs/development_checklist.md","sourceDirName":".","slug":"/development_checklist","permalink":"/docs/development_checklist","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_checklist.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Development checklist","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Bluetooth APIs","permalink":"/docs/core/bluetooth/api"},"next":{"title":"Component checklist","permalink":"/docs/creating_component_code_review"}},{"id":"development_environment","title":"Set up development environment","description":"You'll need to set up a development environment if you want to develop a new feature or component for Home Assistant. Read on to learn how to set up.","source":"@site/docs/development_environment.mdx","sourceDirName":".","slug":"/development_environment","permalink":"/docs/development_environment","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_environment.mdx","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Set up development environment"},"sidebar":"Core","previous":{"title":"Integrations","permalink":"/docs/architecture_components"},"next":{"title":"Submit your work","permalink":"/docs/development_submitting"}},{"id":"development_guidelines","title":"Style guidelines","description":"Home Assistant enforces quite strict PEP8 style and PEP 257 (Docstring Conventions) compliance on all code submitted.","source":"@site/docs/development_guidelines.md","sourceDirName":".","slug":"/development_guidelines","permalink":"/docs/development_guidelines","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_guidelines.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Style guidelines"},"sidebar":"Core","previous":{"title":"Submit your work","permalink":"/docs/development_submitting"},"next":{"title":"Testing your code","permalink":"/docs/development_testing"}},{"id":"development_index","title":"Home Assistant Core","description":"The core of Home Assistant is built from the ground up to be easily extensible using integrations. In this section, we're focusing on how to develop integrations.","source":"@site/docs/development_index.md","sourceDirName":".","slug":"/development_index","permalink":"/docs/development_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Home Assistant Core","sidebar_label":"Introduction"},"sidebar":"Core","next":{"title":"Core","permalink":"/docs/architecture/core"}},{"id":"development_submitting","title":"Submit your work","description":"Always base your Pull Requests off of the current dev branch, not master.","source":"@site/docs/development_submitting.md","sourceDirName":".","slug":"/development_submitting","permalink":"/docs/development_submitting","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_submitting.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Submit your work"},"sidebar":"Core","previous":{"title":"Set up development environment","permalink":"/docs/development_environment"},"next":{"title":"Style guidelines","permalink":"/docs/development_guidelines"}},{"id":"development_testing","title":"Testing your code","description":"As stated in the Style guidelines section all code is checked to verify the following:","source":"@site/docs/development_testing.md","sourceDirName":".","slug":"/development_testing","permalink":"/docs/development_testing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_testing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Testing your code"},"sidebar":"Core","previous":{"title":"Style guidelines","permalink":"/docs/development_guidelines"},"next":{"title":"Catching up with reality","permalink":"/docs/development_catching_up"}},{"id":"development_tips","title":"Tips and tricks","description":"This page provides some tips and tricks that may help you as a contributor to Home Assistant. The list here is by no means exhaustive, and if you pick up any additional undocumented tips and tricks, please open a PR to add them here.","source":"@site/docs/development_tips.md","sourceDirName":".","slug":"/development_tips","permalink":"/docs/development_tips","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_tips.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Tips and tricks"},"sidebar":"Core","previous":{"title":"Catching up with reality","permalink":"/docs/development_catching_up"},"next":{"title":"Creating your first integration","permalink":"/docs/creating_component_index"}},{"id":"development_typing","title":"Adding type hints to your code","description":"Type hints in Python are static annotations of variables and functions, to let humans more easily understand the code. See the standard library docs and this PyCascades 2018 talk.","source":"@site/docs/development_typing.md","sourceDirName":".","slug":"/development_typing","permalink":"/docs/development_typing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_typing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Adding type hints to your code"},"sidebar":"Core","previous":{"title":"Validate the input","permalink":"/docs/development_validation"},"next":{"title":"Getting the instance URL","permalink":"/docs/instance_url"}},{"id":"development_validation","title":"Validate the input","description":"The configuration.yaml file contains the configuration options for components and platforms. We use voluptuous to make sure that the configuration provided by the user is valid. Some entries are optional or could be required to set up a platform or a component. Others must be a defined type or from an already-defined list.","source":"@site/docs/development_validation.md","sourceDirName":".","slug":"/development_validation","permalink":"/docs/development_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/development_validation.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Validate the input"},"sidebar":"Core","previous":{"title":"REST API","permalink":"/docs/api/rest"},"next":{"title":"Adding type hints to your code","permalink":"/docs/development_typing"}},{"id":"device_automation_action","title":"Device actions","description":"Device actions allow a user to have a device do something. Examples are to turn a light on or open a door.","source":"@site/docs/device_automation_action.md","sourceDirName":".","slug":"/device_automation_action","permalink":"/docs/device_automation_action","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/device_automation_action.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device actions","sidebar_label":"Actions"},"sidebar":"Core","previous":{"title":"Conditions","permalink":"/docs/device_automation_condition"},"next":{"title":"Introduction","permalink":"/docs/intent_index"}},{"id":"device_automation_condition","title":"Device conditions","description":"Device conditions allow a user to check if a certain condition is met. Examples are is a light on or is the floor wet.","source":"@site/docs/device_automation_condition.md","sourceDirName":".","slug":"/device_automation_condition","permalink":"/docs/device_automation_condition","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/device_automation_condition.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device conditions","sidebar_label":"Conditions"},"sidebar":"Core","previous":{"title":"Triggers","permalink":"/docs/device_automation_trigger"},"next":{"title":"Actions","permalink":"/docs/device_automation_action"}},{"id":"device_automation_index","title":"Device automations","description":"Device Automations provide users with a device-centric layer on top of the core concepts of Home Assistant. When creating automations, users no longer have to deal with core concepts like states and events. Instead, they will be able to pick a device and then pick from a list of pre-defined triggers, conditions and actions.","source":"@site/docs/device_automation_index.md","sourceDirName":".","slug":"/device_automation_index","permalink":"/docs/device_automation_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/device_automation_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device automations","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Data entry flow","permalink":"/docs/data_entry_flow_index"},"next":{"title":"Triggers","permalink":"/docs/device_automation_trigger"}},{"id":"device_automation_trigger","title":"Device triggers","description":"Device triggers are automation triggers that are tied to a specific device and an event or state change. Examples are \"light turned on\" or \"water detected\".","source":"@site/docs/device_automation_trigger.md","sourceDirName":".","slug":"/device_automation_trigger","permalink":"/docs/device_automation_trigger","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/device_automation_trigger.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device triggers","sidebar_label":"Triggers"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/device_automation_index"},"next":{"title":"Conditions","permalink":"/docs/device_automation_condition"}},{"id":"device_registry_index","title":"Device registry","description":"The device registry is a registry where Home Assistant keeps track of devices. A device is represented in Home Assistant via one or more entities. For example, a battery-powered temperature and humidity sensor might expose entities for temperature, humidity and battery level.","source":"@site/docs/device_registry_index.md","sourceDirName":".","slug":"/device_registry_index","permalink":"/docs/device_registry_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/device_registry_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Device registry"},"sidebar":"Core","previous":{"title":"Disabling entities","permalink":"/docs/entity_registry_disabled_by"},"next":{"title":"Area registry","permalink":"/docs/area_registry_index"}},{"id":"documenting","title":"Documentation","description":"The user documentation is located at https://www.home-assistant.io. This section is the place where we provide documentation and additional details about creating or modifying content.","source":"@site/docs/documenting.md","sourceDirName":".","slug":"/documenting","permalink":"/docs/documenting","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/documenting.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Documentation"},"sidebar":"Misc","previous":{"title":"Pull request review process","permalink":"/docs/review-process"},"next":{"title":"Standards","permalink":"/docs/documenting/standards"}},{"id":"documenting/create-page","title":"Create a new page","description":"For a platform or integration page, the fastest way is to make a copy of an existing page and edit it. The Integration overview and the Examples section are generated automatically, so there is no need to add a link to those pages.","source":"@site/docs/documenting/create-page.md","sourceDirName":"documenting","slug":"/documenting/create-page","permalink":"/docs/documenting/create-page","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/documenting/create-page.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Create a new page"},"sidebar":"Misc","previous":{"title":"YAML Style Guide","permalink":"/docs/documenting/yaml-style-guide"},"next":{"title":"Introduction","permalink":"/docs/api_lib_index"}},{"id":"documenting/standards","title":"Standards","description":"To ensure that the documentation for Home Assistant is consistent and easy to follow for both novice and expert users, we ask that you follow a very strict set of standards for developing the documentation.","source":"@site/docs/documenting/standards.md","sourceDirName":"documenting","slug":"/documenting/standards","permalink":"/docs/documenting/standards","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/documenting/standards.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Standards"},"sidebar":"Misc","previous":{"title":"Documentation","permalink":"/docs/documenting"},"next":{"title":"YAML Style Guide","permalink":"/docs/documenting/yaml-style-guide"}},{"id":"documenting/yaml-style-guide","title":"YAML Style Guide","description":"In addition to our general documentation standards,","source":"@site/docs/documenting/yaml-style-guide.md","sourceDirName":"documenting","slug":"/documenting/yaml-style-guide","permalink":"/docs/documenting/yaml-style-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/documenting/yaml-style-guide.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"YAML Style Guide"},"sidebar":"Misc","previous":{"title":"Standards","permalink":"/docs/documenting/standards"},"next":{"title":"Create a new page","permalink":"/docs/documenting/create-page"}},{"id":"entity_registry_disabled_by","title":"Entity registry and disabling entities","description":"The entity registry tracks all entities with unique IDs. For each entity, the registry keeps track of options that impact how the entity interacts with the core. One of these options is disabled_by.","source":"@site/docs/entity_registry_disabled_by.md","sourceDirName":".","slug":"/entity_registry_disabled_by","permalink":"/docs/entity_registry_disabled_by","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/entity_registry_disabled_by.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entity registry and disabling entities","sidebar_label":"Disabling entities"},"sidebar":"Core","previous":{"title":"Entity registry","permalink":"/docs/entity_registry_index"},"next":{"title":"Device registry","permalink":"/docs/device_registry_index"}},{"id":"entity_registry_index","title":"Entity registry","description":"The entity registry is a registry where Home Assistant keeps track of entities. Any entity that is added to Home Assistant which specifies the unique_id attribute will be registered in the registry.","source":"@site/docs/entity_registry_index.md","sourceDirName":".","slug":"/entity_registry_index","permalink":"/docs/entity_registry_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/entity_registry_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Entity registry"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/architecture/devices-and-services"},"next":{"title":"Disabling entities","permalink":"/docs/entity_registry_disabled_by"}},{"id":"frontend","title":"Home Assistant Frontend","description":"The Home Assistant frontend allows users to browse and control the state of their house, manage their automations and configure integrations.","source":"@site/docs/frontend.md","sourceDirName":".","slug":"/frontend","permalink":"/docs/frontend","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Home Assistant Frontend","sidebar_label":"Introduction"},"sidebar":"Frontend","next":{"title":"Architecture","permalink":"/docs/frontend/architecture"}},{"id":"frontend/architecture","title":"Frontend architecture","description":"The Home Assistant frontend is built using web components. This is a modern web technology allowing us to encapsulate templates, styling and logic into a single file and expose it as an HTML tag in the browser. These components are composable, allowing a very dynamic and powerful foundation of our application.","source":"@site/docs/frontend/architecture.md","sourceDirName":"frontend","slug":"/frontend/architecture","permalink":"/docs/frontend/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/architecture.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Frontend architecture","sidebar_label":"Architecture"},"sidebar":"Frontend","previous":{"title":"Introduction","permalink":"/docs/frontend"},"next":{"title":"Design","permalink":"/docs/frontend/design"}},{"id":"frontend/custom-ui/creating-custom-panels","title":"Creating custom panels","description":"Panels are pages that show information within Home Assistant and can allow controlling it. Panels are linked from the sidebar and rendered full screen. They have real-time access to the Home Assistant object via JavaScript. Examples of panels in the app are dashboards, Map, Logbook and History.","source":"@site/docs/frontend/custom-ui/creating-custom-panels.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/creating-custom-panels","permalink":"/docs/frontend/custom-ui/creating-custom-panels","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/creating-custom-panels.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Creating custom panels"},"sidebar":"Frontend","previous":{"title":"Custom view layout","permalink":"/docs/frontend/custom-ui/custom-view"},"next":{"title":"Registering resources","permalink":"/docs/frontend/custom-ui/registering-resources"}},{"id":"frontend/custom-ui/custom-badge","title":"Custom badge","description":"Badges are small widgets that sit at the top of a view, above all cards. We offer a built-in badge, the entity badge, but you're not just limited that one. You can build and use your own!","source":"@site/docs/frontend/custom-ui/custom-badge.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/custom-badge","permalink":"/docs/frontend/custom-ui/custom-badge","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/custom-badge.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom badge"},"sidebar":"Frontend","previous":{"title":"Custom card feature","permalink":"/docs/frontend/custom-ui/custom-card-feature"},"next":{"title":"Custom strategies","permalink":"/docs/frontend/custom-ui/custom-strategy"}},{"id":"frontend/custom-ui/custom-card","title":"Custom card","description":"Dashboards are our approach to defining your user interface for Home Assistant. We offer a lot of built-in cards, but you're not just limited to the ones that we decided to include in Home Assistant. You can build and use your own!","source":"@site/docs/frontend/custom-ui/custom-card.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/custom-card","permalink":"/docs/frontend/custom-ui/custom-card","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/custom-card.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom card"},"sidebar":"Frontend","previous":{"title":"Extending the WebSocket API","permalink":"/docs/frontend/extending/websocket-api"},"next":{"title":"Custom card feature","permalink":"/docs/frontend/custom-ui/custom-card-feature"}},{"id":"frontend/custom-ui/custom-card-feature","title":"Custom card feature","description":"Some dashboard cards have support for features. These widgets add quick controls to the card. We offer a lot of built-in features, but you're not just limited to the ones that we decided to include in Home Assistant. You can build and use your own in the same way as defining custom cards.","source":"@site/docs/frontend/custom-ui/custom-card-feature.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/custom-card-feature","permalink":"/docs/frontend/custom-ui/custom-card-feature","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/custom-card-feature.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom card feature"},"sidebar":"Frontend","previous":{"title":"Custom card","permalink":"/docs/frontend/custom-ui/custom-card"},"next":{"title":"Custom badge","permalink":"/docs/frontend/custom-ui/custom-badge"}},{"id":"frontend/custom-ui/custom-strategy","title":"Custom strategies","description":"Introduced in Home Assistant 2021.5.","source":"@site/docs/frontend/custom-ui/custom-strategy.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/custom-strategy","permalink":"/docs/frontend/custom-ui/custom-strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/custom-strategy.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom strategies"},"sidebar":"Frontend","previous":{"title":"Custom badge","permalink":"/docs/frontend/custom-ui/custom-badge"},"next":{"title":"Custom view layout","permalink":"/docs/frontend/custom-ui/custom-view"}},{"id":"frontend/custom-ui/custom-view","title":"Custom view layout","description":"By default Home Assistant will try to show the cards in a masonry layout (like Pinterest). A custom view layout allows developers to override this and define the layout mechanism (like a grid).","source":"@site/docs/frontend/custom-ui/custom-view.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/custom-view","permalink":"/docs/frontend/custom-ui/custom-view","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/custom-view.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom view layout"},"sidebar":"Frontend","previous":{"title":"Custom strategies","permalink":"/docs/frontend/custom-ui/custom-strategy"},"next":{"title":"Creating custom panels","permalink":"/docs/frontend/custom-ui/creating-custom-panels"}},{"id":"frontend/custom-ui/registering-resources","title":"Registering resources","description":"If you want to extend the Home Assistant interface with custom cards, strategies or views you need to load external resources.","source":"@site/docs/frontend/custom-ui/registering-resources.md","sourceDirName":"frontend/custom-ui","slug":"/frontend/custom-ui/registering-resources","permalink":"/docs/frontend/custom-ui/registering-resources","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/custom-ui/registering-resources.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Registering resources"},"sidebar":"Frontend","previous":{"title":"Creating custom panels","permalink":"/docs/frontend/custom-ui/creating-custom-panels"}},{"id":"frontend/data","title":"Frontend data","description":"The frontend passes a single hass object around. This object contains the latest state, allows you to send commands back to the server and provides helpers to format entity state.","source":"@site/docs/frontend/data.md","sourceDirName":"frontend","slug":"/frontend/data","permalink":"/docs/frontend/data","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/data.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Frontend data","sidebar_label":"Data"},"sidebar":"Frontend","previous":{"title":"Development","permalink":"/docs/frontend/development"},"next":{"title":"External authentication","permalink":"/docs/frontend/external-authentication"}},{"id":"frontend/design","title":"Frontend design","description":"We maintain a design portal at https","source":"@site/docs/frontend/design.md","sourceDirName":"frontend","slug":"/frontend/design","permalink":"/docs/frontend/design","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/design.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Frontend design","sidebar_label":"Design"},"sidebar":"Frontend","previous":{"title":"Architecture","permalink":"/docs/frontend/architecture"},"next":{"title":"Development","permalink":"/docs/frontend/development"}},{"id":"frontend/development","title":"Frontend development","description":"The Home Assistant frontend is built using web components. For more background about our technology choices, see this blog post.","source":"@site/docs/frontend/development.md","sourceDirName":"frontend","slug":"/frontend/development","permalink":"/docs/frontend/development","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/development.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Frontend development","sidebar_label":"Development"},"sidebar":"Frontend","previous":{"title":"Design","permalink":"/docs/frontend/design"},"next":{"title":"Data","permalink":"/docs/frontend/data"}},{"id":"frontend/extending/adding-more-info-dialogs","title":"Adding more info dialogs","description":"Whenever the user taps or clicks on one of the cards, a more info dialog will show. The header of this dialog will be the state card, followed by the history of this entity for the last 24 hours. Below this the more info component is rendered for that entity. The more info component can show more information or allow more ways of control.","source":"@site/docs/frontend/extending/adding-more-info-dialogs.md","sourceDirName":"frontend/extending","slug":"/frontend/extending/adding-more-info-dialogs","permalink":"/docs/frontend/extending/adding-more-info-dialogs","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/extending/adding-more-info-dialogs.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Adding more info dialogs"},"sidebar":"Frontend","previous":{"title":"Adding state card","permalink":"/docs/frontend/extending/adding-state-card"},"next":{"title":"Extending the WebSocket API","permalink":"/docs/frontend/extending/websocket-api"}},{"id":"frontend/extending/adding-state-card","title":"Adding state card","description":"The main interface of Home Assistant is a list of the current entities and their states. For each entity in the system, a state card will be rendered. State cards will show an icon, the name of the entity, when the state has last changed and the current state or a control to interact with it.","source":"@site/docs/frontend/extending/adding-state-card.md","sourceDirName":"frontend/extending","slug":"/frontend/extending/adding-state-card","permalink":"/docs/frontend/extending/adding-state-card","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/extending/adding-state-card.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Adding state card"},"sidebar":"Frontend","previous":{"title":"External bus","permalink":"/docs/frontend/external-bus"},"next":{"title":"Adding more info dialogs","permalink":"/docs/frontend/extending/adding-more-info-dialogs"}},{"id":"frontend/extending/websocket-api","title":"Extending the WebSocket API","description":"As a component you might have information that you want to make available to the frontend. For example, the media player will want to make album covers available for the frontend to show. Our frontend is communicating with the backend over the websocket API, which can be extended with custom commands.","source":"@site/docs/frontend/extending/websocket-api.md","sourceDirName":"frontend/extending","slug":"/frontend/extending/websocket-api","permalink":"/docs/frontend/extending/websocket-api","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/extending/websocket-api.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Extending the WebSocket API"},"sidebar":"Frontend","previous":{"title":"Adding more info dialogs","permalink":"/docs/frontend/extending/adding-more-info-dialogs"},"next":{"title":"Custom card","permalink":"/docs/frontend/custom-ui/custom-card"}},{"id":"frontend/external-authentication","title":"External authentication","description":"By default, the frontend will take care of its own authentication tokens. If none are found, it will redirect the user to the login page and it will take care of updating the token.","source":"@site/docs/frontend/external-authentication.md","sourceDirName":"frontend","slug":"/frontend/external-authentication","permalink":"/docs/frontend/external-authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/external-authentication.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"External authentication"},"sidebar":"Frontend","previous":{"title":"Data","permalink":"/docs/frontend/data"},"next":{"title":"External bus","permalink":"/docs/frontend/external-bus"}},{"id":"frontend/external-bus","title":"External bus","description":"The frontend is able to set up a message bus with an external app that is embedding the Home Assistant frontend. This system is a generalization of the external authentication, making it easier to add more commands in the future without extensive plumbing on either the app or frontend side.","source":"@site/docs/frontend/external-bus.md","sourceDirName":"frontend","slug":"/frontend/external-bus","permalink":"/docs/frontend/external-bus","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/frontend/external-bus.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"External bus"},"sidebar":"Frontend","previous":{"title":"External authentication","permalink":"/docs/frontend/external-authentication"},"next":{"title":"Adding state card","permalink":"/docs/frontend/extending/adding-state-card"}},{"id":"instance_url","title":"Getting the instance URL","description":"In some cases, an integration requires to know the URL of the users' Home","source":"@site/docs/instance_url.md","sourceDirName":".","slug":"/instance_url","permalink":"/docs/instance_url","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/instance_url.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Getting the instance URL"},"sidebar":"Core","previous":{"title":"Adding type hints to your code","permalink":"/docs/development_typing"}},{"id":"integration_events","title":"Firing events","description":"Some integrations represent devices or services that have events, like when motion is detected or a momentary button is pushed. An integration can make these available to users by firing them as events in Home Assistant.","source":"@site/docs/integration_events.md","sourceDirName":".","slug":"/integration_events","permalink":"/docs/integration_events","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/integration_events.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Firing events"},"sidebar":"Core","previous":{"title":"Handling setup failures","permalink":"/docs/integration_setup_failures"},"next":{"title":"Listening for events","permalink":"/docs/integration_listen_events"}},{"id":"integration_fetching_data","title":"Fetching data","description":"Your integration will need to fetch data from an API to be able to provide this to Home Assistant. This API can be available over the web (local or cloud), sockets, serial ports exposed via USB sticks, etc.","source":"@site/docs/integration_fetching_data.md","sourceDirName":".","slug":"/integration_fetching_data","permalink":"/docs/integration_fetching_data","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/integration_fetching_data.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Fetching data"},"sidebar":"Core","previous":{"title":"Multiple platforms","permalink":"/docs/creating_component_generic_discovery"},"next":{"title":"Handling setup failures","permalink":"/docs/integration_setup_failures"}},{"id":"integration_listen_events","title":"Listening for events","description":"Your integration may need to take action when a specific event happens inside Home Assistant. Home Assistant provides event helpers to listen for particular event types and direct access to the event bus. The helpers are highly optimized to minimize the number of callbacks. If there is already a helper for the specific event you need to listen for, it is preferable to use the helper over listening to the event bus directly.","source":"@site/docs/integration_listen_events.md","sourceDirName":".","slug":"/integration_listen_events","permalink":"/docs/integration_listen_events","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/integration_listen_events.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Listening for events"},"sidebar":"Core","previous":{"title":"Firing events","permalink":"/docs/integration_events"},"next":{"title":"Networking and discovery","permalink":"/docs/network_discovery"}},{"id":"integration_setup_failures","title":"Handling setup failures","description":"Your integration may not be able to be set up for a variety of reasons. The most common cases are because the device or service is offline or the credentials are no longer valid. Your integration must retry setup so it can recover as soon as reasonably possible when the device or service is back online without the user having to restart Home Assistant.","source":"@site/docs/integration_setup_failures.md","sourceDirName":".","slug":"/integration_setup_failures","permalink":"/docs/integration_setup_failures","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/integration_setup_failures.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Handling setup failures"},"sidebar":"Core","previous":{"title":"Fetching data","permalink":"/docs/integration_fetching_data"},"next":{"title":"Firing events","permalink":"/docs/integration_events"}},{"id":"intent_builtin","title":"Built-in intents","description":"The following intents are supported:","source":"@site/docs/intent_builtin.md","sourceDirName":".","slug":"/intent_builtin","permalink":"/docs/intent_builtin","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/intent_builtin.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Built-in intents","toc_max_heading_level":2},"sidebar":"Core","previous":{"title":"Handling intents","permalink":"/docs/intent_handling"},"next":{"title":"Conversation API","permalink":"/docs/intent_conversation_api"}},{"id":"intent_conversation_api","title":"Conversation API","description":"Intents can be recognized from text and fired using the conversation integration.","source":"@site/docs/intent_conversation_api.md","sourceDirName":".","slug":"/intent_conversation_api","permalink":"/docs/intent_conversation_api","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/intent_conversation_api.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Conversation API","sidebar_label":"Conversation API"},"sidebar":"Core","previous":{"title":"Built-in intents","permalink":"/docs/intent_builtin"},"next":{"title":"LLM API","permalink":"/docs/core/llm/"}},{"id":"intent_firing","title":"Firing intents","description":"If your code matches the user's speech or text to intents, you can let the intent be handled by Home Assistant. This can be done from inside your own integration, or via the generic Intent handle API.","source":"@site/docs/intent_firing.md","sourceDirName":".","slug":"/intent_firing","permalink":"/docs/intent_firing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/intent_firing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Firing intents"},"sidebar":"Core","previous":{"title":"Introduction","permalink":"/docs/intent_index"},"next":{"title":"Handling intents","permalink":"/docs/intent_handling"}},{"id":"intent_handling","title":"Handling intents","description":"Any component can register to handle intents. This allows a single component to handle intents fired from multiple voice assistants.","source":"@site/docs/intent_handling.md","sourceDirName":".","slug":"/intent_handling","permalink":"/docs/intent_handling","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/intent_handling.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Handling intents"},"sidebar":"Core","previous":{"title":"Firing intents","permalink":"/docs/intent_firing"},"next":{"title":"Built-in intents","permalink":"/docs/intent_builtin"}},{"id":"intent_index","title":"Intents","description":"An intent is a description of a user's intention. Intents are generated by user actions, like asking Amazon Echo to turn on a light.","source":"@site/docs/intent_index.md","sourceDirName":".","slug":"/intent_index","permalink":"/docs/intent_index","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/intent_index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Intents","sidebar_label":"Introduction"},"sidebar":"Core","previous":{"title":"Actions","permalink":"/docs/device_automation_action"},"next":{"title":"Firing intents","permalink":"/docs/intent_firing"}},{"id":"internationalization","title":"Internationalization","description":"The Home Assistant internationalization project includes preparing platforms and the frontend for localization, as well as the actual translation of localized strings.","source":"@site/docs/internationalization.md","sourceDirName":".","slug":"/internationalization","permalink":"/docs/internationalization","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/internationalization.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Internationalization"},"sidebar":"Internationalization","previous":{"title":"Contributing translation","permalink":"/docs/translations"},"next":{"title":"Backend localization","permalink":"/docs/internationalization/core"}},{"id":"internationalization/core","title":"Backend localization","description":"Translation strings","source":"@site/docs/internationalization/core.md","sourceDirName":"internationalization","slug":"/internationalization/core","permalink":"/docs/internationalization/core","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/internationalization/core.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Backend localization"},"sidebar":"Internationalization","previous":{"title":"Internationalization","permalink":"/docs/internationalization"},"next":{"title":"Custom integration localization","permalink":"/docs/internationalization/custom_integration"}},{"id":"internationalization/custom_integration","title":"Custom integration localization","description":"Translation strings","source":"@site/docs/internationalization/custom_integration.md","sourceDirName":"internationalization","slug":"/internationalization/custom_integration","permalink":"/docs/internationalization/custom_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/internationalization/custom_integration.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Custom integration localization"},"sidebar":"Internationalization","previous":{"title":"Backend localization","permalink":"/docs/internationalization/core"}},{"id":"misc","title":"Miscellaneous","description":"Catch all category. Topics are not related to one another.","source":"@site/docs/misc.md","sourceDirName":".","slug":"/misc","permalink":"/docs/misc","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/misc.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Miscellaneous"},"sidebar":"Misc","next":{"title":"Pull request review process","permalink":"/docs/review-process"}},{"id":"network_discovery","title":"Networking and discovery","description":"Some integrations may need to discover devices on the network via mDNS/Zeroconf, SSDP, or another method once they have been enabled.  The primary use case is to find devices that do not have a known fixed IP Address or for integrations that can dynamically add and remove any number of compatible discoverable devices.","source":"@site/docs/network_discovery.md","sourceDirName":".","slug":"/network_discovery","permalink":"/docs/network_discovery","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/network_discovery.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Networking and discovery","sidebar_label":"Networking and discovery"},"sidebar":"Core","previous":{"title":"Listening for events","permalink":"/docs/integration_listen_events"},"next":{"title":"Building a Bluetooth integration","permalink":"/docs/bluetooth"}},{"id":"operating-system","title":"Home Assistant Operating System","description":"The Home Assistant Operating System is a purpose built operating system specifically designed to run Home Assistant on single board computers and x86-64 systems. It aims to provide a robust and maintenance free operating system to run Home Assistant.","source":"@site/docs/operating-system.md","sourceDirName":".","slug":"/operating-system","permalink":"/docs/operating-system","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Home Assistant Operating System","sidebar_label":"Introduction"},"sidebar":"OperatingSystem","next":{"title":"Getting started","permalink":"/docs/operating-system/getting-started"}},{"id":"operating-system/board-metadata","title":"Board metadata","description":"Each supported board has Home Assistant Operating System (HAOS) specific metadata file named meta. This documents the variables and the available options.","source":"@site/docs/operating-system/board-metadata.md","sourceDirName":"operating-system","slug":"/operating-system/board-metadata","permalink":"/docs/operating-system/board-metadata","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/board-metadata.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Board metadata","sidebar_label":"Metadata"},"sidebar":"OperatingSystem","previous":{"title":"Partitions","permalink":"/docs/operating-system/partition"},"next":{"title":"Deployment","permalink":"/docs/operating-system/deployment"}},{"id":"operating-system/debugging","title":"Debugging the Home Assistant Operating System","description":"This section is not for end users. End users should use the [SSH add-on] to SSH into Home Assistant. This is for developers of Home Assistant. Do not ask for support if you are using these options.","source":"@site/docs/operating-system/debugging.md","sourceDirName":"operating-system","slug":"/operating-system/debugging","permalink":"/docs/operating-system/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/debugging.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Debugging the Home Assistant Operating System","sidebar_label":"Debugging"},"sidebar":"OperatingSystem","previous":{"title":"Getting started","permalink":"/docs/operating-system/getting-started"},"next":{"title":"Partitions","permalink":"/docs/operating-system/partition"}},{"id":"operating-system/deployment","title":"Deployment/Releases","description":"Home Assistant Operating System releases are built from the release branch. GitHub Actions are used to build all public releases. There is no fixed schedule, builds are triggered as needed by the HAOS maintainer. Changes need to get applied to the development branch first and labeled with the rel-x label. The maintainer will backport those patches onto the release branch before the next release.","source":"@site/docs/operating-system/deployment.md","sourceDirName":"operating-system","slug":"/operating-system/deployment","permalink":"/docs/operating-system/deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/deployment.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Deployment/Releases","sidebar_label":"Deployment"},"sidebar":"OperatingSystem","previous":{"title":"Metadata","permalink":"/docs/operating-system/board-metadata"},"next":{"title":"Update system","permalink":"/docs/operating-system/update-system"}},{"id":"operating-system/getting-started","title":"Getting started with Home Assistant Operating System development","description":"Prepare development environment","source":"@site/docs/operating-system/getting-started.md","sourceDirName":"operating-system","slug":"/operating-system/getting-started","permalink":"/docs/operating-system/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/getting-started.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Getting started with Home Assistant Operating System development","sidebar_label":"Getting started"},"sidebar":"OperatingSystem","previous":{"title":"Introduction","permalink":"/docs/operating-system"},"next":{"title":"Debugging","permalink":"/docs/operating-system/debugging"}},{"id":"operating-system/partition","title":"Partitioning","description":"The Home Assistant Operating System (HAOS) partition layout is a bit different than what is typically used on a Linux system.","source":"@site/docs/operating-system/partition.md","sourceDirName":"operating-system","slug":"/operating-system/partition","permalink":"/docs/operating-system/partition","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/partition.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Partitioning","sidebar_label":"Partitions"},"sidebar":"OperatingSystem","previous":{"title":"Debugging","permalink":"/docs/operating-system/debugging"},"next":{"title":"Metadata","permalink":"/docs/operating-system/board-metadata"}},{"id":"operating-system/update-system","title":"Update system","description":"Home Assistant Operating System uses RAUC as the update system. RAUC is an image based update system designed for embedded systems. It has support for multiple boot slots thus supporting A/B style update mechanism. The update system integrates with popular bootloaders such as U-Boot but also allows integration with custom boot flows via scripts. It uses X.509 cryptography to sign and verify update bundles.","source":"@site/docs/operating-system/update-system.md","sourceDirName":"operating-system","slug":"/operating-system/update-system","permalink":"/docs/operating-system/update-system","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/operating-system/update-system.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Update system","sidebar_label":"Update system"},"sidebar":"OperatingSystem","previous":{"title":"Deployment","permalink":"/docs/operating-system/deployment"}},{"id":"review-process","title":"Pull request review process","description":"The Home Assistant project consists of many smaller projects in many GitHub","source":"@site/docs/review-process.md","sourceDirName":".","slug":"/review-process","permalink":"/docs/review-process","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/review-process.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Pull request review process"},"sidebar":"Misc","previous":{"title":"Miscellaneous","permalink":"/docs/misc"},"next":{"title":"Documentation","permalink":"/docs/documenting"}},{"id":"supervisor","title":"Home Assistant Supervisor","description":"The Supervisor allows the user to manage their Home Assistant installation from Home Assistant. The Supervisor has the following responsibilities:","source":"@site/docs/supervisor.md","sourceDirName":".","slug":"/supervisor","permalink":"/docs/supervisor","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/supervisor.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Home Assistant Supervisor","sidebar_label":"Introduction"},"sidebar":"Supervisor","next":{"title":"Development","permalink":"/docs/supervisor/development"}},{"id":"supervisor/debugging","title":"Debugging the Home Assistant Supervisor","description":"The following debug tips and tricks are for developers who are running the Home Assistant image and are working on the base image. If you use the generic Linux installer script, you should be able to access your host and logs as per your host.","source":"@site/docs/supervisor/debugging.md","sourceDirName":"supervisor","slug":"/supervisor/debugging","permalink":"/docs/supervisor/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/supervisor/debugging.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Debugging the Home Assistant Supervisor","sidebar_label":"Debugging"},"sidebar":"Supervisor","previous":{"title":"Development","permalink":"/docs/supervisor/development"},"next":{"title":"Endpoints","permalink":"/docs/api/supervisor/endpoints"}},{"id":"supervisor/development","title":"Supervisor development","description":"These instructions are for development of the Supervisor, the Supervisor frontend panel and the hassio integration, by interacting with a development or remote supervisor, this assumes that you are using a development machine to do the development, these instructions will also use devcontainer and other tools that rely on Docker, so if you don't have that setup yet, do that before you continue.","source":"@site/docs/supervisor/development.md","sourceDirName":"supervisor","slug":"/supervisor/development","permalink":"/docs/supervisor/development","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/supervisor/development.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Supervisor development","sidebar_label":"Development"},"sidebar":"Supervisor","previous":{"title":"Introduction","permalink":"/docs/supervisor"},"next":{"title":"Debugging","permalink":"/docs/supervisor/debugging"}},{"id":"translations","title":"Contributing translation","description":"Translations for Home Assistant are managed through Lokalise, an online translation management tool. Our translations are split between four projects: a backend project for platform-specific translations, a frontend project for UI translations, and two for the official companion apps. Click the links below to join the projects! Even if your language is completely translated, extra proofreading is a big help! Please feel free to review the existing translations, and vote for alternatives that might be more appropriate.","source":"@site/docs/translations.md","sourceDirName":".","slug":"/translations","permalink":"/docs/translations","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/translations.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Contributing translation"},"sidebar":"Internationalization","next":{"title":"Internationalization","permalink":"/docs/internationalization"}},{"id":"voice/contributing-your-voice","title":"Contributing your voice","description":"You can help us and the rest of the  open voice community develop speech-to-text and text-to-speech models for your language.","source":"@site/docs/voice/contributing-your-voice.md","sourceDirName":"voice","slug":"/voice/contributing-your-voice","permalink":"/docs/voice/contributing-your-voice","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/contributing-your-voice.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Contributing your voice"},"sidebar":"Voice","previous":{"title":"Language leaders","permalink":"/docs/voice/language-leaders"}},{"id":"voice/intent-recognition/contributing","title":"Contributing template sentences","description":"Template sentences need to be contributed to our Intents repository on GitHub. The sentences will be reviewed by the language leaders and merged if they are correct. You can either contribute new sentences or improve existing ones.","source":"@site/docs/voice/intent-recognition/contributing.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/contributing","permalink":"/docs/voice/intent-recognition/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/contributing.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Contributing template sentences","sidebar_label":"Contributing sentences"},"sidebar":"Voice","previous":{"title":"Supported languages","permalink":"/docs/voice/intent-recognition/supported-languages"},"next":{"title":"Response Style Guide","permalink":"/docs/voice/intent-recognition/style-guide"}},{"id":"voice/intent-recognition/index","title":"Recognizing intents from user input","description":"A voice assistant evolves around intent recognition. Intent recognition tries to extract the user's intent from their input. This intent, a data format, will then be executed by Home Assistant.","source":"@site/docs/voice/intent-recognition/index.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/","permalink":"/docs/voice/intent-recognition/","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Recognizing intents from user input","sidebar_label":"Introduction"},"sidebar":"Voice","previous":{"title":"Intents","permalink":"/docs/voice/intents/"},"next":{"title":"Template sentence syntax","permalink":"/docs/voice/intent-recognition/template-sentence-syntax"}},{"id":"voice/intent-recognition/style-guide","title":"Response Style Guide","description":"This document describes the style guide for responses.","source":"@site/docs/voice/intent-recognition/style-guide.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/style-guide","permalink":"/docs/voice/intent-recognition/style-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/style-guide.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Response Style Guide"},"sidebar":"Voice","previous":{"title":"Contributing sentences","permalink":"/docs/voice/intent-recognition/contributing"},"next":{"title":"Assist pipelines","permalink":"/docs/voice/pipelines/"}},{"id":"voice/intent-recognition/supported-languages","title":"Supported languages","description":"If you don't see your language below, help us translate!","source":"@site/docs/voice/intent-recognition/supported-languages.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/supported-languages","permalink":"/docs/voice/intent-recognition/supported-languages","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/supported-languages.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Supported languages"},"sidebar":"Voice","previous":{"title":"Test syntax","permalink":"/docs/voice/intent-recognition/test-syntax"},"next":{"title":"Contributing sentences","permalink":"/docs/voice/intent-recognition/contributing"}},{"id":"voice/intent-recognition/template-sentence-syntax","title":"Template sentence syntax","description":"Template sentences are defined in YAML files using the format of Hassil, our template matcher. Our template sentences are stored on GitHub and are organized by having for each language a directory of files in sentences//:","source":"@site/docs/voice/intent-recognition/template-sentence-syntax.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/template-sentence-syntax","permalink":"/docs/voice/intent-recognition/template-sentence-syntax","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/template-sentence-syntax.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Template sentence syntax"},"sidebar":"Voice","previous":{"title":"Introduction","permalink":"/docs/voice/intent-recognition/"},"next":{"title":"Test syntax","permalink":"/docs/voice/intent-recognition/test-syntax"}},{"id":"voice/intent-recognition/test-syntax","title":"Intent matching test syntax","description":"To ensure that the template sentences work as expected, we have an extensive test suite. This test suite is based on YAML files that contain a list of input sentences and the expected matched intent and slots.","source":"@site/docs/voice/intent-recognition/test-syntax.md","sourceDirName":"voice/intent-recognition","slug":"/voice/intent-recognition/test-syntax","permalink":"/docs/voice/intent-recognition/test-syntax","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intent-recognition/test-syntax.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Intent matching test syntax","sidebar_label":"Test syntax"},"sidebar":"Voice","previous":{"title":"Template sentence syntax","permalink":"/docs/voice/intent-recognition/template-sentence-syntax"},"next":{"title":"Supported languages","permalink":"/docs/voice/intent-recognition/supported-languages"}},{"id":"voice/intents/index","title":"Intents","description":"See the Home Assistant Core documentation for intents for:","source":"@site/docs/voice/intents/index.md","sourceDirName":"voice/intents","slug":"/voice/intents/","permalink":"/docs/voice/intents/","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/intents/index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Intents"},"sidebar":"Voice","previous":{"title":"Overview","permalink":"/docs/voice/overview"},"next":{"title":"Introduction","permalink":"/docs/voice/intent-recognition/"}},{"id":"voice/language-leaders","title":"Language leaders","description":"Home Assistant is a global project. We want to make sure that everyone can use Home Assistant in their native language. For that reason, we have language leaders for each language to lead the maintenance.","source":"@site/docs/voice/language-leaders.md","sourceDirName":"voice","slug":"/voice/language-leaders","permalink":"/docs/voice/language-leaders","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/language-leaders.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Language leaders"},"sidebar":"Voice","previous":{"title":"Assist pipelines","permalink":"/docs/voice/pipelines/"},"next":{"title":"Contributing your voice","permalink":"/docs/voice/contributing-your-voice"}},{"id":"voice/overview","title":"Voice in Home Assistant","description":"Building a voice assistant is a complex task. It requires a lot of different technologies to work together. This page will give you an overview of the different parts inside Home Assistant and how they will work together.","source":"@site/docs/voice/overview.md","sourceDirName":"voice","slug":"/voice/overview","permalink":"/docs/voice/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/overview.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Voice in Home Assistant","sidebar_label":"Overview"},"sidebar":"Voice","next":{"title":"Intents","permalink":"/docs/voice/intents/"}},{"id":"voice/pipelines/index","title":"Assist pipelines","description":"The Assist pipeline integration runs the common steps of a voice assistant:","source":"@site/docs/voice/pipelines/index.md","sourceDirName":"voice/pipelines","slug":"/voice/pipelines/","permalink":"/docs/voice/pipelines/","draft":false,"unlisted":false,"editUrl":"https://github.com/home-assistant/developers.home-assistant/edit/master/docs/voice/pipelines/index.md","tags":[],"version":"current","lastUpdatedAt":1539502055000,"frontMatter":{"title":"Assist pipelines"},"sidebar":"Voice","previous":{"title":"Response Style Guide","permalink":"/docs/voice/intent-recognition/style-guide"},"next":{"title":"Language leaders","permalink":"/docs/voice/language-leaders"}}],"drafts":[],"sidebars":{"Addons":[{"type":"doc","id":"add-ons"},{"type":"doc","id":"add-ons/tutorial"},{"type":"doc","id":"add-ons/configuration"},{"type":"doc","id":"add-ons/communication"},{"type":"doc","id":"add-ons/testing"},{"type":"doc","id":"add-ons/publishing"},{"type":"doc","id":"add-ons/presentation"},{"type":"doc","id":"add-ons/repository"},{"type":"doc","id":"add-ons/security"}],"Overview":[{"type":"doc","id":"architecture_index"}],"Frontend":[{"type":"doc","id":"frontend"},{"type":"doc","id":"frontend/architecture"},{"type":"doc","id":"frontend/design"},{"type":"doc","id":"frontend/development"},{"type":"doc","id":"frontend/data"},{"type":"doc","id":"frontend/external-authentication"},{"type":"doc","id":"frontend/external-bus"},{"type":"category","label":"Extending the frontend","items":[{"type":"doc","id":"frontend/extending/adding-state-card"},{"type":"doc","id":"frontend/extending/adding-more-info-dialogs"},{"type":"doc","id":"frontend/extending/websocket-api"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Custom UI","items":[{"type":"doc","id":"frontend/custom-ui/custom-card"},{"type":"doc","id":"frontend/custom-ui/custom-card-feature"},{"type":"doc","id":"frontend/custom-ui/custom-badge"},{"type":"doc","id":"frontend/custom-ui/custom-strategy"},{"type":"doc","id":"frontend/custom-ui/custom-view"},{"type":"doc","id":"frontend/custom-ui/creating-custom-panels"},{"type":"doc","id":"frontend/custom-ui/registering-resources"}],"collapsed":true,"collapsible":true}],"Internationalization":[{"type":"doc","id":"translations"},{"type":"doc","id":"internationalization"},{"type":"doc","id":"internationalization/core"},{"type":"doc","id":"internationalization/custom_integration"}],"OperatingSystem":[{"type":"doc","id":"operating-system"},{"type":"doc","id":"operating-system/getting-started"},{"type":"doc","id":"operating-system/debugging"},{"type":"doc","id":"operating-system/partition"},{"type":"doc","id":"operating-system/board-metadata"},{"type":"doc","id":"operating-system/deployment"},{"type":"doc","id":"operating-system/update-system"}],"Supervisor":[{"type":"doc","id":"supervisor"},{"type":"doc","id":"supervisor/development"},{"type":"doc","id":"supervisor/debugging"},{"type":"category","label":"Supervisor API","items":[{"type":"doc","id":"api/supervisor/endpoints"},{"type":"doc","id":"api/supervisor/models"},{"type":"doc","id":"api/supervisor/examples"}],"collapsed":true,"collapsible":true}],"Core":[{"type":"doc","id":"development_index"},{"type":"category","label":"Architecture","items":[{"type":"doc","id":"architecture/core"},{"type":"doc","id":"architecture_components"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Development Workflow","items":[{"type":"doc","id":"development_environment"},{"type":"doc","id":"development_submitting"},{"type":"doc","id":"development_guidelines"},{"type":"doc","id":"development_testing"},{"type":"doc","id":"development_catching_up"},{"type":"doc","id":"development_tips"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Building Integrations","items":[{"type":"doc","id":"creating_component_index"},{"type":"doc","id":"creating_integration_file_structure"},{"type":"doc","id":"creating_integration_tests_file_structure"},{"type":"doc","id":"creating_integration_manifest"},{"type":"doc","id":"config_entries_config_flow_handler"},{"type":"doc","id":"config_entries_options_flow_handler"},{"type":"doc","id":"core/integration_diagnostics"},{"type":"doc","id":"core/integration_system_health"},{"type":"doc","id":"configuration_yaml_index"},{"type":"doc","id":"dev_101_services"},{"type":"doc","id":"creating_platform_index"},{"type":"doc","id":"creating_component_generic_discovery"},{"type":"doc","id":"integration_fetching_data"},{"type":"doc","id":"integration_setup_failures"},{"type":"doc","id":"integration_events"},{"type":"doc","id":"integration_listen_events"},{"type":"doc","id":"network_discovery"},{"type":"category","label":"Bluetooth","items":[{"type":"doc","id":"bluetooth"},{"type":"doc","id":"core/bluetooth/bluetooth_fetching_data"},{"type":"doc","id":"core/bluetooth/api"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Development Checklist","items":[{"type":"doc","id":"development_checklist"},{"type":"doc","id":"creating_component_code_review"},{"type":"doc","id":"creating_platform_code_review"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Integration Quality Scale","link":{"type":"doc","id":"core/integration-quality-scale/index"},"items":[{"type":"doc","id":"core/integration-quality-scale/checklist"},{"type":"category","label":"Rules","items":[{"type":"doc","id":"core/integration-quality-scale/rules/action-setup"},{"type":"doc","id":"core/integration-quality-scale/rules/appropriate-polling"},{"type":"doc","id":"core/integration-quality-scale/rules/brands"},{"type":"doc","id":"core/integration-quality-scale/rules/common-modules"},{"type":"doc","id":"core/integration-quality-scale/rules/config-flow-test-coverage"},{"type":"doc","id":"core/integration-quality-scale/rules/config-flow"},{"type":"doc","id":"core/integration-quality-scale/rules/dependency-transparency"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-actions"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-high-level-description"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-installation-instructions"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-removal-instructions"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-event-setup"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-unique-id"},{"type":"doc","id":"core/integration-quality-scale/rules/has-entity-name"},{"type":"doc","id":"core/integration-quality-scale/rules/runtime-data"},{"type":"doc","id":"core/integration-quality-scale/rules/test-before-configure"},{"type":"doc","id":"core/integration-quality-scale/rules/test-before-setup"},{"type":"doc","id":"core/integration-quality-scale/rules/unique-config-entry"},{"type":"doc","id":"core/integration-quality-scale/rules/action-exceptions"},{"type":"doc","id":"core/integration-quality-scale/rules/config-entry-unloading"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-configuration-parameters"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-installation-parameters"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-unavailable"},{"type":"doc","id":"core/integration-quality-scale/rules/integration-owner"},{"type":"doc","id":"core/integration-quality-scale/rules/log-when-unavailable"},{"type":"doc","id":"core/integration-quality-scale/rules/parallel-updates"},{"type":"doc","id":"core/integration-quality-scale/rules/reauthentication-flow"},{"type":"doc","id":"core/integration-quality-scale/rules/test-coverage"},{"type":"doc","id":"core/integration-quality-scale/rules/devices"},{"type":"doc","id":"core/integration-quality-scale/rules/diagnostics"},{"type":"doc","id":"core/integration-quality-scale/rules/discovery-update-info"},{"type":"doc","id":"core/integration-quality-scale/rules/discovery"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-data-update"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-examples"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-known-limitations"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-supported-devices"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-supported-functions"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-troubleshooting"},{"type":"doc","id":"core/integration-quality-scale/rules/docs-use-cases"},{"type":"doc","id":"core/integration-quality-scale/rules/dynamic-devices"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-category"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-device-class"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-disabled-by-default"},{"type":"doc","id":"core/integration-quality-scale/rules/entity-translations"},{"type":"doc","id":"core/integration-quality-scale/rules/exception-translations"},{"type":"doc","id":"core/integration-quality-scale/rules/icon-translations"},{"type":"doc","id":"core/integration-quality-scale/rules/reconfiguration-flow"},{"type":"doc","id":"core/integration-quality-scale/rules/repair-issues"},{"type":"doc","id":"core/integration-quality-scale/rules/stale-devices"},{"type":"doc","id":"core/integration-quality-scale/rules/async-dependency"},{"type":"doc","id":"core/integration-quality-scale/rules/inject-websession"},{"type":"doc","id":"core/integration-quality-scale/rules/strict-typing"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"The `hass` object","items":[{"type":"doc","id":"dev_101_hass"},{"type":"doc","id":"dev_101_events"},{"type":"doc","id":"dev_101_states"},{"type":"doc","id":"dev_101_config"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Entities","items":[{"type":"doc","id":"core/entity"},{"type":"doc","id":"core/entity/air-quality","label":"Air quality"},{"type":"doc","id":"core/entity/alarm-control-panel","label":"Alarm control panel"},{"type":"doc","id":"core/entity/assist-satellite","label":"Assist satellite"},{"type":"doc","id":"core/entity/binary-sensor","label":"Binary sensor"},{"type":"doc","id":"core/entity/button","label":"Button"},{"type":"doc","id":"core/entity/calendar","label":"Calendar"},{"type":"doc","id":"core/entity/camera","label":"Camera"},{"type":"doc","id":"core/entity/climate","label":"Climate"},{"type":"doc","id":"core/entity/conversation","label":"Conversation"},{"type":"doc","id":"core/entity/cover","label":"Cover"},{"type":"doc","id":"core/entity/date","label":"Date"},{"type":"doc","id":"core/entity/datetime","label":"Date/Time"},{"type":"doc","id":"core/entity/device-tracker","label":"Device tracker"},{"type":"doc","id":"core/entity/event","label":"Event"},{"type":"doc","id":"core/entity/fan","label":"Fan"},{"type":"doc","id":"core/entity/humidifier","label":"Humidifier"},{"type":"doc","id":"core/entity/image","label":"Image"},{"type":"doc","id":"core/entity/lawn-mower","label":"Lawn mower"},{"type":"doc","id":"core/entity/light","label":"Light"},{"type":"doc","id":"core/entity/lock","label":"Lock"},{"type":"doc","id":"core/entity/media-player","label":"Media player"},{"type":"doc","id":"core/entity/notify","label":"Notify"},{"type":"doc","id":"core/entity/number","label":"Number"},{"type":"doc","id":"core/entity/remote","label":"Remote"},{"type":"doc","id":"core/entity/scene","label":"Scene"},{"type":"doc","id":"core/entity/select","label":"Select"},{"type":"doc","id":"core/entity/sensor","label":"Sensor"},{"type":"doc","id":"core/entity/siren","label":"Siren"},{"type":"doc","id":"core/entity/stt","label":"Speech-to-text"},{"type":"doc","id":"core/entity/switch","label":"Switch"},{"type":"doc","id":"core/entity/text","label":"Text"},{"type":"doc","id":"core/entity/time","label":"Time"},{"type":"doc","id":"core/entity/todo","label":"To-do list"},{"type":"doc","id":"core/entity/tts","label":"Text-to-speech"},{"type":"doc","id":"core/entity/update","label":"Update"},{"type":"doc","id":"core/entity/vacuum","label":"Vacuum"},{"type":"doc","id":"core/entity/valve","label":"Valve"},{"type":"doc","id":"core/entity/wake_word","label":"Wake word detection"},{"type":"doc","id":"core/entity/water-heater","label":"Water heater"},{"type":"doc","id":"core/entity/weather","label":"Weather"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Areas, Devices and Entities","items":[{"type":"doc","id":"architecture/devices-and-services"},{"type":"doc","id":"entity_registry_index"},{"type":"doc","id":"entity_registry_disabled_by"},{"type":"doc","id":"device_registry_index"},{"type":"doc","id":"area_registry_index"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Authentication","items":[{"type":"doc","id":"auth_index"},{"type":"doc","id":"auth_permissions"},{"type":"doc","id":"auth_api"},{"type":"doc","id":"auth_auth_provider"},{"type":"doc","id":"auth_auth_module"}],"collapsed":true,"collapsible":true},{"type":"doc","id":"config_entries_index"},{"type":"doc","id":"data_entry_flow_index"},{"type":"category","label":"Device Automations","items":[{"type":"doc","id":"device_automation_index"},{"type":"doc","id":"device_automation_trigger"},{"type":"doc","id":"device_automation_condition"},{"type":"doc","id":"device_automation_action"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Intents","items":[{"type":"doc","id":"intent_index"},{"type":"doc","id":"intent_firing"},{"type":"doc","id":"intent_handling"},{"type":"doc","id":"intent_builtin"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Conversation","items":[{"type":"doc","id":"intent_conversation_api"}],"collapsed":true,"collapsible":true},{"type":"doc","id":"core/llm/index"},{"type":"category","label":"Native App Integration","items":[{"type":"doc","id":"api/native-app-integration"},{"type":"doc","id":"api/native-app-integration/setup"},{"type":"doc","id":"api/native-app-integration/sending-data"},{"type":"doc","id":"api/native-app-integration/sensors"},{"type":"doc","id":"api/native-app-integration/notifications"},{"type":"doc","id":"api/native-app-integration/webview"}],"collapsed":true,"collapsible":true},{"type":"doc","id":"creating_integration_brand"},{"type":"doc","id":"core/platform/application_credentials"},{"type":"doc","id":"core/platform/backup"},{"type":"doc","id":"core/platform/raising_exceptions"},{"type":"doc","id":"core/platform/repairs"},{"type":"doc","id":"core/platform/reproduce_state"},{"type":"doc","id":"core/platform/significant_change"},{"type":"category","label":"External APIs","items":[{"type":"doc","id":"api/websocket"},{"type":"doc","id":"api/rest"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Misc","items":[{"type":"doc","id":"development_validation"},{"type":"doc","id":"development_typing"},{"type":"doc","id":"instance_url"}],"collapsed":true,"collapsible":true}],"Voice":[{"type":"doc","id":"voice/overview"},{"type":"doc","id":"voice/intents/index"},{"type":"category","label":"Intent Recognition","items":[{"type":"doc","id":"voice/intent-recognition/index"},{"type":"doc","id":"voice/intent-recognition/template-sentence-syntax"},{"type":"doc","id":"voice/intent-recognition/test-syntax"},{"type":"doc","id":"voice/intent-recognition/supported-languages"},{"type":"doc","id":"voice/intent-recognition/contributing"},{"type":"doc","id":"voice/intent-recognition/style-guide"}],"collapsed":true,"collapsible":true},{"type":"doc","id":"voice/pipelines/index"},{"type":"doc","id":"voice/language-leaders"},{"type":"doc","id":"voice/contributing-your-voice"}],"Misc":[{"type":"doc","id":"misc"},{"type":"doc","id":"review-process"},{"type":"category","label":"Documenting","items":[{"type":"doc","id":"documenting"},{"type":"doc","id":"documenting/standards"},{"type":"doc","id":"documenting/yaml-style-guide"},{"type":"doc","id":"documenting/create-page"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Building a Python library","items":[{"type":"doc","id":"api_lib_index"},{"type":"doc","id":"api_lib_auth"},{"type":"doc","id":"api_lib_data_models"}],"collapsed":true,"collapsible":true},{"type":"category","label":"asyncio","items":[{"type":"doc","id":"asyncio_index"},{"type":"doc","id":"asyncio_101"},{"type":"doc","id":"asyncio_categorizing_functions"},{"type":"doc","id":"asyncio_working_with_async"},{"type":"doc","id":"asyncio_thread_safety"},{"type":"doc","id":"asyncio_blocking_operations"}],"collapsed":true,"collapsible":true}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[{"id":"/2025/01/31/energy-distance-units","metadata":{"permalink":"/blog/2025/01/31/energy-distance-units","source":"@site/blog/2025-01-31-energy-distance-units.md","title":"Energy by distance units","description":"Summary of changes","date":"2025-01-31T00:00:00.000Z","tags":[],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"jschlyter","url":"https://github.com/jschlyter","key":null,"page":null}],"frontMatter":{"author":"jschlyter","authorURL":"https://github.com/jschlyter","title":"Energy by distance units"},"unlisted":false,"nextItem":{"title":"Relocate dhcp/ssdp/usb/zeroconf ServiceInfo models","permalink":"/blog/2025/01/15/service-info"}},"content":"### Summary of changes\n\nA new `ENERGY_DISTANCE` device class for representing energy per distance is now available for number and sensor entities, together with automatic unit conversion based on the unit system. \nThis new device class can be used, for example, on entities that show the amount of electric energy consumed by an electric car. A corresponding `UnitOfEnergyDistance` unit enumerator, and `EnergyDistanceConverter` converter class have been added to support the new device class.\n\nThe following units are available:\n\n- kWh/100km\n- mi/kWh\n- km/kWh\n\nMore details can be found in the [Number documentation](/docs/core/entity/number#available-device-classes) and [Sensor documentation](/docs/core/entity/sensor#available-device-classes)\n\n\n### Inverse Units\n\nImplementing `EnergyDistanceConverter` has also resulted in support for inverse units in `BaseUnitConverter`. This simplifies adding new units that are inverses of one another, e.g., kWh/100km and km/kWh."},{"id":"/2025/01/15/service-info","metadata":{"permalink":"/blog/2025/01/15/service-info","source":"@site/blog/2025-01-15-service-info.md","title":"Relocate dhcp/ssdp/usb/zeroconf ServiceInfo models","description":"Summary of changes","date":"2025-01-15T00:00:00.000Z","tags":[],"readingTime":0.915,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Relocate dhcp/ssdp/usb/zeroconf ServiceInfo models"},"unlisted":false,"prevItem":{"title":"Energy by distance units","permalink":"/blog/2025/01/31/energy-distance-units"},"nextItem":{"title":"New area device class","permalink":"/blog/2024/12/26/area-squared-units"}},"content":"### Summary of changes\n\nTo reduce current reliance on optional integrations for names that are in essence used as helpers, the following ServiceInfo models have been relocated:\n- `DhcpServiceInfo` from `homeassistant.components.dhcp` to `homeassistant.helpers.service_info.dhcp`\n- `SsdpServiceInfo` from `homeassistant.components.ssdp` to `homeassistant.helpers.service_info.ssdp`\n- `UsbServiceInfo` from `homeassistant.components.usb` to `homeassistant.helpers.service_info.usb`\n- `ZeroconfServiceInfo` from `homeassistant.components.zeroconf` to `homeassistant.helpers.service_info.zeroconf`\n\n\nTo update your integration:\n1. Replace the import statements as shown in the examples below\n2. Test your integration with the new imports\n\nThe old import locations are deprecated and will be removed in Home Assistant 2026.2.\n\n\n### Examples\n\n```python\n# Old\n# from homeassistant.components.dhcp import DhcpServiceInfo\n# from homeassistant.components.ssdp import SsdpServiceInfo\n# from homeassistant.components.usb import UsbServiceInfo\n# from homeassistant.components.zeroconf import ZeroconfServiceInfo\n\n# New\nfrom homeassistant.helpers.service_info.dhcp import DhcpServiceInfo\nfrom homeassistant.helpers.service_info.ssdp import SsdpServiceInfo\nfrom homeassistant.helpers.service_info.usb import UsbServiceInfo\nfrom homeassistant.helpers.service_info.zeroconf import ZeroconfServiceInfo\n\nclass MyConfigFlow(ConfigFlow, domain=DOMAIN):\n    \"\"\"Handle a config flow.\"\"\"\n\n    async def async_step_dhcp(self, discovery_info: DhcpServiceInfo) -> ConfigFlowResult:\n        \"\"\"Handle dhcp discovery.\"\"\"\n        ...\n\n    async def async_step_ssdp(self, discovery_info: SsdpServiceInfo) -> ConfigFlowResult:\n        \"\"\"Handle ssdp discovery.\"\"\"\n        ...\n\n    async def async_step_usb(self, discovery_info: UsbServiceInfo) -> ConfigFlowResult:\n        \"\"\"Handle usb discovery.\"\"\"\n        ...\n\n    async def async_step_zeroconf(self, discovery_info: ZeroconfServiceInfo) -> ConfigFlowResult:\n        \"\"\"Handle zeroconf discovery.\"\"\"\n        ...\n```"},{"id":"/2024/12/26/area-squared-units","metadata":{"permalink":"/blog/2024/12/26/area-squared-units","source":"@site/blog/2024-12-26-area-squared-units.md","title":"New area device class","description":"Summary of changes","date":"2024-12-26T00:00:00.000Z","tags":[],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"mikey0000","url":"https://github.com/mikey0000","key":null,"page":null}],"frontMatter":{"author":"mikey0000","authorURL":"https://github.com/mikey0000","title":"New area device class"},"unlisted":false,"prevItem":{"title":"Relocate dhcp/ssdp/usb/zeroconf ServiceInfo models","permalink":"/blog/2025/01/15/service-info"},"nextItem":{"title":"Moving to Pydantic v2","permalink":"/blog/2024/12/21/moving-to-pydantic-v2"}},"content":"### Summary of changes\nA new `AREA` device class is now available for number and sensor entities, together with automatic unit conversion based on the unit system.\nA corresponding `UnitOfArea` unit enumerator, and `AreaConverter` converter class have been added to support the new device class.\n\n### Backward compatibility\nThe `AREA_SQUARE_METERS` constant has been deprecated and will be removed in Home Assistant `2025.12`.\nCustom integrations should be adjusted to use `UnitOfArea.SQUARE_METERS`.\n\nMore details can be found in the [Number documentation](/docs/core/entity/number#available-device-classes) and [Sensor documentation](/docs/core/entity/sensor#available-device-classes)"},{"id":"/2024/12/21/moving-to-pydantic-v2","metadata":{"permalink":"/blog/2024/12/21/moving-to-pydantic-v2","source":"@site/blog/2024-12-21-moving-to-pydantic-v2.md","title":"Moving to Pydantic v2","description":"Pydantic is a widely used library in Python for data validation. On June 30, 2023, Pydantic v2 was released, introducing significant changes that are not backward compatible with Pydantic v1.","date":"2024-12-21T00:00:00.000Z","tags":[],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"Joost Lekkerkerker","url":"https://github.com/joostlek","imageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","key":null,"page":null}],"frontMatter":{"author":"Joost Lekkerkerker","authorURL":"https://github.com/joostlek","authorImageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","title":"Moving to Pydantic v2"},"unlisted":false,"prevItem":{"title":"New area device class","permalink":"/blog/2024/12/26/area-squared-units"},"nextItem":{"title":"Use Kelvin as the preferred color temperature unit","permalink":"/blog/2024/12/14/kelvin-preferred-color-temperature-unit"}},"content":"Pydantic is a widely used library in Python for data validation. On June 30, 2023, Pydantic v2 was released, introducing significant changes that are not backward compatible with Pydantic v1.\n\nStarting with Home Assistant Core 2025.1, Pydantic v2 will replace v1. If your custom integration uses Pydantic, it must be updated to support Pydantic v2 to keep working in the upcoming release.\n\nOver the past year, our community has worked hard to ensure that the libraries used by Home Assistant Core are compatible with both Pydantic v1 and v2. This dual compatibility has helped make our transition to Pydantic v2 as smooth as possible.\n\nFor a quick migration, you can use the Pydantic v1 shims included in Pydantic v2. Detailed information about using these shims in a v1/v2 environment can be found in the [Pydantic migration guide](https://docs.pydantic.dev/latest/migration/#using-pydantic-v1-features-in-a-v1v2-environment)."},{"id":"/2024/12/14/kelvin-preferred-color-temperature-unit","metadata":{"permalink":"/blog/2024/12/14/kelvin-preferred-color-temperature-unit","source":"@site/blog/2024-12-14-kelvin-preferred-color-temperature-unit.md","title":"Use Kelvin as the preferred color temperature unit","description":"Summary of changes","date":"2024-12-14T00:00:00.000Z","tags":[],"readingTime":1.675,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Use Kelvin as the preferred color temperature unit"},"unlisted":false,"prevItem":{"title":"Moving to Pydantic v2","permalink":"/blog/2024/12/21/moving-to-pydantic-v2"},"nextItem":{"title":"Changed name of WaterHeaterEntityDescription","permalink":"/blog/2024/12/13/water-heater-entity-description"}},"content":"### Summary of changes\n\nIn October 2022, Home Assistant migrated the preferred color temperature unit from mired to kelvin.\n\nIt is now time to add deprecation warnings for the corresponding attributes, constants and properties:\n* Deprecate state and capability attributes `ATTR_COLOR_TEMP`, `ATTR_MIN_MIREDS` and `ATTR_MAX_MIREDS`\n* Deprecate constants `ATTR_KELVIN` and `ATTR_COLOR_TEMP` from the `light.turn_on` service call\n* Deprecate properties `LightEntity.color_temp`, `LightEntity.min_mireds` and `LightEntity.max_mireds`\n* Deprecate corresponding attributes `LightEntity._attr_color_temp`, `LightEntity._attr_min_mired` and `LightEntity._attr_max_mired`\n\n### Examples\n\n#### Custom minimum/maximum color temperature\n\n```python\nclass MyLight(LightEntity):\n    \"\"\"Representation of a light.\"\"\"\n\n    # Old\n    # _attr_min_mireds = 200 # 5000K\n    # _attr_max_mireds = 400 # 2500K\n\n    # New\n    _attr_min_color_temp_kelvin = 2500 # 400 mireds\n    _attr_max_color_temp_kelvin = 5000 # 200 mireds\n```\n\n#### Default minimum/maximum color temperature\n\n```python\nfrom homeassistant.components.light import DEFAULT_MAX_KELVIN, DEFAULT_MIN_KELVIN\n\nclass MyLight(LightEntity):\n    \"\"\"Representation of a light.\"\"\"\n\n    # Old did not need to have _attr_min_mireds / _attr_max_mireds set\n    # New needs to set the default explicitly\n    _attr_min_color_temp_kelvin = DEFAULT_MIN_KELVIN\n    _attr_max_color_temp_kelvin = DEFAULT_MAX_KELVIN\n```\n\n#### Dynamic minimum/maximum color temperature\n\n```python\nfrom homeassistant.util import color as color_util\n\nclass MyLight(LightEntity):\n    \"\"\"Representation of a light.\"\"\"\n\n    # Old\n    # def min_mireds(self) -> int:\n    #     \"\"\"Return the coldest color_temp that this light supports.\"\"\"\n    #     return device.coldest_temperature\n    #\n    # def max_mireds(self) -> int:\n    #     \"\"\"Return the warmest color_temp that this light supports.\"\"\"\n    #     return device.warmest_temperature\n\n    # New\n    def min_color_temp_kelvin(self) -> int:\n        \"\"\"Return the warmest color_temp that this light supports.\"\"\"\n        return color_util.color_temperature_mired_to_kelvin(device.warmest_temperature)\n\n    def max_color_temp_kelvin(self) -> int:\n        \"\"\"Return the coldest color_temp that this light supports.\"\"\"\n        return color_util.color_temperature_mired_to_kelvin(device.coldest_temperature)\n```\n\n#### Service call\n\n```python\nfrom homeassistant.components.light import ATTR_COLOR_TEMP_KELVIN\nfrom homeassistant.util import color as color_util\n\nclass MyLight(LightEntity):\n    \"\"\"Representation of a light.\"\"\"\n    def turn_on(self, **kwargs: Any) -> None:\n        \"\"\"Turn on the light.\"\"\"\n        # Old\n        # if ATTR_COLOR_TEMP in kwargs:\n        #     color_temp_mired = kwargs[ATTR_COLOR_TEMP]\n        #     color_temp_kelvin = color_util.color_temperature_mired_to_kelvin(color_temp_mired)\n\n        # Old\n        # if ATTR_KELVIN in kwargs:\n        #     color_temp_kelvin = kwargs[ATTR_KELVIN]\n        #     color_temp_mired = color_util.color_temperature_kelvin_to_mired(color_temp_kelvin)\n\n        # New\n        if ATTR_COLOR_TEMP_KELVIN in kwargs:\n            color_temp_kelvin = kwargs[ATTR_COLOR_TEMP_KELVIN]\n            color_temp_mired = color_util.color_temperature_kelvin_to_mired(color_temp_kelvin)\n```\n\n### Background information\n\n* [Community discussion about Kelvin temperature](https://community.home-assistant.io/t/wth-is-light-temperature-not-in-kelvin/467449/6)\n* [Core PR #79591: Migration to Kelvin](https://github.com/home-assistant/core/pull/79591)\n* [Architecture discussion #564](https://github.com/home-assistant/architecture/discussions/564)"},{"id":"/2024/12/13/water-heater-entity-description","metadata":{"permalink":"/blog/2024/12/13/water-heater-entity-description","source":"@site/blog/2024-12-13-water-heater-entity-description.md","title":"Changed name of WaterHeaterEntityDescription","description":"A naming error of the entity description was found in the Water Heater integration, and we have now renamed WaterHeaterEntityEntityDescription to WaterHeaterEntityDescription in the 2025.1 release.","date":"2024-12-13T00:00:00.000Z","tags":[],"readingTime":0.265,"hasTruncateMarker":false,"authors":[{"name":"L Boué","url":"https://github.com/lboue","key":null,"page":null}],"frontMatter":{"author":"L Boué","authorURL":"https://github.com/lboue","authorTwitter":"lboue","title":"Changed name of WaterHeaterEntityDescription"},"unlisted":false,"prevItem":{"title":"Use Kelvin as the preferred color temperature unit","permalink":"/blog/2024/12/14/kelvin-preferred-color-temperature-unit"},"nextItem":{"title":"New vacuum state property","permalink":"/blog/2024/12/08/new-vacuum-state-property"}},"content":"A naming error of the entity description was found in the Water Heater integration, and we have now renamed `WaterHeaterEntityEntityDescription` to `WaterHeaterEntityDescription` in the 2025.1 release.\nThe old `WaterHeaterEntityEntityDescription` is deprecated, due for removal in 2026.1, and developpers are advised to use the new `WaterHeaterEntityDescription` instead.\n\nSee details in the core PR: [#132888](https://github.com/home-assistant/core/pull/132888)."},{"id":"/2024/12/08/new-vacuum-state-property","metadata":{"permalink":"/blog/2024/12/08/new-vacuum-state-property","source":"@site/blog/2024-12-08-new-vacuum-state-property.md","title":"New vacuum state property","description":"As of Home Assistant Core 2025.1, the constants used to return state in StateVacuumEntity are deprecated and replaced by the VacuumActivity enum.","date":"2024-12-08T00:00:00.000Z","tags":[],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"New vacuum state property"},"unlisted":false,"prevItem":{"title":"Changed name of WaterHeaterEntityDescription","permalink":"/blog/2024/12/13/water-heater-entity-description"},"nextItem":{"title":"Climate entity now supports independent horizontal swing","permalink":"/blog/2024/12/03/climate-horizontal-swing"}},"content":"As of Home Assistant Core 2025.1, the constants used to return state in `StateVacuumEntity` are deprecated and replaced by the `VacuumActivity` enum.\n\nAlso with this change, integrations should set the `activity` property instead of directly setting the `state` property.\n\nThere is a one-year deprecation period, and the constants will stop working from 2026.1 to ensure all custom integration authors have time to adjust.\n\n### Example\n\n```python\n\nfrom homeassistant.components.vacuum import VacuumActivity\n\nclass MyVacuumCleaner(StateVacuumEntity):\n    \"\"\"My vacuum cleaner.\"\"\"\n\n    @property\n    def activity(self) -> VacuumActivity | None:\n        \"\"\"Return the state of the vacuum.\"\"\"\n        if self.device.is_cleaning():\n            return VacuumActivity.CLEANING\n        return VacuumActivity.DOCKED\n\n```\n\nMore details can be found in the [vacuum documentation](/docs/core/entity/vacuum#states)."},{"id":"/2024/12/03/climate-horizontal-swing","metadata":{"permalink":"/blog/2024/12/03/climate-horizontal-swing","source":"@site/blog/2024-12-03-climate-horizontal-swing.md","title":"Climate entity now supports independent horizontal swing","description":"As of Home Assistant Core 2024.12, we have implemented an independent property and method for controlling horizontal swing in ClimateEntity.","date":"2024-12-03T00:00:00.000Z","tags":[],"readingTime":1.1,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Climate entity now supports independent horizontal swing"},"unlisted":false,"prevItem":{"title":"New vacuum state property","permalink":"/blog/2024/12/08/new-vacuum-state-property"},"nextItem":{"title":"Utility function homeassistant.util.dt.utc_to_timestamp is deprecated","permalink":"/blog/2024/11/28/dt-util-utc-to-timestamp-deprecation"}},"content":"As of Home Assistant Core 2024.12, we have implemented an independent property and method for controlling horizontal swing in `ClimateEntity`.\n\nIntegrations that support completely independent control and state for vertical and horizontal swing can now use the previous `swing_mode` for vertical swing only and use the new `swing_horizontal_mode` for providing the horizontal swing state and control.\n\nIntegrations that don't have independent control should still keep using the current `swing_mode` for both vertical and horizontal support.\n\n\n### Example\n\nExample requirements to implement `swing` and `swing_horizontal` in your climate entity.\n\n```python\n\nclass MyClimateEntity(ClimateEntity):\n    \"\"\"Implementation of my climate entity.\"\"\"\n\n    @property\n    def supported_features(self) -> ClimateEntityFeature:\n        \"\"\"Return the list of supported features.\"\"\"\n        return ClimateEntityFeature.SWING_MODE | ClimateEntityFeature.SWING_HORIZONTAL_MODE\n\n    @property\n    def swing_mode(self) -> str | None:\n        \"\"\"Return the swing setting.\n\n        Requires ClimateEntityFeature.SWING_MODE.\n        \"\"\"\n        return self._attr_swing_mode\n\n    @property\n    def swing_modes(self) -> list[str] | None:\n        \"\"\"Return the list of available swing modes.\n\n        Requires ClimateEntityFeature.SWING_MODE.\n        \"\"\"\n        return self._attr_swing_modes\n\n    @property\n    def swing_horizontal_mode(self) -> str | None:\n        \"\"\"Return the swing setting.\n\n        Requires ClimateEntityFeature.SWING_HORIZONTAL_MODE.\n        \"\"\"\n        return self._attr_swing_horizontal_mode\n\n    @property\n    def swing_horizontal_modes(self) -> list[str] | None:\n        \"\"\"Return the list of available swing modes.\n\n        Requires ClimateEntityFeature.SWING_HORIZONTAL_MODE.\n        \"\"\"\n        return self._attr_swing_horizontal_modes\n\n    async def async_set_swing_mode(self, swing_mode: str) -> None:\n        \"\"\"Set new target swing operation.\"\"\"\n        await self.api.set_swing_mode(swing_mode)\n\n    async def async_set_swing_horizontal_mode(self, swing_horizontal_mode: str) -> None:\n        \"\"\"Set new target horizontal swing operation.\"\"\"\n        await self.api.set_swing_horizontal_mode(swing_horizontal_mode)\n\n```\n\nMore details can be found in the [climate documentation](/docs/core/entity/climate#swing-modes)."},{"id":"/2024/11/28/dt-util-utc-to-timestamp-deprecation","metadata":{"permalink":"/blog/2024/11/28/dt-util-utc-to-timestamp-deprecation","source":"@site/blog/2024-11-28-dt-util-utc-to-timestamp-deprecation.md","title":"Utility function homeassistant.util.dt.utc_to_timestamp is deprecated","description":"The utility function homeassistant.util.dt.utctotimestamp is deprecated and will be removed in Home Assistant Core 2026.1, custom integrations which call it should instead call the stdlib method datetime.datetime.timestamp()","date":"2024-11-28T00:00:00.000Z","tags":[],"readingTime":0.265,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Utility function homeassistant.util.dt.utc_to_timestamp is deprecated"},"unlisted":false,"prevItem":{"title":"Climate entity now supports independent horizontal swing","permalink":"/blog/2024/12/03/climate-horizontal-swing"},"nextItem":{"title":"Camera API changes","permalink":"/blog/2024/11/26/camera-deprecations"}},"content":"The utility function `homeassistant.util.dt.utc_to_timestamp` is deprecated and will be removed in Home Assistant Core 2026.1, custom integrations which call it should instead call the stdlib method `datetime.datetime.timestamp()`\n\nThe reason for deprecation is that the stdlib method is just as fast as the utility function.\n\nMore details can be found in the [core PR](https://github.com/home-assistant/core/pull/131787)."},{"id":"/2024/11/26/camera-deprecations","metadata":{"permalink":"/blog/2024/11/26/camera-deprecations","source":"@site/blog/2024-11-26-camera-deprecations.md","title":"Camera API changes","description":"With Home Assistant 2024.11 we added WebRTC for most cameras. To add support for it we needed to refactor and improve the camera entity.","date":"2024-11-26T00:00:00.000Z","tags":[],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Robert Resch","url":"https://github.com/edenhaus","imageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Robert Resch","authorURL":"https://github.com/edenhaus","authorImageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","title":"Camera API changes"},"unlisted":false,"prevItem":{"title":"Utility function homeassistant.util.dt.utc_to_timestamp is deprecated","permalink":"/blog/2024/11/28/dt-util-utc-to-timestamp-deprecation"},"nextItem":{"title":"Translating units of measurement","permalink":"/blog/2024/11/21/unit-of-measurement-translations"}},"content":"With Home Assistant `2024.11` we added WebRTC for most cameras. To add support for it we needed to refactor and improve the camera entity.\nToday we would like to announce that with the upcoming Home Assistant release `2024.12` the following methods are deprecated and will be removed with Home Assistant version `2025.6`:\n\n- The property `frontend_stream_type` will be removed. As of `2024.11` Home assistant will identify the frontend stream type by checking if the camera entity implements the native WebRTC methods ([#130932](https://github.com/home-assistant/core/pull/130932)). Card developers can use the new websocket command `camera/capabilities` to get the frontend stream types.\n\n- The method `async_handle_web_rtc_offer` will be removed. Please use `async_handle_async_webrtc_offer` and the async WebRTC signaling approach ([#131285](https://github.com/home-assistant/core/pull/131285)).\n\n- The method `async_register_rtsp_to_web_rtc_provider` has been deprecated. Please use `async_register_webrtc_provider`, which offers more flexibility and supports the async WebRTC signaling approach ([#131462](https://github.com/home-assistant/core/pull/131462)).\n\nMore information about the replacements can be found in the [camera entity documentation](/docs/core/entity/camera)."},{"id":"/2024/11/21/unit-of-measurement-translations","metadata":{"permalink":"/blog/2024/11/21/unit-of-measurement-translations","source":"@site/blog/2024-11-21-unit-of-measurement-translations.md","title":"Translating units of measurement","description":"Home Assistant 2024.12 will support the translation of custom units of measurement. Previously, those would have been hardcoded in their integrations.","date":"2024-11-21T00:00:00.000Z","tags":[],"readingTime":0.365,"hasTruncateMarker":false,"authors":[{"name":"Abílio Costa","url":"https://github.com/abmantis","key":null,"page":null}],"frontMatter":{"author":"Abílio Costa","authorURL":"https://github.com/abmantis","title":"Translating units of measurement"},"unlisted":false,"prevItem":{"title":"Camera API changes","permalink":"/blog/2024/11/26/camera-deprecations"},"nextItem":{"title":"Integration quality scale","permalink":"/blog/2024/11/20/integration-quality-scale"}},"content":"Home Assistant 2024.12 will support the translation of custom units of measurement. Previously, those would have been hardcoded in their integrations.\n\nJust like for entity names, integrations just need to set the `translation_key` on the entity definition and provide the unit designation in the `strings.json` file (with the new `unit_of_measurement` key):\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"subscribers_count\": {\n        \"unit_of_measurement\": \"subscribers\"\n      },\n    }\n  }\n}\n```\n\nCheck our [backend localization documentation](/docs/internationalization/core#unit-of-measurement-of-entities) for details."},{"id":"/2024/11/20/integration-quality-scale","metadata":{"permalink":"/blog/2024/11/20/integration-quality-scale","source":"@site/blog/2024-11-20-integration-quality-scale.md","title":"Integration quality scale","description":"Since the original quality scale was introduced in 2020, Home Assistant changed quite a lot.","date":"2024-11-20T00:00:00.000Z","tags":[],"readingTime":2.425,"hasTruncateMarker":false,"authors":[{"name":"Joost Lekkerkerker","url":"https://github.com/joostlek","imageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","key":null,"page":null}],"frontMatter":{"author":"Joost Lekkerkerker","authorURL":"https://github.com/joostlek","authorImageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","title":"Integration quality scale"},"unlisted":false,"prevItem":{"title":"Translating units of measurement","permalink":"/blog/2024/11/21/unit-of-measurement-translations"},"nextItem":{"title":"New options flow properties","permalink":"/blog/2024/11/12/options-flow"}},"content":"Since the original quality scale was introduced in 2020, Home Assistant changed quite a lot.\nBoth in how integrations are developed and what features they can provide.\nThe quality scale, however, has not been updated to reflect these changes.\n\nFor the last couple of months, we have been working with the community on a new integration quality scale that fits the current state of Home Assistant.\nTo give an overview of the changes:\n\n- The quality scale now has four scaled tiers: Bronze, Silver, Gold, and Platinum. The newly added Bronze tier is the new minimum requirement for new core integrations going forward. This does lower the bar for new integrations for a bit, but it does make it clear upfront what is expected from a core integration in this day and age.\n- A new non-scaled tier, legacy, has been added for integrations that are not configurable via the UI yet. This tier would indicate to the user that the integration might not meet their expectation compared to integrations configurable via the UI.\n- To allow the scale to grow with Home Assistant and to avoid another major rework in the future, we have designed a rulebook for the scale so it's known what needs to happen when a rule is added.\n- To show that the project has a commitment on keeping the scale up to date, we have created an architecture decision record (ADR) that describes the goal and the process of keeping the scale up to date.\n- The developer documentation now has [a brand new section](/docs/core/integration-quality-scale/) dedicated to the Integration Quality Scale. It includes the rules and the reasoning for every rule, and it provides examples that can be used to give an idea of how to implement it. There is also [a checklist](/docs/core/integration-quality-scale/checklist) that can be used for changing the scale of an integration.\n- Documentation now also plays a role in the quality of the integrations, since the user experience of an integration goes beyond code.\n- To track the progress of integration, we have added [a `quality_scale.yaml` file](https://github.com/home-assistant/core/blob/dev/homeassistant/components/airgradient/quality_scale.yaml) to the integration folder. This will contain a list of all the rules the integration is adhering to and notes of possible exemptions and the reasons behind them.\n\nWith this in place, you might wonder what the next steps are.\nBecause this is a major rework of the scale, we have decided to drop the scale of the current integrations.\nThis means that those integrations have to create a PR to get their scale back to the level they think it should be.\n\nI would also like to motivate the community to help out with getting as many integrations to Bronze (or above) as possible.\nI also want to thank the community for their input in the quality scale and their effort in maintaining the integrations.\nHome Assistant would not be where it is today without the community ❤️."},{"id":"/2024/11/12/options-flow","metadata":{"permalink":"/blog/2024/11/12/options-flow","source":"@site/blog/2024-11-12-options-flow.md","title":"New options flow properties","description":"Summary of changes","date":"2024-11-12T00:00:00.000Z","tags":[],"readingTime":1.605,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"New options flow properties"},"unlisted":false,"prevItem":{"title":"Integration quality scale","permalink":"/blog/2024/11/20/integration-quality-scale"},"nextItem":{"title":"Reauth and reconfigure flows need to be linked to a config entry","permalink":"/blog/2024/11/04/reauth-reconfigure-entry-id"}},"content":"### Summary of changes\nNew helper properties have been added to the `OptionsFlow`:\n- `self._config_entry_id` provides the config entry ID\n- `self.config_entry` returns the config entry\n\n### Backwards compatibility\nUntil Home Assistant Core 2025.12, it is possible to set `self.config_entry` manually, but doing so will log a warning asking users to open an issue on the custom integration's bug tracker.\n\nNew code:\n```python\n@staticmethod\n@callback\ndef async_get_options_flow(\n    config_entry: ConfigEntry,\n) -> OptionsFlowHandler:\n    \"\"\"Create the options flow.\"\"\"\n    return OptionsFlowHandler()\n\nclass OptionsFlowHandler(OptionsFlow):\n    \"\"\"Options flow handler.\"\"\"\n\n    def __init__(self) -> None:\n        \"\"\"Initialize options flow.\"\"\"\n        self._conf_app_id: str | None = None\n```\n\nOld code with `OptionsFlow` properties:\n```python\n@staticmethod\n@callback\ndef async_get_options_flow(\n    config_entry: ConfigEntry,\n) -> OptionsFlowHandler:\n    \"\"\"Create the options flow.\"\"\"\n    return OptionsFlowHandler(config_entry)\n\nclass OptionsFlowHandler(OptionsFlow):\n    \"\"\"Options flow handler.\"\"\"\n\n    def __init__(self, config_entry: ConfigEntry) -> None:\n        \"\"\"Initialize options flow.\"\"\"\n        self.config_entry = config_entry\n        self._conf_app_id: str | None = None\n```\n\n### Special handling of OptionsFlowWithConfigEntry\nThe main purpose of the `OptionsFlowWithConfigEntry` class was to provide the `self.config_entry` property, which is now already provided by the parent class.\nThere are currently no plans to remove the `OptionsFlowWithConfigEntry` class, but it is kept for backward compatibility only and it should be avoided in new code.\n\nCustom integrations that wish to drop references to `OptionsFlowWithConfigEntry` will need to consider how they are referencing `self.options`:\n- if `self.options` is not referenced, then the migration to `OptionsFlow` is straightforward (see [PR #129651](https://github.com/home-assistant/core/pull/129651))\n- if you are only reading the options values, then it is recommended that you adjust the reads to `self.config_entry.options` (see [PR #129895](https://github.com/home-assistant/core/pull/129895))\n- if you are updating/mutating the options values inside a single step, then it may be necessary to first copy the options (`options = deepcopy(dict(self.config_entry.options))` (see [PR #129928](https://github.com/home-assistant/core/pull/129928))\n- if you are updating/mutating the options values through multiple step, then it may be necessary to copy the options inside the class initialisation (`self.options = deepcopy(dict(config_entry.options))` (see [PR #129890]( https://github.com/home-assistant/core/pull/129890))\n\nMore details can be found in the [options flow](/docs/config_entries_options_flow_handler) documentation."},{"id":"/2024/11/04/reauth-reconfigure-entry-id","metadata":{"permalink":"/blog/2024/11/04/reauth-reconfigure-entry-id","source":"@site/blog/2024-11-04-reauth-reconfigure-entry-id.md","title":"Reauth and reconfigure flows need to be linked to a config entry","description":"Starting a reauth or a reconfigure flow without a link to the config entry has been deprecated, and will start failing in 2025.12.","date":"2024-11-04T00:00:00.000Z","tags":[],"readingTime":0.855,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Reauth and reconfigure flows need to be linked to a config entry"},"unlisted":false,"prevItem":{"title":"New options flow properties","permalink":"/blog/2024/11/12/options-flow"},"nextItem":{"title":"The core config class has been moved","permalink":"/blog/2024/10/31/core-config-moved"}},"content":"Starting a reauth or a reconfigure flow without a link to the config entry has been deprecated, and will start failing in 2025.12.\n\nCustom integrations should be updated to trigger the reauth flow using the `entry.async_start_reauth(hass)` helper.\n```python\n    async def async_press(self) -> None:\n        \"\"\"Handle the button press.\"\"\"\n        try:\n            await self.device.press_button()\n        except DevicePasswordProtected as ex:\n            self.entry.async_start_reauth(self.hass)\n```\n\nOld incorrect code:\n```python\n    async def async_press(self) -> None:\n        \"\"\"Handle the button press.\"\"\"\n        try:\n            await self.device.press_button()\n        except DevicePasswordProtected as ex:\n            # old incorrect code:\n            self.hass.async_create_task(\n                hass.config_entries.flow.async_init(DOMAIN, context={\"source\": SOURCE_REAUTH}\n            )\n    )\n```\n\nCustom integrations can also raise a `ConfigEntryAuthFailed` exception during the initialization phase, or within the update method of a data update coordinator.\n\n```python\nasync def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:\n    \"\"\"Set up integration from a config entry.\"\"\"\n    username = entry.data[CONF_USERNAME]\n    password = entry.data[CONF_PASSWORD]\n\n    if not _credentials_valid(username, password):\n        raise ConfigEntryAuthFailed()\n```\n\nStarting a reconfigure flow is only done by the frontend and custom integrations should not need to change anything for these flows.\n\nMore details can be found in the [reconfigure](/docs/config_entries_config_flow_handler#reconfigure) and [reauthentication](/docs/config_entries_config_flow_handler#reauthentication) documentation."},{"id":"/2024/10/31/core-config-moved","metadata":{"permalink":"/blog/2024/10/31/core-config-moved","source":"@site/blog/2024-10-31-core-config-moved.md","title":"The core config class has been moved","description":"Summary of changes","date":"2024-10-31T00:00:00.000Z","tags":[],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"The core config class has been moved"},"unlisted":false,"prevItem":{"title":"Reauth and reconfigure flows need to be linked to a config entry","permalink":"/blog/2024/11/04/reauth-reconfigure-entry-id"},"nextItem":{"title":"Changes to the update entity","permalink":"/blog/2024/10/31/update-entity-changes"}},"content":"### Summary of changes\n\nThe definition of the core config class, an instance of which is available as [`hass.config`](https://developers.home-assistant.io/docs/dev_101_hass/#the-hass-object) has been moved from `homeassistant/core.py` to `homeassistant/core_config.py`. The move was done to make it easier to read and understand the core code. Custom integrations which currently import `Config` from `homeassistant.core` need to be updated to instead import from `homeassistant.core_config`.\n\n:::info\nNormally, integrations won't need to use the core `Config` class. But there's been custom integrations that have incorrect type annotations where the `config` object passed to the integration's `async_setup` is specified as a `Config` instance:\n```py\nfrom homeassistant.core import Config\n\nasync def async_setup(hass: HomeAssistant, config: Config) -> bool:\n    \"\"\"Set up the integration.\"\"\"\n```\n\nA correct type annotation would be like this:\n```py\nfrom homeassistant.helpers.typing import ConfigType\n\nasync def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:\n    \"\"\"Set up the integration.\"\"\"\n```\n:::\n\n\n### Backwards compatibility\n\nUntil Home Assistant Core 2025.11, it's possible to import from `homeassistant.core`, and doing so will log a warning asking users to open an issue on the custom integration's bug tracker."},{"id":"/2024/10/31/update-entity-changes","metadata":{"permalink":"/blog/2024/10/31/update-entity-changes","source":"@site/blog/2024-10-31-update-entity-changes.md","title":"Changes to the update entity","description":"Summary of changes","date":"2024-10-31T00:00:00.000Z","tags":[],"readingTime":0.82,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Changes to the update entity"},"unlisted":false,"prevItem":{"title":"The core config class has been moved","permalink":"/blog/2024/10/31/core-config-moved"},"nextItem":{"title":"New alarm control panel state property and state enum","permalink":"/blog/2024/10/22/new-alarm-state-property"}},"content":"### Summary of changes\n\nThe `update` entity has been adjusted:\n- The `in_progress` property and the corresponding state attribute should now only be a `bool` indicating if an update is in progress, or `None` if unknown.\n- A new property and a corresponding state attribute `update_percentage` has been added which can either return an `int` or `float` indicating the progress from 0 to 100% or None.\n- A new property and a corresponding state attribute `display_precision` has been added to control the number of decimals to display in the frontend when `update_percentage` is a `float`.\n\n### Backwards compatibility\n\nUntil Home Assistant Core 2025.12, a numerical value in the `in_progress` property will be automatically copied to the `update_percentage` state attribute.\n\n### Documentation and core implementation\n\nSee the [update entity developer documentation](https://developers.home-assistant.io/docs/core/entity/update) for details.\n\nPRs:\n- PR adding the [`update_percentage` state attribute](https://github.com/home-assistant/core/pull/128877)\n- PR adding the [`update_percentage` property](https://github.com/home-assistant/core/pull/128908)\n- PR adding the [`display_precision` state attribute and property](https://github.com/home-assistant/core/pull/128930)\n- An example of [updating an integration's update entity](https://github.com/home-assistant/core/pull/129380)"},{"id":"/2024/10/22/new-alarm-state-property","metadata":{"permalink":"/blog/2024/10/22/new-alarm-state-property","source":"@site/blog/2024-10-22-new-alarm-state-property.md","title":"New alarm control panel state property and state enum","description":"As of Home Assistant Core 2024.11, we have introduced the alarm_state property in the AlarmControlPanelEntity. This newly added property should be used instead of directly setting the state property.","date":"2024-10-22T00:00:00.000Z","tags":[],"readingTime":0.6,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"New alarm control panel state property and state enum"},"unlisted":false,"prevItem":{"title":"Changes to the update entity","permalink":"/blog/2024/10/31/update-entity-changes"},"nextItem":{"title":"New helpers and best practises for reauth and reconfigure flows","permalink":"/blog/2024/10/21/reauth-reconfigure-helpers"}},"content":"As of Home Assistant Core 2024.11, we have introduced the `alarm_state` property in the `AlarmControlPanelEntity`. This newly added property should be used instead of directly setting the `state` property.\n\nThe new `alarm_state` property should return its state using the new `AlarmControlPanelState` enum instead of as previously, setting the state using the `STATE_ALARM_*` constants.\n\nThere is a one-year deprecation period, and the constants will stop working from 2025.11 to ensure all custom integration authors have time to adjust.\n\n### Example\n\n```python\n\nfrom homeassistant.components.alarm_control_panel import AlarmControlPanelEntity, AlarmControlPanelState\n\nclass MyAlarm(AlarmControlPanelEntity):\n    \"\"\"My alarm.\"\"\"\n\n    @property\n    def alarm_state(self) -> AlarmControlPanelState | None:\n        \"\"\"Return the state of the alarm.\"\"\"\n        if self.device.is_on():\n            return AlarmControlPanelState.ARMED_AWAY\n        return AlarmControlPanelState.DISARMED\n\n```\n\nMore details can be found in the [alarm control panel documentation](/docs/core/entity/alarm-control-panel#states)."},{"id":"/2024/10/21/reauth-reconfigure-helpers","metadata":{"permalink":"/blog/2024/10/21/reauth-reconfigure-helpers","source":"@site/blog/2024-10-21-reauth-reconfigure-helpers.md","title":"New helpers and best practises for reauth and reconfigure flows","description":"New helper methods have been added to the ConfigFlow to facilitate management of reauth and reconfigure flows:","date":"2024-10-21T00:00:00.000Z","tags":[],"readingTime":1.055,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"New helpers and best practises for reauth and reconfigure flows"},"unlisted":false,"prevItem":{"title":"New alarm control panel state property and state enum","permalink":"/blog/2024/10/22/new-alarm-state-property"},"nextItem":{"title":"Extend deprecation period of hass.helpers","permalink":"/blog/2024/10/09/extend-deprecation-hass-helpers"}},"content":"New helper methods have been added to the ConfigFlow to facilitate management of reauth and reconfigure flows:\n- `self._get_reauth_entry()` and `self._get_reconfigure_entry()` give access at any time to the corresponding config entry\n  - these should be used over `self.hass.config_entries.async_get_entry(self.context[\"entry_id\"])`\n  - the config entry should be requested when needed (local variable, once per step) and not cached as class attributes\n  - if the steps are shared with discovery or user flows, `self.source` should be checked against `SOURCE_REAUTH` and `SOURCE_RECONFIGURE` before accessing the entry\n- `self._abort_if_unique_id_mismatch` allows you to abort if the `unique_id` does not match the `unique_id` of the config entry to reauthenticate or reconfigure\n  - this should be used after a call to `self.async_set_unique_id`\n  - if the steps are shared with discovery or user flows, `self.source` should be checked against `SOURCE_REAUTH` and `SOURCE_RECONFIGURE`\n  - other sources should continue to use `self._abort_if_unique_id_configured`\n- `self.async_update_reload_and_abort` has been adjusted to update the default message for reconfigure flows\n  - the new message `reconfigure_successful` must be present in `strings.json`\n- `self.async_update_reload_and_abort` has a new argument `data_updates` to merge the data updates with the pre-existing data\n  - this is preferred over the `data` argument, as it reduces the risk of data loss if the schema is updated\n\nMore details can be found in the [reconfigure](/docs/config_entries_config_flow_handler#reconfigure) and [reauthentication](/docs/config_entries_config_flow_handler#reauthentication) documentation."},{"id":"/2024/10/09/extend-deprecation-hass-helpers","metadata":{"permalink":"/blog/2024/10/09/extend-deprecation-hass-helpers","source":"@site/blog/2024-10-09-extend-deprecation-hass-helpers.md","title":"Extend deprecation period of hass.helpers","description":"On March 30, 2024, we announced the deprecation of the hass.helpers attribute for the Home Assistant 2024.11 release.","date":"2024-10-09T00:00:00.000Z","tags":[],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"Extend deprecation period of hass.helpers"},"unlisted":false,"prevItem":{"title":"New helpers and best practises for reauth and reconfigure flows","permalink":"/blog/2024/10/21/reauth-reconfigure-helpers"},"nextItem":{"title":"Deprecating state constants for cover","permalink":"/blog/2024/10/08/state-constants-cover-deprecation"}},"content":"On March 30, 2024, we [announced the deprecation](/blog/2024/03/30/deprecate-hass-helpers/) of the `hass.helpers` attribute for the Home Assistant 2024.11 release.\nDue to the large number of custom integrations that still use them and the recent HACS v2 update, we have decided to extend the deprecation period for another six months.\n\nThis means that starting with Home Assistant 2025.5, `hass.helpers` will be removed.\n\nWe encourage all developers of custom integrations to update their code to avoid any issues prior to the Home Assistant 2025.5 release."},{"id":"/2024/10/08/state-constants-cover-deprecation","metadata":{"permalink":"/blog/2024/10/08/state-constants-cover-deprecation","source":"@site/blog/2024-10-08-state-constants-cover-deprecation.md","title":"Deprecating state constants for cover","description":"As of Home Assistant Core 2024.11, the constants used to return state in CoverEntity are deprecated and replaced by the CoverState enum.","date":"2024-10-08T00:00:00.000Z","tags":[],"readingTime":0.415,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Deprecating state constants for cover"},"unlisted":false,"prevItem":{"title":"Extend deprecation period of hass.helpers","permalink":"/blog/2024/10/09/extend-deprecation-hass-helpers"},"nextItem":{"title":"Changes to the UnitOfConductivity enum","permalink":"/blog/2024/10/08/unit-of-conductivity-changes"}},"content":"As of Home Assistant Core 2024.11, the constants used to return state in `CoverEntity` are deprecated and replaced by the `CoverState` enum.\n\nThere is a one-year deprecation period, and the constants will stop working from 2025.11 to ensure all custom integration authors have time to adjust.\n\nAs the `state` property is not meant to be overwritten, in most cases this change will only affect other Entity properties or tests rather than the `state` property.\n\nMore details can be found in the [cover documentation](/docs/core/entity/cover#states)."},{"id":"/2024/10/08/unit-of-conductivity-changes","metadata":{"permalink":"/blog/2024/10/08/unit-of-conductivity-changes","source":"@site/blog/2024-10-08-unit-of-conductivity-changes.md","title":"Changes to the UnitOfConductivity enum","description":"The UnitOfConductivity enum has been changed from:","date":"2024-10-08T00:00:00.000Z","tags":[],"readingTime":0.36,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Changes to the UnitOfConductivity enum"},"unlisted":false,"prevItem":{"title":"Deprecating state constants for cover","permalink":"/blog/2024/10/08/state-constants-cover-deprecation"},"nextItem":{"title":"Introducing the Assist satellite entity","permalink":"/blog/2024/10/01/assist-satellite-entity"}},"content":"The `UnitOfConductivity` enum has been changed from:\n\n```py\n  class UnitOfConductivity(StrEnum):\n    \"\"\"Conductivity units.\"\"\"\n\n    SIEMENS = \"S/cm\"\n    MICROSIEMENS = \"µS/cm\"\n    MILLISIEMENS = \"mS/cm\"\n```\n\nTo:\n\n```py\n  class UnitOfConductivity(StrEnum):\n    \"\"\"Conductivity units.\"\"\"\n\n    SIEMENS_PER_CM = \"S/cm\"\n    MICROSIEMENS_PER_CM = \"µS/cm\"\n    MILLISIEMENS_PER_CM = \"mS/cm\"\n```\n\nThe old enum members can be used during a deprecation period of one year, to give time for custom integrations to migrate to the new enum members.\n\nSee [core PR #127919](https://github.com/home-assistant/core/pull/127919) for implementation details."},{"id":"/2024/10/01/assist-satellite-entity","metadata":{"permalink":"/blog/2024/10/01/assist-satellite-entity","source":"@site/blog/2024-10-01-assist-satellite-entity.md","title":"Introducing the Assist satellite entity","description":"Users typically interact with Assist using remote voice satellites, such as the ESP32-S3-BOX-3 running ESPHome, analog phones running VoIP, and more. The integrations managing these satellites have used ad-hoc binary_sensor and select entities to allow users to configure the satellite's pipeline, automate based on the pipeline state, etc.","date":"2024-10-01T00:00:00.000Z","tags":[],"readingTime":0.61,"hasTruncateMarker":false,"authors":[{"name":"Michael Hansen","url":"https://github.com/synesthesiam","imageURL":"/img/profile/mike_hansen.png","key":null,"page":null}],"frontMatter":{"author":"Michael Hansen","authorURL":"https://github.com/synesthesiam","authorImageURL":"/img/profile/mike_hansen.png","authorTwitter":"rhasspy","title":"Introducing the Assist satellite entity"},"unlisted":false,"prevItem":{"title":"Changes to the UnitOfConductivity enum","permalink":"/blog/2024/10/08/unit-of-conductivity-changes"},"nextItem":{"title":"Version compare for Update platform can now be overwritten","permalink":"/blog/2024/09/28/update-version-compare"}},"content":"Users typically interact with [Assist](https://www.home-assistant.io/voice_control/) using remote voice satellites, such as the [ESP32-S3-BOX-3](https://www.home-assistant.io/voice_control/s3_box_voice_assistant/) running ESPHome, [analog phones](https://www.home-assistant.io/voice_control/worlds-most-private-voice-assistant/) running VoIP, and more. The integrations managing these satellites have used ad-hoc `binary_sensor` and `select` entities to allow users to configure the satellite's [pipeline](/docs/voice/pipelines/), automate based on the pipeline state, etc.\n\nThe new [`AssistSatelliteEntity`](/docs/core/entity/assist-satellite) provides an entity which represents a voice satellite. Its state follows the underlying Assist pipeline, allowing for easy automation. Additionally:\n\n* A new [announce action](https://home-assistant.io/integrations/assist_satellite#action-assist_satelliteannounce) is available for making announcements on supported devices.\n* Several [websocket commands](/docs/core/entity/assist-satellite#websocket-api) are also available, providing a uniform way to get and set the active on-device wake words.\n\nThe `esphome` and `voip` integrations have been transitioned to use `AssistSatelliteEntity`, and the `wyoming` integration will be next."},{"id":"/2024/09/28/update-version-compare","metadata":{"permalink":"/blog/2024/09/28/update-version-compare","source":"@site/blog/2024-09-28-update-version-compare.md","title":"Version compare for Update platform can now be overwritten","description":"With the merge of core PR #124797, which will land in Home Assistant Core 2024.10, there is a new method in the update platform: versionisnewer().","date":"2024-09-28T00:00:00.000Z","tags":[],"readingTime":0.595,"hasTruncateMarker":false,"authors":[{"name":"Simone Chemelli","url":"https://github.com/chemelli74","key":null,"page":null}],"frontMatter":{"author":"Simone Chemelli","authorURL":"https://github.com/chemelli74","title":"Version compare for Update platform can now be overwritten"},"unlisted":false,"prevItem":{"title":"Introducing the Assist satellite entity","permalink":"/blog/2024/10/01/assist-satellite-entity"},"nextItem":{"title":"Additional validation in Climate set temperature","permalink":"/blog/2024/09/24/climate-set-temp-validation"}},"content":"With the merge of [core PR #124797](https://github.com/home-assistant/core/pull/124797), which will land in Home Assistant Core 2024.10, there is a new method in the update platform: `version_is_newer()`.\n\nBefore this change, the compare logic between firmware installed version, new available version and beta version was hardcoded:\n\n```python\ndef version_is_newer(self, latest_version: str, installed_version: str) -> bool:\n    \"\"\"Return True if latest_version is newer than installed_version.\"\"\"\n    return AwesomeVersion(latest_version) > installed_version\n```\n\nNow the new method allows developers to customize this comparison, writing their own method.\nHere's an example (implemented for Shelly gen1 devices):\n\n```python\ndef version_is_newer(self, latest_version: str, installed_version: str) -> bool:\n    \"\"\"Return True if available version is newer then installed version.\"\"\"\n    return AwesomeVersion(\n        latest_version,\n        find_first_match=True,\n        ensure_strategy=[AwesomeVersionStrategy.SEMVER],\n    ) > AwesomeVersion(\n        installed_version,\n        find_first_match=True,\n        ensure_strategy=[AwesomeVersionStrategy.SEMVER],\n    )\n```"},{"id":"/2024/09/24/climate-set-temp-validation","metadata":{"permalink":"/blog/2024/09/24/climate-set-temp-validation","source":"@site/blog/2024-09-24-climate-set-temp-validation.md","title":"Additional validation in Climate set temperature","description":"As of Home Assistant Core 2024.10, we have added further validation of the parameters passed to the set_temperature method. This means that integrations don't need to implement this validation in their own methods.","date":"2024-09-24T00:00:00.000Z","tags":[],"readingTime":0.625,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Additional validation in Climate set temperature"},"unlisted":false,"prevItem":{"title":"Version compare for Update platform can now be overwritten","permalink":"/blog/2024/09/28/update-version-compare"},"nextItem":{"title":"Enforce SourceType and add shorthand attributes and EntityDescription to device_tracker","permalink":"/blog/2024/09/24/device-tracker-entity-description"}},"content":"As of Home Assistant Core 2024.10, we have added further validation of the parameters passed to the `set_temperature` method. This means that integrations don't need to implement this validation in their own methods.\n\nBefore 2024.10 it was possible to set the `temperature` parameter in the action when the entity did not set `ClimateEntityFeature.TARGET_TEMPERATURE` or `target_temp_low`/`target_temp_high` parameters when the entity did not set `ClimateEntityFeature.TARGET_TEMPERATURE_RANGE`. This will no longer be possible and a `ServiceValidationError` will be raised informing the user that they used an incorrect parameter in the action call.\n\nAlso, when setting a temperature range, it was possible to set `target_temp_low` to a higher value than `target_temp_high`.\nThis will raise a `ServiceValidationError` informing the user the high value needs to be higher than the low value."},{"id":"/2024/09/24/device-tracker-entity-description","metadata":{"permalink":"/blog/2024/09/24/device-tracker-entity-description","source":"@site/blog/2024-09-24-device-tracker-entity-description.md","title":"Enforce SourceType and add shorthand attributes and EntityDescription to device_tracker","description":"The sourcetype property of devicetracker entities is now always expected to be a SourceType enum value. Standard strings are no longer valid.","date":"2024-09-24T00:00:00.000Z","tags":[],"readingTime":0.56,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Enforce SourceType and add shorthand attributes and EntityDescription to device_tracker"},"unlisted":false,"prevItem":{"title":"Additional validation in Climate set temperature","permalink":"/blog/2024/09/24/climate-set-temp-validation"},"nextItem":{"title":"Deprecating constants for Media Player","permalink":"/blog/2024/09/23/constants-media-player-deprecation"}},"content":"The `source_type` property of device_tracker entities is now always expected to be a `SourceType` enum value. Standard strings are no longer valid.\n\n`TrackerEntity` and `ScannerEntity` now have a dedicated `ScannerEntityDescription` and `TrackerEntityDescription`, which need to be used as base class when associating an `EntityDescription` to the `Entity`.\n\nThe `source_type` for these entities now also defaults to `SourceType.GPS` and `SourceType.ROUTER`, and it may be possible to drop the overriding property.\n\nThe following shorthand attributes have also been added:\n- `BaseTrackerEntity._attr_source_type`\n- `TrackerEntity._attr_latitude`\n- `TrackerEntity._attr_location_accuracy`\n- `TrackerEntity._attr_location_name`\n- `TrackerEntity._attr_longitude`\n- `TrackerEntity._attr_source_type` (defaults to `SourceType.GPS`)\n- `ScannerEntity._attr_hostname`\n- `ScannerEntity._attr_ip_address`\n- `ScannerEntity._attr_mac_address`\n- `ScannerEntity._attr_source_type` (defaults to `SourceType.ROUTER`)\n\nMore details can be found in the [device-tracker documentation](/docs/core/entity/device-tracker)."},{"id":"/2024/09/23/constants-media-player-deprecation","metadata":{"permalink":"/blog/2024/09/23/constants-media-player-deprecation","source":"@site/blog/2024-09-23-constants-media-player-deprecation.md","title":"Deprecating constants for Media Player","description":"As of Home Assistant Core 2022.5, the feature flag constants used in MediaPlayerEntity were deprecated and replaced by the MediaPlayerEntityFeature enum. Later, in 2022.10, the repeat mode, media type, and media class constants were deprecated and replaced by RepeatMode, MediaType, and MediaClass, respectively.","date":"2024-09-23T00:00:00.000Z","tags":[],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Deprecating constants for Media Player"},"unlisted":false,"prevItem":{"title":"Enforce SourceType and add shorthand attributes and EntityDescription to device_tracker","permalink":"/blog/2024/09/24/device-tracker-entity-description"},"nextItem":{"title":"Deprecating feature flag constants for Vacuum","permalink":"/blog/2024/09/23/feature-flag-constants-vacuum-deprecation"}},"content":"As of Home Assistant Core 2022.5, the feature flag constants used in `MediaPlayerEntity` were deprecated and replaced by the `MediaPlayerEntityFeature` enum. Later, in 2022.10, the repeat mode, media type, and media class constants were deprecated and replaced by `RepeatMode`, `MediaType`, and `MediaClass`, respectively.\n\nHowever, no proper deprecation was done, so now in 2024.10 we start the one-year deprecation period, and the constants will stop working from 2025.10, to ensure all custom integration authors have time to adjust."},{"id":"/2024/09/23/feature-flag-constants-vacuum-deprecation","metadata":{"permalink":"/blog/2024/09/23/feature-flag-constants-vacuum-deprecation","source":"@site/blog/2024-09-23-feature-flag-constants-vacuum-deprecation.md","title":"Deprecating feature flag constants for Vacuum","description":"As of Home Assistant Core 2022.5, the feature flag constants used in StateVacuumEntity were deprecated and replaced by the VacuumEntityFeature enum.","date":"2024-09-23T00:00:00.000Z","tags":[],"readingTime":0.28,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Deprecating feature flag constants for Vacuum"},"unlisted":false,"prevItem":{"title":"Deprecating constants for Media Player","permalink":"/blog/2024/09/23/constants-media-player-deprecation"},"nextItem":{"title":"Deprecating state constants for camera","permalink":"/blog/2024/09/23/state-constants-camera-deprecation"}},"content":"As of Home Assistant Core 2022.5, the feature flag constants used in `StateVacuumEntity` were deprecated and replaced by the `VacuumEntityFeature` enum.\n\nHowever, there was no proper deprecation done and therefore now in 2024.10 we start the one-year deprecation period. The constants will stop working from 2025.10, to ensure all custom integration authors have time to adjust."},{"id":"/2024/09/23/state-constants-camera-deprecation","metadata":{"permalink":"/blog/2024/09/23/state-constants-camera-deprecation","source":"@site/blog/2024-09-23-state-constants-camera-deprecation.md","title":"Deprecating state constants for camera","description":"As of Home Assistant Core 2024.10, the constants used to return state in Camera are deprecated and replaced by the CameraState enum.","date":"2024-09-23T00:00:00.000Z","tags":[],"readingTime":0.345,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Deprecating state constants for camera"},"unlisted":false,"prevItem":{"title":"Deprecating feature flag constants for Vacuum","permalink":"/blog/2024/09/23/feature-flag-constants-vacuum-deprecation"},"nextItem":{"title":"Deprecating state constants for lock","permalink":"/blog/2024/09/23/state-constants-lock-deprecation"}},"content":"As of Home Assistant Core 2024.10, the constants used to return state in `Camera` are deprecated and replaced by the `CameraState` enum.\n\nThere is a one-year deprecation period, and the constants will stop working from 2025.10 to ensure all custom integration authors have time to adjust.\n\nAs the `state` property is not meant to be overwritten, in most cases this change will only affect other Entity properties or tests."},{"id":"/2024/09/23/state-constants-lock-deprecation","metadata":{"permalink":"/blog/2024/09/23/state-constants-lock-deprecation","source":"@site/blog/2024-09-23-state-constants-lock-deprecation.md","title":"Deprecating state constants for lock","description":"As of Home Assistant Core 2024.10, the constants used to return state in LockEntity are deprecated and replaced by the LockState enum.","date":"2024-09-23T00:00:00.000Z","tags":[],"readingTime":0.37,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Deprecating state constants for lock"},"unlisted":false,"prevItem":{"title":"Deprecating state constants for camera","permalink":"/blog/2024/09/23/state-constants-camera-deprecation"},"nextItem":{"title":"Extend deprecation period of @bind_hass and hass.components","permalink":"/blog/2024/09/11/extending-deprecation-hass-components"}},"content":"As of Home Assistant Core 2024.10, the constants used to return state in `LockEntity` are deprecated and replaced by the `LockState` enum.\n\nThere is a one-year deprecation period, and the constants will stop working from 2025.10 to ensure all custom integration authors have time to adjust.\n\nAs the `state` property is not meant to be overwritten, in most cases this change will only affect other Entity properties or tests rather than the `state` property."},{"id":"/2024/09/11/extending-deprecation-hass-components","metadata":{"permalink":"/blog/2024/09/11/extending-deprecation-hass-components","source":"@site/blog/2024-09-11-extending-deprecation-hass-components.md","title":"Extend deprecation period of @bind_hass and hass.components","description":"On February 27, 2024, we announced the deprecation of the @bind_hass decorator and the hass.components attribute for the Home Assistant 2024.9 release.","date":"2024-09-11T00:00:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"Extend deprecation period of @bind_hass and hass.components"},"unlisted":false,"prevItem":{"title":"Deprecating state constants for lock","permalink":"/blog/2024/09/23/state-constants-lock-deprecation"},"nextItem":{"title":"Calories added to energy class sensors","permalink":"/blog/2024/09/10/calories-units"}},"content":"On February 27, 2024, we [announced the deprecation](/blog/2024/02/27/deprecate-bind-hass-and-hass-components/) of the `@bind_hass` decorator and the `hass.components` attribute for the Home Assistant 2024.9 release.\nDue to the large number of custom integrations that still use them and the recent HACS v2 update, we have decided to extend the deprecation period for another six months.\n\nThis means that starting with Home Assistant 2025.3, the `@bind_hass` decorator and `hass.components` will be removed.\n\nWe encourage all developers of custom integrations to update their code to avoid any issues prior to the Home Assistant 2025.3 release."},{"id":"/2024/09/10/calories-units","metadata":{"permalink":"/blog/2024/09/10/calories-units","source":"@site/blog/2024-09-10-calories-units.md","title":"Calories added to energy class sensors","description":"Starting from Home Assistant 2024.10 calories have been added to the units of measurement in the energy sensor class. Typically, these sensors measure heat energy, water heating, food energy, or human energy expenditure.","date":"2024-09-10T00:00:00.000Z","tags":[],"readingTime":0.165,"hasTruncateMarker":false,"authors":[{"name":"Sergey Dudanov","url":"https://github.com/dudanov","key":null,"page":null}],"frontMatter":{"author":"Sergey Dudanov","authorURL":"https://github.com/dudanov","title":"Calories added to energy class sensors"},"unlisted":false,"prevItem":{"title":"Extend deprecation period of @bind_hass and hass.components","permalink":"/blog/2024/09/11/extending-deprecation-hass-components"},"nextItem":{"title":"Template.hass is no longer automatically set when rendering templates","permalink":"/blog/2024/09/02/template-hass-required"}},"content":"Starting from Home Assistant 2024.10 calories have been added to the units of measurement in the energy [sensor class](/docs/core/entity/sensor#available-device-classes). Typically, these sensors measure heat energy, water heating, food energy, or human energy expenditure."},{"id":"/2024/09/02/template-hass-required","metadata":{"permalink":"/blog/2024/09/02/template-hass-required","source":"@site/blog/2024-09-02-template-hass-required.md","title":"Template.hass is no longer automatically set when rendering templates","description":"With the merge of core PR #89242, which landed in Home Assistant Core 2023.4, Template.hass will be set on Template objects created during schema validation.","date":"2024-09-02T00:00:00.000Z","tags":[],"readingTime":0.7,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Template.hass is no longer automatically set when rendering templates"},"unlisted":false,"prevItem":{"title":"Calories added to energy class sensors","permalink":"/blog/2024/09/10/calories-units"},"nextItem":{"title":"Changes to the icon translations schema","permalink":"/blog/2024/08/27/changed-icon-translations-schema"}},"content":"With the merge of [core PR #89242](https://github.com/home-assistant/core/pull/89242), which landed in Home Assistant Core 2023.4, `Template.hass` will be set on `Template` objects created during schema validation.\n\nBefore this change, it was necessary to check and set `Template.hass` before rendering templates, and this happened in numerous places throughout the codebase.\nSuch code has been removed from Home Assistant Core, which impacts custom integration authors:\n- Custom integrations which create `Template` objects manually must pass a valid `hass` object to the constructor. This is in particular the case when creating templates for config entries. Not passing a `hass` object will trigger a deprecation warning and fail in Home Assistant Core 2025.10.\n- The helper function `template.attach` no longer serves a purpose and is no longer used by core. It has been marked as deprecated, and scheduled for removal in Home Assistant Core 2025.10."},{"id":"/2024/08/27/changed-icon-translations-schema","metadata":{"permalink":"/blog/2024/08/27/changed-icon-translations-schema","source":"@site/blog/2024-08-27-changed-icon-translations-schema.md","title":"Changes to the icon translations schema","description":"The icon translations schema has been adjusted to allow assigning icons for sections in services.","date":"2024-08-27T00:00:00.000Z","tags":[],"readingTime":0.61,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Changes to the icon translations schema"},"unlisted":false,"prevItem":{"title":"Template.hass is no longer automatically set when rendering templates","permalink":"/blog/2024/09/02/template-hass-required"},"nextItem":{"title":"Validation of entity action schemas","permalink":"/blog/2024/08/27/entity-service-schema-validation"}},"content":"The icon translations schema has been adjusted to allow assigning icons for [sections in services](/docs/dev_101_services/#grouping-of-service-action-fields).\nIcons for services should now be provided according to a more explicit schema, which allows specifying icons for sections.\n\nThis allows specifying service icons like this:\n```json\n  \"services\": {\n    \"test_service_1\": {\n      \"service\": \"mdi:flask\",\n      \"sections\": {\n        \"section_1\": \"mdi:test-tube\"\n      }\n    }\n  }\n```\n\nThe old format is supported during a deprecation period of one year, to give time for custom integrations to migrate to the new schema:\n```json\n  \"services\": {\n    \"test_service_1\": \"mdi:flask\"\n  }\n```\n\nSee [core PR #124656](https://github.com/home-assistant/core/pull/124656) for implementation details.\n\n### Impact on custom cards\n\nIcons data sent to the frontend will always be according to the new format, custom cards displaying service icons need to be adjusted."},{"id":"/2024/08/27/entity-service-schema-validation","metadata":{"permalink":"/blog/2024/08/27/entity-service-schema-validation","source":"@site/blog/2024-08-27-entity-service-schema-validation.md","title":"Validation of entity action schemas","description":"Registering entity service actions allows integration authors to pass in:","date":"2024-08-27T00:00:00.000Z","tags":[],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Validation of entity action schemas"},"unlisted":false,"prevItem":{"title":"Changes to the icon translations schema","permalink":"/blog/2024/08/27/changed-icon-translations-schema"},"nextItem":{"title":"New returning type in LawnMowerActivity","permalink":"/blog/2024/08/23/lawn-mower-activity-returning"}},"content":"Registering entity service actions allows integration authors to pass in:\n- No schema (`None`)\n- A dictionary, which will be converted to a voluptuous schema by passing it to `cv.make_entity_service_schema`\n- A custom voluptuous schema\n\nFor the third case, a warning will now be logged when registering an entity action with a custom schema which does not meet at least one of these criteria:\n- A validator returned by `cv.make_entity_service_schema`\n- A validator returned by `cv.make_entity_service_schema`, wrapped in a `vol.Schema`\n- A validator returned by `cv.make_entity_service_schema`, wrapped in a `vol.All`\n\nIn Home Assistant Core 2025.10, it will no longer be possible to register an entity action with a custom schema not meeting this requirement.\n\nThe reason for the change is that if `cv.make_entity_service_schema` is not used, the service will not automatically support all possible ways of targeting entities.\n\nMore details can be found in the [developer documentation](/docs/dev_101_services/#entity-service-actions) and in core PRs [#124102](https://github.com/home-assistant/core/pull/124102) and [#125057](https://github.com/home-assistant/core/pull/125057)."},{"id":"/2024/08/23/lawn-mower-activity-returning","metadata":{"permalink":"/blog/2024/08/23/lawn-mower-activity-returning","source":"@site/blog/2024-08-23-lawn-mower-activity-returning.md","title":"New returning type in LawnMowerActivity","description":"As of Home Assistant Core 2024.9, integrations implementing LawnMowerEntity can indicate that their mower is returning to the dock by using the new LawnMowerActivity.RETURNING state.","date":"2024-08-23T00:00:00.000Z","tags":[],"readingTime":0.415,"hasTruncateMarker":false,"authors":[{"name":"Michael Arthur","url":"https://github.com/mikey0000","key":null,"page":null}],"frontMatter":{"author":"Michael Arthur","authorURL":"https://github.com/mikey0000","title":"New returning type in LawnMowerActivity"},"unlisted":false,"prevItem":{"title":"Validation of entity action schemas","permalink":"/blog/2024/08/27/entity-service-schema-validation"},"nextItem":{"title":"Set up your DataUpdateCoordinator with a setup method","permalink":"/blog/2024/08/05/coordinator_async_setup"}},"content":"As of Home Assistant Core 2024.9, integrations implementing `LawnMowerEntity` can indicate that their mower is returning to the dock by using the new `LawnMowerActivity.RETURNING` state.\n\nMore details can be found in the [documentation](/docs/core/entity/lawn-mower#activities)\n\n## Example\n\n```python\n    async def async_dock(self) -> None:\n        \"\"\"Start docking.\"\"\"\n        self._attr_activity = LawnMowerActivity.RETURNING\n        self.async_write_ha_state()\n```\n\nor by returning `LawnMowerActivity.RETURNING` in the activity property of your `lawn_mower` entity.\n\n```python\n    @property\n    def activity(self) -> LawnMowerActivity:\n        \"\"\"Return the state of the mower.\"\"\"\n        mower = self.mower\n        if mower.state is RETURNING:\n            return LawnMowerActivity.RETURNING\n        ...\n```"},{"id":"/2024/08/05/coordinator_async_setup","metadata":{"permalink":"/blog/2024/08/05/coordinator_async_setup","source":"@site/blog/2024-08-05-coordinator_async_setup.md","title":"Set up your DataUpdateCoordinator with a setup method","description":"In Home Assistant 2024.8, we are introducing the asyncsetup method for the data update coordinator.","date":"2024-08-05T00:00:00.000Z","tags":[],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Josef Zweck","url":"https://github.com/zweckj","key":null,"page":null}],"frontMatter":{"author":"Josef Zweck","authorURL":"https://github.com/zweckj","title":"Set up your DataUpdateCoordinator with a setup method"},"unlisted":false,"prevItem":{"title":"New returning type in LawnMowerActivity","permalink":"/blog/2024/08/23/lawn-mower-activity-returning"},"nextItem":{"title":"Climate entity now validates temperature provided in action calls","permalink":"/blog/2024/07/24/climate-min-max-temperature-check"}},"content":"In Home Assistant 2024.8, we are introducing the `_async_setup` method for the data update coordinator. \nThis method allows you to run asynchronous code to prepare your `DataUpdateCoordinator` instance\nor to load data that only needs to be loaded once.\n\nYou can override `_async_setup` in your coordinator, and it will be automatically\ncalled during `coordinator.async_config_entry_first_refresh()`.\nIt offers the same error handling as `_async_update_data` and will handle `ConfigEntryError`\nand `ConfigEntryAuthFailed` accordingly.\n\n## Example\n\n```python\n\nclass MyUpdateCoordinator(DataUpdateCoordinator[MyDataType]):\n\n    prereq_data: SomeData\n\n    def __init__(\n        self,\n        hass: HomeAssistant,\n    ) -> None:\n        \"\"\"Initialize coordinator.\"\"\"\n        super().__init__(hass, _LOGGER, name=DOMAIN, update_interval=SCAN_INTERVAL)\n        self.my_api = MyApi()\n\n\n    async def _async_setup(self) -> None:\n        \"\"\"Do initialization logic.\"\"\"\n        self.prereq_data = await self.my_api.get_initial_data()\n\n    async def _async_update_data(self) -> MyDataType:\n        \"\"\"Do the usual update\"\"\"\n        return await self.my_api.update(self.prereq_data)\n```\n\n## Avoiding checks for initialization status\n\nThis change allows you to refactor code that loaded the initial data in \nthe `_async_update_data` method by checking an initialization variable, like\n\n```python\nasync def _async_update_data(self) -> ...:\n    if not self.something:\n        self.something = self.client.fetch()\n    return self.client.fetch_data()\n```\n\ninto\n\n```python\nasync def _async_setup(self) -> None:\n    self.something = self.client.fetch()\n\nasync def _async_update_data(self) -> ...:\n    return self.client.fetch_data()\n```\n\n## More information\n\nRead more about this in the [documentation](https://developers.home-assistant.io/docs/integration_fetching_data/)"},{"id":"/2024/07/24/climate-min-max-temperature-check","metadata":{"permalink":"/blog/2024/07/24/climate-min-max-temperature-check","source":"@site/blog/2024-07-24-climate-min-max-temperature-check.md","title":"Climate entity now validates temperature provided in action calls","description":"As of Home Assistant Core 2024.8, we have implemented validation for the temperature action call provided by the ClimateEntity.","date":"2024-07-24T00:00:00.000Z","tags":[],"readingTime":0.685,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","imageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","authorImageURL":"https://avatars.githubusercontent.com/u/62932417?v=4","authorTwitter":"GJohansson","title":"Climate entity now validates temperature provided in action calls"},"unlisted":false,"prevItem":{"title":"Set up your DataUpdateCoordinator with a setup method","permalink":"/blog/2024/08/05/coordinator_async_setup"},"nextItem":{"title":"New entity feature flags in FanEntity","permalink":"/blog/2024/07/19/fan-fanentityfeatures-turn-on_off"}},"content":"As of Home Assistant Core 2024.8, we have implemented validation for the temperature action call provided by the `ClimateEntity`.\n\nIntegrations no longer need to check this within their own set temperature methods (`async_set_temperature`/`set_temperature`).\n\nHowever, it's important that integrations specify the `min_temp` and `max_temp` properties correctly, or the user might not be able to set their correct temperature if validation fails.\nLikewise, integrations that handle devices which can operate on both `Celsius` and `Fahrenheit` need to convert their respective `min_temp` and `max_temp` values accordingly.\n\n\n### Example\n\nConverts a device's native min/max value into the temperature_unit specified by the integration.\n\n```python\n\nclass MyClimateEntity(ClimateEntity):\n    \"\"\"Implementation of my climate entity.\"\"\"\n\n    @property\n    def min_temp(self) -> float:\n        \"\"\"Return the minimum temperature.\"\"\"\n        return TemperatureConverter.convert(\n                self.device.min_temp, UnitOfTemperature.CELSIUS, self.temperature_unit\n            )\n\n    @property\n    def max_temp(self) -> float:\n        \"\"\"Return the maximum temperature.\"\"\"\n        return TemperatureConverter.convert(\n                self.device.max_temp, UnitOfTemperature.CELSIUS, self.temperature_unit\n            )\n\n```"},{"id":"/2024/07/19/fan-fanentityfeatures-turn-on_off","metadata":{"permalink":"/blog/2024/07/19/fan-fanentityfeatures-turn-on_off","source":"@site/blog/2024-07-19-fan-fanentityfeatures-turn-on_off.md","title":"New entity feature flags in FanEntity","description":"As of Home Assistant Core 2024.8, we have added two new flags to FanEntityFeature: TURNON, TURNOFF.","date":"2024-07-19T00:00:00.000Z","tags":[],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"New entity feature flags in FanEntity"},"unlisted":false,"prevItem":{"title":"Climate entity now validates temperature provided in action calls","permalink":"/blog/2024/07/24/climate-min-max-temperature-check"},"nextItem":{"title":"model_id added to DeviceInfo","permalink":"/blog/2024/07/16/device-info-model-id"}},"content":"As of Home Assistant Core 2024.8, we have added two new flags to `FanEntityFeature`: `TURN_ON`, `TURN_OFF`.\n\nIntegrations implementing the `turn_on` service call need to set the `TURN_ON` feature flag.\nIntegrations implementing the `turn_off` service call need to set the `TURN_OFF` feature flag.\n\nThere will be a 6-month deprecation period (2025.2) during which `FanEntity` will set these on behalf of the integrations implementing the respective methods. From 2025.2, integrations will be unable to use the respective methods if entity features have not been set accordingly.\n\nImplementing the methods without setting the respective feature flag, will create a warning log entry guiding the user to create an issue for the integration.\n\nIntegrations should set the attribute `_enable_turn_on_off_backwards_compatibility` in your `FanEntity` subclass instance to `False` once it has been migrated into using or not using the new feature flags.\nThis will stop the automatic setting of the new feature flags during the deprecation period, and should be removed once deprecation has ended."},{"id":"/2024/07/16/device-info-model-id","metadata":{"permalink":"/blog/2024/07/16/device-info-model-id","source":"@site/blog/2024-07-16-device-info-model-id.md","title":"model_id added to DeviceInfo","description":"Starting from 2024.8, you can now add a model identifier to the DeviceInfo class. This identifier can be used to identify the device model in integrations and the frontend.","date":"2024-07-16T00:00:00.000Z","tags":[],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Joost Lekkerkerker","url":"https://github.com/joostlek","imageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","key":null,"page":null}],"frontMatter":{"author":"Joost Lekkerkerker","authorURL":"https://github.com/joostlek","authorImageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","title":"model_id added to DeviceInfo"},"unlisted":false,"prevItem":{"title":"New entity feature flags in FanEntity","permalink":"/blog/2024/07/19/fan-fanentityfeatures-turn-on_off"},"nextItem":{"title":"Services are now actions","permalink":"/blog/2024/07/16/service-actions"}},"content":"Starting from 2024.8, you can now add a model identifier to the `DeviceInfo` class. This identifier can be used to identify the device model in integrations and the frontend.\n\nFor example, the Philips Hue ambiance spot was previously listed as \"Hue ambiance spot (LTG002)\". This can now be split up, where the `model` is \"Hue ambiance spot\" and the `model_id` is \"LTG002\"."},{"id":"/2024/07/16/service-actions","metadata":{"permalink":"/blog/2024/07/16/service-actions","source":"@site/blog/2024-07-16-service-actions.md","title":"Services are now actions","description":"The term \"Services\" has been a source of confusion for many users, as it is not immediately clear what it refers to; it could be a web or STT service, but in the context of Home Assistant, it means something entirely different (service calls).","date":"2024-07-16T00:00:00.000Z","tags":[],"readingTime":1.05,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Services are now actions"},"unlisted":false,"prevItem":{"title":"model_id added to DeviceInfo","permalink":"/blog/2024/07/16/device-info-model-id"},"nextItem":{"title":"New HVACAction DEFROSTING","permalink":"/blog/2024/07/07/climate-hvacaction-defrosting"}},"content":"The term \"Services\" has been a source of confusion for many users, as it is not immediately clear what it refers to; it could be a web or STT service, but in the context of Home Assistant, it means something entirely different (service calls).\n\nIn Home Assistant 2024.8, \"Services\" (as in service calls) will be renamed to \"Actions\". This change is part of our ongoing effort to make Home Assistant more user-friendly and easier for new users to understand. The term fits in with the UI changes we have been implementing over the past months (call services no longer exist in our automations and script editors). Effectively, one is performing actions in one's automations.\n\nThis change will be reflected in the Home Assistant UI, documentation, and other places where the term \"Services\" is used. For example, the **\"Services\"** tab in the Developer Tools will be renamed to **\"Actions\"**.\n\nFor developers, there is no need to worry about this change. In the developer documentation, we will update all references to \"services\" to \"service actions\", as we have different types of actions in our backend (for example, device actions). The underlying functionality will remain the same, and the transition is seamless.\n\nThis is, just like the end-user change, a terminology change only."},{"id":"/2024/07/07/climate-hvacaction-defrosting","metadata":{"permalink":"/blog/2024/07/07/climate-hvacaction-defrosting","source":"@site/blog/2024-07-07-climate-hvacaction-defrosting.md","title":"New HVACAction DEFROSTING","description":"The ClimateEntity has an hvac_action property, which describes what the climate entity is currently doing (which is not the same as its mode).","date":"2024-07-07T00:00:00.000Z","tags":[],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"New HVACAction DEFROSTING"},"unlisted":false,"prevItem":{"title":"Services are now actions","permalink":"/blog/2024/07/16/service-actions"},"nextItem":{"title":"Excluding all state attributes from recording using MATCH_ALL","permalink":"/blog/2024/06/22/excluding-state-attributes-from-recording-match-all"}},"content":"The `ClimateEntity` has an `hvac_action` property, which describes what the climate entity is currently doing (which is not the same as its mode).\n\nWe have added `DEFROSTING` as a possible `HVACAction` to represent when an entity is currently defrosting.\n\nDefrosting is when the system runs in reverse for some time to melt down accumulated ice. It occurs typically in colder environments and should not be mixed with, for example, cars that are defrosting by heating their windows.\n\n```python\nfrom homeassistant.components.climate.const import HVACAction\n\nclass MyClimateEntity(ClimateEntity):\n    \"\"\"Implementation of my climate entity.\"\"\"\n\n    def hvac_action(self) -> HVACAction | None:\n        \"\"\"Return the current running hvac operation if supported.\"\"\"\n        return HVACAction.DEFROSTING\n\n```\n\nMore details can be found in the [climate entity documentation](/docs/core/entity/climate#hvac-action)\n\nBackground for the original change is in [architecture discussion #1090](https://github.com/home-assistant/architecture/discussions/1090)."},{"id":"/2024/06/22/excluding-state-attributes-from-recording-match-all","metadata":{"permalink":"/blog/2024/06/22/excluding-state-attributes-from-recording-match-all","source":"@site/blog/2024-06-22-excluding-state-attributes-from-recording-match-all.md","title":"Excluding all state attributes from recording using MATCH_ALL","description":"The way how state attributes are excluded from the recording was previously changed in September 2023.","date":"2024-06-22T00:00:00.000Z","tags":[],"readingTime":0.56,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Excluding all state attributes from recording using MATCH_ALL"},"unlisted":false,"prevItem":{"title":"New HVACAction DEFROSTING","permalink":"/blog/2024/07/07/climate-hvacaction-defrosting"},"nextItem":{"title":"Making http path registration async safe with `async_register_static_paths`","permalink":"/blog/2024/06/18/async_register_static_paths"}},"content":"The way how state attributes are excluded from the recording was previously changed in September 2023.\n\nThe previous implementation was limited as there was no way to handle dynamic attributes or any easy way to simply exclude all attributes instead of listing them individually.\n\nIt is now possible within an integration to tell recording to not record any attribute by using the `MATCH_ALL` constant, which will automatically remove all attributes from recording except `device_class`, `state_class`, `unit_of_measurement`, and `friendly_name.`\n\n```python\nfrom homeassistant.const import MATCH_ALL\n\nclass ExampleEntity(Entity):\n    \"\"\"Implementation of an entity.\"\"\"\n\n    _unrecorded_attributes = frozenset({MATCH_ALL})\n\n```\n\nMore details can be found in the [entity documentation](/docs/core/entity#excluding-state-attributes-from-recorder-history).\n\nBackground for the original change is in [architecture discussion #964](https://github.com/home-assistant/architecture/discussions/964)."},{"id":"/2024/06/18/async_register_static_paths","metadata":{"permalink":"/blog/2024/06/18/async_register_static_paths","source":"@site/blog/2024-06-18-async_register_static_paths.md","title":"Making http path registration async safe with `async_register_static_paths`","description":"hass.http.registerstaticpath is deprecated because it does blocking I/O in the event loop, instead call await hass.http.asyncregisterstaticpaths([StaticPathConfig(urlpath, path, cache_headers)])","date":"2024-06-18T00:00:00.000Z","tags":[],"readingTime":0.595,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Making http path registration async safe with `async_register_static_paths`"},"unlisted":false,"prevItem":{"title":"Excluding all state attributes from recording using MATCH_ALL","permalink":"/blog/2024/06/22/excluding-state-attributes-from-recording-match-all"},"nextItem":{"title":"Forwarding setup to config entry platforms","permalink":"/blog/2024/06/12/async_forward_entry_setups"}},"content":"`hass.http.register_static_path` is deprecated because it does blocking I/O in the event loop, instead call `await hass.http.async_register_static_paths([StaticPathConfig(url_path, path, cache_headers)])`\n\nThe arguments to `async_register_static_paths` are the same as `register_static_path` except they are wrapped in the `StaticPathConfig` `dataclass` and an `Iterable` of them is accepted to allow registering multiple paths at once to avoid multiple executor jobs.\n\nFor example, if your integration called `hass.http.register_static_path(\"/integrations/photos\", \"/config/photos\", True)`, it should now call `await hass.http.async_register_static_paths([StaticPathConfig(\"/integrations/photos\", \"/config/photos\", True)])`\n\nThe `StaticPathConfig` `dataclass` should be imported from `homeassistant.components.http`\n\n`hass.http.register_static_path` will be removed in 2025.7\n\n## Example\n\n```python\nfrom pathlib import Path\nfrom homeassistant.components.http import StaticPathConfig\n\nshould_cache = False\nfiles_path = Path(__file__).parent / \"static\"\nfiles2_path = Path(__file__).parent / \"static2\"\n\nawait hass.http.async_register_static_paths([\n    StaticPathConfig(\"/api/my_integration/static\", str(files_path), should_cache),\n    StaticPathConfig(\"/api/my_integration/static2\", str(files2_path), should_cache)\n])\n```"},{"id":"/2024/06/12/async_forward_entry_setups","metadata":{"permalink":"/blog/2024/06/12/async_forward_entry_setups","source":"@site/blog/2024-06-12-async_forward_entry_setups.md","title":"Forwarding setup to config entry platforms","description":"Calling hass.configentries.asyncforwardentrysetup is deprecated and will be removed in Home Assistant 2025.6. Instead, await hass.configentries.asyncforwardentrysetups as it can load multiple platforms at once and is more efficient since it does not require a separate import executor job for each platform.","date":"2024-06-12T00:00:00.000Z","tags":[],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Forwarding setup to config entry platforms"},"unlisted":false,"prevItem":{"title":"Making http path registration async safe with `async_register_static_paths`","permalink":"/blog/2024/06/18/async_register_static_paths"},"nextItem":{"title":"Alarm Control Panel Entity code validation","permalink":"/blog/2024/05/22/alarm_control_panel_validation"}},"content":"Calling `hass.config_entries.async_forward_entry_setup` is deprecated and will be removed in Home Assistant 2025.6. Instead, await `hass.config_entries.async_forward_entry_setups` as it can load multiple platforms at once and is more efficient since it does not require a separate import executor job for each platform.\n\n`hass.config_entries.async_forward_entry_setups` must always be awaited if it's called while the config entry is being set up to ensure that it finishes before the config entry setup is complete. For more details, review [this blog post](https://developers.home-assistant.io/blog/2022/07/08/config_entry_forwards)."},{"id":"/2024/05/22/alarm_control_panel_validation","metadata":{"permalink":"/blog/2024/05/22/alarm_control_panel_validation","source":"@site/blog/2024-05-22-alarm_control_panel_validation.md","title":"Alarm Control Panel Entity code validation","description":"The AlarmControlPanelEntity is now enforcing validation of code for alarm control panel entities, which set codearmrequired to True (default behavior). Service calls fail if no code is provided when a code is required.","date":"2024-05-22T00:00:00.000Z","tags":[],"readingTime":0.54,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Alarm Control Panel Entity code validation"},"unlisted":false,"prevItem":{"title":"Forwarding setup to config entry platforms","permalink":"/blog/2024/06/12/async_forward_entry_setups"},"nextItem":{"title":"Exposing Home Assistant API to LLMs","permalink":"/blog/2024/05/20/llm-api"}},"content":"The `AlarmControlPanelEntity` is now enforcing validation of code for alarm control panel entities, which set `code_arm_required` to `True` (default behavior). Service calls fail if no code is provided when a code is required.\n\nPreviously this was entirely optional, and a user could skip code entry regardless of it was needed by the integration or not (and as such each integration needed to implement its own check).\n\nAs the default behavior is that code is required, custom integrations that don't require a code input need to set `code_arm_required` to `False` or the user will always have to input a code regardless of if it's needed by the service calls."},{"id":"/2024/05/20/llm-api","metadata":{"permalink":"/blog/2024/05/20/llm-api","source":"@site/blog/2024-05-20-llm-api.md","title":"Exposing Home Assistant API to LLMs","description":"Since we introduced LLMs in Home Assistant as part of Year of the Voice, we have received the request to allow enabling LLMs to interact with Home Assistant. This is now possible by exposing a Home Assistant API to LLMs.","date":"2024-05-20T00:00:00.000Z","tags":[],"readingTime":0.595,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://github.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://github.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Exposing Home Assistant API to LLMs"},"unlisted":false,"prevItem":{"title":"Alarm Control Panel Entity code validation","permalink":"/blog/2024/05/22/alarm_control_panel_validation"},"nextItem":{"title":"Handling time zones without blocking the event loop","permalink":"/blog/2024/05/19/fix_zoneinfo_blocking_io"}},"content":"Since we introduced LLMs in Home Assistant as part of Year of the Voice, we have received the request to allow enabling LLMs to interact with Home Assistant. This is now possible by exposing a Home Assistant API to LLMs.\n\nHome Assistant will come with a built-in Assist API, which follows the capabilities and exposed entities that are also accessible to the built-in conversation agent.\n\nIntegrations that interact with LLMs should update their integration to support LLM APIs.\n\nCustom integration authors can create their own LLM APIs to offer LLMs more advanced access to Home Assistant.\n\nSee the [LLM API documentation](/docs/core/llm) for more information and [this example pull request](https://github.com/home-assistant/core/pull/117644) on how to integrate the LLM API in your integration."},{"id":"/2024/05/19/fix_zoneinfo_blocking_io","metadata":{"permalink":"/blog/2024/05/19/fix_zoneinfo_blocking_io","source":"@site/blog/2024-05-19-fix_zoneinfo_blocking_io.md","title":"Handling time zones without blocking the event loop","description":"Constructing ZoneInfo objects may do blocking I/O to load the zone info from disk if the timezone passed is not in the cache.","date":"2024-05-19T00:00:00.000Z","tags":[],"readingTime":0.57,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Handling time zones without blocking the event loop"},"unlisted":false,"prevItem":{"title":"Exposing Home Assistant API to LLMs","permalink":"/blog/2024/05/20/llm-api"},"nextItem":{"title":"Changes in setup entity platforms with group integration","permalink":"/blog/2024/05/10/group-integration"}},"content":"Constructing `ZoneInfo` objects may do blocking I/O to load the zone info from disk if the timezone passed is not in the cache.\n\n`dt_util.async_get_time_zone` is now available to replace `dt_util.get_time_zone` to fetch a time zone in the event loop which is async safe and will not do blocking I/O in the event loop.\n\n`hass.config.set_time_zone` is deprecated and replaced with `hass.config.async_set_time_zone`. `hass.config.set_time_zone` will be removed in 2025.6. Setting the time zone only affects tests, as no integration should be calling this function in production. \n\nExamining `dt_util.DEFAULT_TIME_ZONE` directly is deprecated and `dt_util.get_default_time_zone()` should be used instead.\n\nIf your integration needs to construct `ZoneInfo` objects in the event loop, it is recommended to use the [`aiozoneinfo` library](https://pypi.org/project/aiozoneinfo/)."},{"id":"/2024/05/10/group-integration","metadata":{"permalink":"/blog/2024/05/10/group-integration","source":"@site/blog/2024-05-10-group-integration.md","title":"Changes in setup entity platforms with group integration","description":"Changes in setup entity platforms with group integration","date":"2024-05-10T00:00:00.000Z","tags":[],"readingTime":1.685,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Changes in setup entity platforms with group integration"},"unlisted":false,"prevItem":{"title":"Handling time zones without blocking the event loop","permalink":"/blog/2024/05/19/fix_zoneinfo_blocking_io"},"nextItem":{"title":"LockEntity supports open/opening state","permalink":"/blog/2024/05/10/lock-supports-open-state"}},"content":"## Changes in setup entity platforms with group integration\n\nBy default, the `group` integration allows entities to be grouped. If the default `ON`/`OFF` states for an entity default to `on` and `off`, then `grouping` is supported by default. The setup changes, though, for Entity platforms that can be grouped but have alternative states, e.g., `cover` (`open`/`closed`) or `person` (`home`/`not_home`), or platforms that are meant to be excluded, such as `sensor`. These entity platforms must implement `async_describe_on_off_states` in the `group.py` module.\n\nIn `async_describe_on_off_states`, the `domain` needs to be the first argument passed to the `registry` methods `on_off_states` and `exclude_domain`. When registering alternative `ON`/`OFF` states with `registry.on_off_state`, in addition to the `ON` states, the default `ON` state needs to be passed.\n\n### Example registering alternative states\n\nNew signature for `registry.on_off_states`:\n\n```python\n    @callback\n    def on_off_states(\n        self, domain: str, on_states: set[str], default_on_state:str, off_state: str\n    ) -> None:\n        \"\"\"Register on and off states for the current domain.\"\"\"\n    ...\n```\n\nExample `group.py` for the `vacuum` entity platform registering alternative `ON`/`OFF` states. Note the the first `ON` state now is considered to be the default `ON` state.\n\n```python\n\"\"\"Describe group states.\"\"\"\n\nfrom typing import TYPE_CHECKING\n\nfrom homeassistant.const import STATE_OFF, STATE_ON\nfrom homeassistant.core import HomeAssistant, callback\n\nif TYPE_CHECKING:\n    from homeassistant.components.group import GroupIntegrationRegistry\n\nfrom .const import DOMAIN, STATE_CLEANING, STATE_ERROR, STATE_RETURNING\n\n\n@callback\ndef async_describe_on_off_states(\n    hass: HomeAssistant, registry: \"GroupIntegrationRegistry\"\n) -> None:\n    \"\"\"Describe group on off states.\"\"\"\n    registry.on_off_states(\n        DOMAIN,  # domain\n        # set with all group ON states\n        {\n            STATE_ON,\n            STATE_CLEANING,\n            STATE_RETURNING,\n            STATE_ERROR,\n        },\n        STATE_ON, # Default group ON state \n        STATE_OFF, # Group OFF state\n    )\n```\n\n### Example excluding an entity platform from group entities\n\nNew signature for `registry.exclude_domain`:\n\n```python\n    @callback\n    def exclude_domain(self, domain: str) -> None:\n        \"\"\"Exclude the current domain.\"\"\"\n        ...\n```\n\nExample `group.py` for the `sensor` entity platform to exclude sensor entities from `group` entities.\n\n```python\n\"\"\"Describe group states.\"\"\"\n\nfrom typing import TYPE_CHECKING\n\nfrom homeassistant.core import HomeAssistant, callback\n\nif TYPE_CHECKING:\n    from homeassistant.components.group import GroupIntegrationRegistry\n\nfrom .const import DOMAIN\n\n\n@callback\ndef async_describe_on_off_states(\n    hass: HomeAssistant, registry: \"GroupIntegrationRegistry\"\n) -> None:\n    \"\"\"Describe group on off states.\"\"\"\n    registry.exclude_domain(DOMAIN)\n```"},{"id":"/2024/05/10/lock-supports-open-state","metadata":{"permalink":"/blog/2024/05/10/lock-supports-open-state","source":"@site/blog/2024-05-10-lock-supports-open-state.md","title":"LockEntity supports open/opening state","description":"Recently we have added an open and opening state to LockEntity","date":"2024-05-10T00:00:00.000Z","tags":[],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"LockEntity supports open/opening state"},"unlisted":false,"prevItem":{"title":"Changes in setup entity platforms with group integration","permalink":"/blog/2024/05/10/group-integration"},"nextItem":{"title":"How we managed to speed up our CI to save 168+ days of execution time per month","permalink":"/blog/2024/05/09/improving-ci-test-execution"}},"content":"Recently we have added an `open` and `opening` state to `LockEntity`\n\nThis is useful if you have locks which can differentiate between `unlocked` (not locked but latched) state and `open` (unlocked and latch withdrawn) state.\n\n`LockEntity` already supports the [`open` method](/docs/core/entity/lock#open) by implementing the feature flag `LockEntityFeature.OPEN`\n\nExample (default implementation):\n\n```python\nclass MyLock(LockEntity):\n\n    @property\n    def is_opening(self) -> bool:\n        \"\"\"Return true if lock is open.\"\"\"\n        return self._state == STATE_OPENING\n\n    @property\n    def is_open(self) -> bool:\n        \"\"\"Return true if lock is open.\"\"\"\n        return self._state == STATE_OPEN\n\n    async def async_open(self, **kwargs: Any) -> None:\n        \"\"\"Open the door latch.\"\"\"\n        self._state = STATE_OPEN\n        self.async_write_ha_state()\n\n```"},{"id":"/2024/05/09/improving-ci-test-execution","metadata":{"permalink":"/blog/2024/05/09/improving-ci-test-execution","source":"@site/blog/2024-05-09-improving-ci-test-execution.md","title":"How we managed to speed up our CI to save 168+ days of execution time per month","description":"We got a taste for speed after UV gave us back 215 compute hours a month.","date":"2024-05-09T00:00:00.000Z","tags":[],"readingTime":1.705,"hasTruncateMarker":false,"authors":[{"name":"Robert Resch","url":"https://github.com/edenhaus","imageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Robert Resch","authorURL":"https://github.com/edenhaus","authorImageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","title":"How we managed to speed up our CI to save 168+ days of execution time per month"},"unlisted":false,"prevItem":{"title":"LockEntity supports open/opening state","permalink":"/blog/2024/05/10/lock-supports-open-state"},"nextItem":{"title":"Second phase of notify entity platform implementation","permalink":"/blog/2024/05/03/notify-title"}},"content":"We got a taste for speed after [UV gave us back 215 compute hours a month](2024-04-03-build-images-with-uv.md). \r\nOur CI workflow gets triggered on each commit, and due to the high volume of contributions, it was triggered 6647 times in March 2024.\r\nThe full runs, where the whole test suite is being executed, take a long time.\r\n\r\nIt turned out that the plugin, we used to split the tests into 10 groups, was inefficient. Each pytest job needed to discover all tests, even when the job intended to only execute a subset of them.\r\n\r\nNow we have a separate job to discover all tests and split them into 10 groups. The 10 pytest jobs only need to execute a subset of all tests. Not doing full-discovery in each test runner saves us 3 hours on each full run!\r\n\r\n```mermaid\r\nflowchart LR\r\n    A[Full run] --> R{Distribute work}\r\n\r\n    R -->|One| D[Discover tests to run]\r\n    R -->|Two| E[Discover tests to run]\r\n    R -->|Three| F[Discover tests to run]\r\n\r\n    D --> D2[Run tests]\r\n    E --> E2[Run tests]\r\n    F --> F2[Run tests]\r\n\r\n\r\n    AN[Full run] --> RW[Discover tests to run]\r\n\r\n    RW --> RN{Distribute work}\r\n\r\n    RN -->|One| D2N[Run tests]\r\n    RN -->|Two| E2N[Run tests]\r\n    RN -->|Three| F2N[Run tests]\r\n\r\n```\r\n\r\nA short analysis of the 6647 CI workflows in March 2024 revealed the following stats:\r\n- 2406 were canceled before termination\r\n    - 1771 should be full runs\r\n- 1085 failed\r\n    - 732 where failed full runs\r\n- 3007 terminated successfully\r\n    - 1629 partial runs (only tests for a given integration where executed)\r\n    - 1378 full runs\r\n\r\nConsidering the 1378 successful full runs, we would have saved around **4042 hours ~ 168 days** of execution time in March 2024 with [#114381](https://github.com/home-assistant/core/pull/114381). Even more, if I had also analyzed the failed/canceled ones.\r\n\r\nThe more than 168 monthly saved execution days can be used by other jobs and make the CI experience for all developers and our community better.\r\nWe improved our sustainability by using fewer resources to run our test suite.\r\n\r\n**A big thank you to GitHub for providing Home Assistant with additional CI runners.**"},{"id":"/2024/05/03/notify-title","metadata":{"permalink":"/blog/2024/05/03/notify-title","source":"@site/blog/2024-05-03-notify-title.md","title":"Second phase of notify entity platform implementation","description":"Title option for send_message service notify entity platform","date":"2024-05-03T00:00:00.000Z","tags":[],"readingTime":0.475,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Second phase of notify entity platform implementation"},"unlisted":false,"prevItem":{"title":"How we managed to speed up our CI to save 168+ days of execution time per month","permalink":"/blog/2024/05/09/improving-ci-test-execution"},"nextItem":{"title":"Improved typing for hass.data","permalink":"/blog/2024/05/01/improved-hass-data-typing"}},"content":"### Title option for send_message service notify entity platform\n\nRecently we added the notify [entity platform](https://developers.home-assistant.io/docs/core/entity/notify/). The new `notify` platform method implements service `send_message`. This service now also accepts an optional `title` as an argument. This allows some new integrations that can be migrated now to use the new entity platform:\n\n- cisco_webex_teams\n- file\n- sendgrid\n- syslog\n- tibber\n\nThe [architecture discussion](https://github.com/home-assistant/architecture/discussions/1041) is still ongoing.\n\nWhen integrations are migrated, users will need to use the new `notify.send_message` service, so the migration changes will cause automations to break after the deprecation period is over."},{"id":"/2024/05/01/improved-hass-data-typing","metadata":{"permalink":"/blog/2024/05/01/improved-hass-data-typing","source":"@site/blog/2024-05-01-improved-hass-data-typing.md","title":"Improved typing for hass.data","description":"In the past, one of the challenges with hass.data was to correctly assign type information. Since it was typed as dict[str, Any], the only options were annotation assignments or cast like:","date":"2024-05-01T00:00:00.000Z","tags":[],"readingTime":1.335,"hasTruncateMarker":false,"authors":[{"name":"Marc Mueller","url":"https://github.com/cdce8p","key":null,"page":null}],"frontMatter":{"author":"Marc Mueller","authorURL":"https://github.com/cdce8p","title":"Improved typing for hass.data"},"unlisted":false,"prevItem":{"title":"Second phase of notify entity platform implementation","permalink":"/blog/2024/05/03/notify-title"},"nextItem":{"title":"Store runtime data inside the config entry","permalink":"/blog/2024/04/30/store-runtime-data-inside-config-entry"}},"content":"In the past, one of the challenges with `hass.data` was to correctly assign type information. Since it was typed as `dict[str, Any]`, the only options were annotation assignments or `cast` like:\n\n```py\ndata: MyData = hass.data[SOME_KEY]\n```\n\nThis had several disadvantages. Not only was it necessary to annotate every assignment, but type checkers also basically pretended that the annotation would always be correct. Especially during refactoring, it could easily happen that one instance was missed, and while type-checking still succeeded, the actual code would be broken.\n\nTo fix that, it's now possible to use two new key types `HassKey` and `HassEntryKey`. With a little bit of magic, type checkers are now able to infer the type and make sure it's correct. Even when storing data.\n\n\nAn example could look like this:\n```py\n# <integration>/__init__.py\nfrom homeassistant.util.hass_dict import HassKey\n\nMY_KEY: HassKey[\"MyData\"] = HassKey(DOMAIN)\n\n@dataclass\nclass MyData:\n    client: MyClient\n    other_data: dict[str, Any]\n\nasync def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:\n    client = MyClient(...)\n\n    hass.data[MY_KEY] = MyData(client, {...})\n    hass.data[MY_KEY] = 1  # mypy error\n```\n\n```py    \n# <integration>/switch.py\nfrom . import MY_KEY\n\nasync def async_setup_platform(\n    hass: HomeAssistant,\n    config: ConfigType,\n    async_add_entities: AddEntitiesCallback,\n    discovery_info: DiscoveryInfoType | None = None,\n) -> None:\n    data = hass.data[MY_KEY]\n    reveal_type(data)  # MyData\n    \n    async_add_entities([MySwitch(data.client)])\n```\n\nStoring data in a dict by `entry.entry_id`? It's often better to just store it inside the `ConfigEntry` directly. See the recent [blog post](/blog/2024/04/30/store-runtime-data-inside-config-entry) about it. If that isn't an option, use `HassEntryKey`.\n\n```py\n# <integration>/__init__.py\nfrom homeassistant.util.hass_dict import HassEntryKey\n\nMY_KEY: HassEntryKey[\"MyData\"] = HassEntryKey(DOMAIN)\n\nasync def async_setup_entry(\n    hass: HomeAssistant,\n    entry: ConfigEntry,\n) -> bool:\n    client = MyClient(...)\n    \n    hass.data.setdefault(MY_KEY, {})[entry.entry_id] = MyData(client, {...})\n```"},{"id":"/2024/04/30/store-runtime-data-inside-config-entry","metadata":{"permalink":"/blog/2024/04/30/store-runtime-data-inside-config-entry","source":"@site/blog/2024-04-30-store-runtime-data-inside-config-entry.md","title":"Store runtime data inside the config entry","description":"Integrations often need to set up and track custom data, such as coordinators, API connections, or code objects. Previously, those were all stored inside hass.data, which made tracking them difficult.","date":"2024-04-30T00:00:00.000Z","tags":[],"readingTime":1.02,"hasTruncateMarker":false,"authors":[{"name":"Marc Mueller","url":"https://github.com/cdce8p","key":null,"page":null}],"frontMatter":{"author":"Marc Mueller","authorURL":"https://github.com/cdce8p","title":"Store runtime data inside the config entry"},"unlisted":false,"prevItem":{"title":"Improved typing for hass.data","permalink":"/blog/2024/05/01/improved-hass-data-typing"},"nextItem":{"title":"Always reload after a successful re-auth flow","permalink":"/blog/2024/04/25/always-reload-after-successful-reauth-flow"}},"content":"Integrations often need to set up and track custom data, such as coordinators, API connections, or code objects. Previously, those were all stored inside `hass.data`, which made tracking them difficult.\n\nWith recent changes, it's now possible to use `entry.runtime_data` for that. The config entry is already available when setting up platforms and gets cleaned up automatically. No more deleting the key from `hass.data` after unloading.\n\nIt also better supports type-checking. `ConfigEntry` is generic now, so passing the data type along is possible. Use a typed data structure like `dataclass` for that. To simplify the annotation, it's recommended to define a type alias for it.\n\nAn example could look like this:\n```py\n# <integration>/__init__.py\n\n# The type alias needs to be suffixed with 'ConfigEntry'\ntype MyConfigEntry = ConfigEntry[MyData]\n\n@dataclass\nclass MyData:\n    client: MyClient\n    other_data: dict[str, Any]\n\nasync def async_setup_entry(\n    hass: HomeAssistant,\n    entry: MyConfigEntry,  # use type alias instead of ConfigEntry\n) -> bool:\n    client = MyClient(...)\n    \n    # Assign the runtime_data\n    entry.runtime_data = MyData(client, {...})\n```\n\n```py\n# <integration>/switch.py\n\nfrom . import MyConfigEntry\n\nasync def async_setup_entry(\n    hass: HomeAssistant,\n    entry: MyConfigEntry,  # use type alias instead of ConfigEntry\n    async_add_entities: AddEntitiesCallback,\n) -> None:\n    # Access the runtime data form the config entry\n    data = entry.runtime_data\n    \n    async_add_entities([MySwitch(data.client)])\n```"},{"id":"/2024/04/25/always-reload-after-successful-reauth-flow","metadata":{"permalink":"/blog/2024/04/25/always-reload-after-successful-reauth-flow","source":"@site/blog/2024-04-25-always-reload-after-successful-reauth-flow.md","title":"Always reload after a successful re-auth flow","description":"Always reload after successful reauthentication","date":"2024-04-25T00:00:00.000Z","tags":[],"readingTime":1.02,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Always reload after a successful re-auth flow"},"unlisted":false,"prevItem":{"title":"Store runtime data inside the config entry","permalink":"/blog/2024/04/30/store-runtime-data-inside-config-entry"},"nextItem":{"title":"Replacing `async_track_state_change` with `async_track_state_change_event`","permalink":"/blog/2024/04/13/deprecate_async_track_state_change"}},"content":"## Always reload after successful reauthentication\n\nTo update and reload the entry after a successful reauthentication flow, the helper `async_update_reload_and_abort` can be used. The default behavior of the helper has been changed. By default the entry will always reload if the helper is called. If an entry needs reauthentication, it is not always needed to update the entry if an account was temporary disabled or an API-key was temporary disallowed.\n\nFor cases where reloading is not wanted in case the entry is not changed, the `reload_even_if_entry_is_unchanged=False` parameter can be passed to the helper.\n\nMore about this helper can be found here [here](/docs/config_entries_config_flow_handler/#reauthentication).\n\n### Example\n\n```python\nclass OAuth2FlowHandler(\n    config_entry_oauth2_flow.AbstractOAuth2FlowHandler, domain=DOMAIN\n):\n    \"\"\"Config flow to handle OAuth2 authentication.\"\"\"\n\n    reauth_entry: ConfigEntry | None = None\n\n    async def async_step_reauth(self, user_input=None):\n        \"\"\"Perform reauth upon an API authentication error.\"\"\"\n        self.reauth_entry = self.hass.config_entries.async_get_entry(\n            self.context[\"entry_id\"]\n        )\n        return await self.async_step_reauth_confirm()\n\n    async def async_step_reauth_confirm(self, user_input=None):\n        \"\"\"Dialog that informs the user that reauth is required.\"\"\"\n        if user_input is None:\n            return self.async_show_form(\n                step_id=\"reauth_confirm\",\n                data_schema=vol.Schema({}),\n            )\n        return await self.async_step_user()\n\n    async def async_oauth_create_entry(self, data: dict) -> dict:\n        \"\"\"Create an oauth config entry or update existing entry for reauth.\"\"\"\n        if self.reauth_entry:\n            # Only reload if the entry was updated\n            return self.async_update_reload_and_abort(\n                self.reauth_entry,\n                data=data,\n                reload_even_if_entry_is_unchanged=False,\n            )\n        return await super().async_oauth_create_entry(data)\n```"},{"id":"/2024/04/13/deprecate_async_track_state_change","metadata":{"permalink":"/blog/2024/04/13/deprecate_async_track_state_change","source":"@site/blog/2024-04-13-deprecate_async_track_state_change.md","title":"Replacing `async_track_state_change` with `async_track_state_change_event`","description":"asynctrackstatechange is deprecated and will be removed in Home Assistant 2025.5. asynctrackstatechange_event should be used instead.","date":"2024-04-13T00:00:00.000Z","tags":[],"readingTime":0.725,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Replacing `async_track_state_change` with `async_track_state_change_event`"},"unlisted":false,"prevItem":{"title":"Always reload after a successful re-auth flow","permalink":"/blog/2024/04/25/always-reload-after-successful-reauth-flow"},"nextItem":{"title":"New notify entity platform","permalink":"/blog/2024/04/10/new-notify-entity-platform"}},"content":"`async_track_state_change` is deprecated and will be removed in Home Assistant 2025.5. `async_track_state_change_event` should be used instead.\n\n`async_track_state_change` always creates a top-level listener for `EVENT_STATE_CHANGED`, which would have to reject all state changes that did not match the desired entities. This design presented a performance problem when there were many integrations using `async_track_state_change`. `async_track_state_change` has been phased out in `core` since the introduction of `async_track_state_change_event`, with the last instance being removed in 2024.5.\n\nExample with `async_track_state_change`:\n\n```python\nfrom homeassistant.core import State, callback\nfrom homeassistant.helpers.event import async_track_state_change\n\n@callback\ndef _async_on_change(entity_id: str, old_state: State | None, new_state: State | None) -> None:\n    ...\n\nunsub = async_track_state_change(hass, \"sensor.one\", _async_on_change)\nunsub()\n```\n\nExample replacement with `async_track_state_change_event`:\n\n```python\nfrom homeassistant.core import Event, EventStateChangedData, callback\nfrom homeassistant.helpers.event import async_track_state_change_event\n\n@callback\ndef _async_on_change(event: Event[EventStateChangedData]) -> None:\n    entity_id = event.data[\"entity_id\"]\n    old_state = event.data[\"old_state\"]\n    new_state = event.data[\"new_state\"]\n    ...\n\nunsub = async_track_state_change_event(hass, \"sensor.one\", _async_on_change)\nunsub()\n```"},{"id":"/2024/04/10/new-notify-entity-platform","metadata":{"permalink":"/blog/2024/04/10/new-notify-entity-platform","source":"@site/blog/2024-04-10-new-notify-entity-platform.md","title":"New notify entity platform","description":"New notify entity platform","date":"2024-04-10T00:00:00.000Z","tags":[],"readingTime":0.955,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"New notify entity platform"},"unlisted":false,"prevItem":{"title":"Replacing `async_track_state_change` with `async_track_state_change_event`","permalink":"/blog/2024/04/13/deprecate_async_track_state_change"},"nextItem":{"title":"Deprecate old backports and typing alias","permalink":"/blog/2024/04/08/deprecated-backports-and-typing-aliases"}},"content":"### New notify entity platform\n\nThe notify platform is now available as an [entity platform](https://developers.home-assistant.io/docs/core/entity/notify/). The MVP for the new `notify` platform [implements](https://github.com/home-assistant/core/pull/110950) the method and service `send_message`. It accepts `message` as a required attribute.\nUnlike the legacy `notify.notify` service we have no targets as argument, as it is an entity we can target multiple `notify` entities when calling `send_message`.\n\nThe [architecture discussion](https://github.com/home-assistant/architecture/discussions/1041) is ongoing, and is about the device classes to implement and the implementation of recipient support in the form of [contacts via a contact registry](https://github.com/home-assistant/architecture/discussions/1041#discussioncomment-8947842).\n\nExisting integrations that implement the legacy `notify` services will be migrated in phases. The first step is to migrate the integrations than only use `message` as a parameter to notify.\n\nThe integrations identified for migration are:\n\n- circuit\n- clickatell\n- clicksend\n- command_line\n- demo\n- ecobee\n- flock\n- free_mobile\n- knx\n- mastodon\n\nAs soon as we have `title` and/or `recipient` support we can migrate more integrations to use the new platform.\n\nWhen integrations are migrated, users will need to use the new `notify.send_message` service, so the migration changes will cause automations to break after the deprecation period is over."},{"id":"/2024/04/08/deprecated-backports-and-typing-aliases","metadata":{"permalink":"/blog/2024/04/08/deprecated-backports-and-typing-aliases","source":"@site/blog/2024-04-08-deprecated-backports-and-typing-aliases.md","title":"Deprecate old backports and typing alias","description":"In the past, we've backported features from upstream CPython to use them early and improve user and developers' experience. Home Assistant only supports Python 3.12, so these can be used directly from Python. These backports are now deprecated and will be removed in the future.","date":"2024-04-08T00:00:00.000Z","tags":[],"readingTime":0.595,"hasTruncateMarker":false,"authors":[{"name":"Marc Mueller","url":"https://github.com/cdce8p","key":null,"page":null}],"frontMatter":{"author":"Marc Mueller","authorURL":"https://github.com/cdce8p","title":"Deprecate old backports and typing alias"},"unlisted":false,"prevItem":{"title":"New notify entity platform","permalink":"/blog/2024/04/10/new-notify-entity-platform"},"nextItem":{"title":"Deprecating `async_add_hass_job`","permalink":"/blog/2024/04/07/deprecate_add_hass_job"}},"content":"In the past, we've backported features from upstream CPython to use them early and improve user and developers' experience. Home Assistant only supports Python 3.12, so these can be used directly from Python. These backports are now deprecated and will be removed in the future.\n\n| Deprecated | Replacement | Python version |\n| ---------- | ----------- | -------------- |\n| `homeassistant.backports.enum.StrEnum` | `enum.StrEnum` | >= 3.11 |\n| `homeassistant.backports.functools.cached_property` | `functools.cached_property` | >= 3.8, >= 3.12 (performance improvement) |\n\nIn addition, some typing aliases are also deprecated now.\n\n| Deprecated | Replacement |\n| ---------- | ----------- |\n| `homeassistant.helpers.typing.ContextType` | `homeassistant.core.Context` |\n| `homeassistant.helpers.typing.EventType` | `homeassistant.core.Event` |\n| `homeassistant.helpers.typing.HomeAssistantType` | `homeassistant.core.HomeAssistant` |\n| `homeassistant.helpers.typing.ServiceCallType` | `homeassistant.core.ServiceCall` |"},{"id":"/2024/04/07/deprecate_add_hass_job","metadata":{"permalink":"/blog/2024/04/07/deprecate_add_hass_job","source":"@site/blog/2024-04-07-deprecate_add_hass_job.md","title":"Deprecating `async_add_hass_job`","description":"As part of an effort to improve performance and simplify the core job API, asyncaddhass_job is deprecated and will be removed from Home Assistant in 2025.5.","date":"2024-04-07T00:00:00.000Z","tags":[],"readingTime":0.165,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Deprecating `async_add_hass_job`"},"unlisted":false,"prevItem":{"title":"Deprecate old backports and typing alias","permalink":"/blog/2024/04/08/deprecated-backports-and-typing-aliases"},"nextItem":{"title":"How uv saves Home Assistant 215 compute hours per month","permalink":"/blog/2024/04/03/build-images-with-uv"}},"content":"As part of an effort to improve performance and simplify the core job API, `async_add_hass_job` is deprecated and will be removed from Home Assistant in 2025.5.\n\nCalls should be replaced with `async_run_hass_job` instead."},{"id":"/2024/04/03/build-images-with-uv","metadata":{"permalink":"/blog/2024/04/03/build-images-with-uv","source":"@site/blog/2024-04-03-build-images-with-uv.md","title":"How uv saves Home Assistant 215 compute hours per month","description":"By replacing pip with uv in our production images, our build pipeline (and therefore releasing a new version) is a lot faster.","date":"2024-04-03T00:00:00.000Z","tags":[],"readingTime":1.39,"hasTruncateMarker":false,"authors":[{"name":"Robert Resch","url":"https://github.com/edenhaus","imageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Robert Resch","authorURL":"https://github.com/edenhaus","authorImageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","title":"How uv saves Home Assistant 215 compute hours per month"},"unlisted":false,"prevItem":{"title":"Deprecating `async_add_hass_job`","permalink":"/blog/2024/04/07/deprecate_add_hass_job"},"nextItem":{"title":"Deprecate hass.helpers usage","permalink":"/blog/2024/03/30/deprecate-hass-helpers"}},"content":"By replacing `pip` with `uv` in our production images, our build pipeline (and therefore releasing a new version) is a lot faster.\n`Uv` is an extremely fast Python package installer and resolver written in Rust. It is developed by [Astral](https://astral.sh/) and it's open source. Check it out on [GitHub](https://github.com/astral-sh/uv).\n\nIn the following table, you can see that we can save around 5 hours of execution time on each build.\n\n| Arch      | Pip          | UV       | Savings  |\n|-----------|--------------|----------|----------|\n| aarch64   | 1h 24m 53s   | 5m 18s   | ~1h 20m  |\n| armhf     | 1h 52m 20s   | 6m 2s    | ~1h 46m  |\n| armv7     | 1h 26m 43s   | 5m 28s   | ~1h 21m  |\n| amd64     | 22m 10s      | 3m 20s   | ~19m     |\n| i386      | 17m 37s      | 3m 11s   | ~14m     |\n\nOn average, we run the build pipeline 43 times as we create\n- 31 nightlies (one nightly per day)\n- 7 beta releases\n- 5 stable releases (including patch ones)\n\nIn total, we save around 215 hours per month.\nWith this massive improvement, we can now ship hotfixes even faster, as the pipeline to ship a new version now takes around 20 minutes instead of 2.5 hours.\n\nThe 215 monthly saved execution hours can be used by other jobs and make the CI experience for all developers and our community better.\nBy replacing `pip` with `uv`, we improve our sustainability by using fewer resources to build our images.\n\n\n**A big thank you to Astral for developing this amazing tool.**\nPlease check out their [website](https://astral.sh/) and products as they offer, for example, a \"lightning\" fast linter/formatter for Python too."},{"id":"/2024/03/30/deprecate-hass-helpers","metadata":{"permalink":"/blog/2024/03/30/deprecate-hass-helpers","source":"@site/blog/2024-03-30-deprecate-hass-helpers.md","title":"Deprecate hass.helpers usage","description":"As of Home Assistant 2024.5, we deprecate the use of hass.helpers.","date":"2024-03-30T00:00:00.000Z","tags":[],"readingTime":0.62,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"Deprecate hass.helpers usage"},"unlisted":false,"prevItem":{"title":"How uv saves Home Assistant 215 compute hours per month","permalink":"/blog/2024/04/03/build-images-with-uv"},"nextItem":{"title":"Config Entries can now provide a reconfigure step","permalink":"/blog/2024/03/21/config-entry-reconfigure-step"}},"content":"As of Home Assistant 2024.5, we deprecate the use of `hass.helpers`.\nUsing `hass.helpers` will issue a warning in the logs.\nAuthors of custom integrations are encouraged to update their code \nto prevent any issues before Home Assistant 2024.11.\n\nStarting from Home Assistant 2024.11, `hass.helpers` will be removed and will no longer work.\n\nIntegrations that use `hass.helpers` should be updated to import the functions and classes directly\nfrom the integration package and pass the `hass` object as first parameter.\n\n### New example\n\n```python\nfrom homeassistant.core import HomeAssistant\nfrom homeassistant.helpers.aiohttp_client import async_get_clientsession\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    client = async_get_clientsession(hass)\n```\n\n### Old example\n\n```python\nfrom homeassistant.core import HomeAssistant\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    client = hass.helpers.aiohttp_client.async_get_clientsession()\n```"},{"id":"/2024/03/21/config-entry-reconfigure-step","metadata":{"permalink":"/blog/2024/03/21/config-entry-reconfigure-step","source":"@site/blog/2024-03-21-config-entry-reconfigure-step.md","title":"Config Entries can now provide a reconfigure step","description":"As of Home Assistant Core 2024.4, config entries can now be reconfigured by adding a reconfigure step in their config flows.","date":"2024-03-21T00:00:00.000Z","tags":[],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Config Entries can now provide a reconfigure step"},"unlisted":false,"prevItem":{"title":"Deprecate hass.helpers usage","permalink":"/blog/2024/03/30/deprecate-hass-helpers"},"nextItem":{"title":"New state timestamp State.last_reported","permalink":"/blog/2024/03/20/state_reported_timestamp"}},"content":"As of Home Assistant Core 2024.4, config entries can now be reconfigured by adding a `reconfigure` step in their config flows.\n\nThis is not to replace the optional configuration (`OptionsFlow`) but instead to allow the user to change the setup configuration after a config entry has been created.\n\n### Reconfiguration vs. Reauthentication\n\nThe `reconfigure` step does not replace a `reauth` step and they have different purposes.\n\nReauthentication should be started automatically by the integration in the case of a login/token/etc. is invalidated, so the user has an option to adjust those settings.\n\nReconfiguration is started by the user from the config entry options menu and should be implemented to update config entry data which are not optional for the integration to work. Authentication issues are handled with a re-authentication flow. ([See reauthentication](/docs/config_entries_config_flow_handler#reauthentication)).\n\n### Example\n\nExamples could be changing the latitude and longitude of a `WeatherEntity` when moving between homes or having a mobile home, changing the communication port of a local device, etc.\n\nTo implement the `reconfigure` step, include it in your config flow as:\n\n```python\nimport voluptuous as vol\n\nclass ExampleConfigFlow(ConfigFlow, domain=DOMAIN):\n    \"\"\"Config flow for Example integration.\"\"\"\n\n    async def async_step_reconfigure(self, user_input: dict[str, Any] | None = None):\n        \"\"\"Add reconfigure step to allow to reconfigure a config entry.\"\"\"\n        if user_input is not None:\n            pass  # TODO: process user input\n\n        return self.async_show_form(\n            step_id=\"reconfigure\",\n            data_schema=vol.Schema({vol.Required(\"password\"): str}),\n        )\n```"},{"id":"/2024/03/20/state_reported_timestamp","metadata":{"permalink":"/blog/2024/03/20/state_reported_timestamp","source":"@site/blog/2024-03-20-state_reported_timestamp.md","title":"New state timestamp State.last_reported","description":"The State object is now always updated and an event is always fired when an integration sets the state of an entity, regardless of any change to the state or a state attribute. This is implemented by adding a new timestamp, State.lastreported and a new event statereported.","date":"2024-03-20T00:00:00.000Z","tags":[],"readingTime":1.4,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"New state timestamp State.last_reported"},"unlisted":false,"prevItem":{"title":"Config Entries can now provide a reconfigure step","permalink":"/blog/2024/03/21/config-entry-reconfigure-step"},"nextItem":{"title":"Raising exceptions with translations","permalink":"/blog/2024/03/15/exception-translations"}},"content":"The `State` object is now always updated and an event is always fired when an integration sets the state of an entity, regardless of any change to the state or a state attribute. This is implemented by adding a new timestamp, `State.last_reported` and a new event `state_reported`.\n\nThe `state_reported` event is fired in large volume, and must be used with care to avoid detrimental effects on system load:\n - Event listeners which subscribe to all events are not called when `state_reported` is fired.\n - It's not allowed to listen to `state_reported` events for all entities.\n - When listening to `state_reported`, an `event_filter` must be used to screen out events for other entities.\n - When listening to `state_reported`, the `run_immediately` flag must be set.\n \n### Background\n\nHome Assistant previously discarded state writes where neither the state nor the state attributes were changed, unless the integration set the `force_update` flag. This behavior made it very difficult for integrations to correctly do time series analysis of numerical sensor state. It also meant the user didn't know if an integration is updating a sensor or not.\n\nThe new timestamp and associated event were discussed in architecure discussion [#1062](https://github.com/home-assistant/architecture/discussions/1062).\n\n### Custom integration impact\n\nThe following APIs have breaking changes:\n- The `time_fired` argument for `hass.bus.async_fire` now accepts a `float` timestamp instead of a `datetime` object.\n- The signature of event filters which can be passed to `hass.bus.async_listen` has changed.\n- The `time_fired: datetime | None` argument for `Event()` has been replaced with `time_fired_timestamp: float | None`.\n- A new argument `last_reported: datetime` has been added to `State()` in the middle of the argument list.\n\nFor more details, see [`core PR #113511`](https://github.com/home-assistant/core/pull/113511) and [`core PR #113798`](https://github.com/home-assistant/core/pull/113798)."},{"id":"/2024/03/15/exception-translations","metadata":{"permalink":"/blog/2024/03/15/exception-translations","source":"@site/blog/2024-03-15-exception-translations.md","title":"Raising exceptions with translations","description":"Logging exceptions with translation support","date":"2024-03-15T00:00:00.000Z","tags":[],"readingTime":0.765,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Raising exceptions with translations"},"unlisted":false,"prevItem":{"title":"New state timestamp State.last_reported","permalink":"/blog/2024/03/20/state_reported_timestamp"},"nextItem":{"title":"Deprecating `async_run_job` and `async_add_job`","permalink":"/blog/2024/03/13/deprecate_add_run_job"}},"content":"### Logging exceptions with translation support\n\nTranslation support applies to `HomeAssistantError` and subclasses like `ServiceValidationError`. When a `translation_domain` and `translation_key` is set and the error message is added in `strings.json`, it is no longer needed to add the error message string for the local logging. Home Assistant will automatically fetch the English error message from the translation cache.\n\nWhen raising `HomeAssistantError` or a subclass with translation support we should remove the log message from the argument list to enable it to be fetched from the translation cache.\n\nFor example:\n\n```python\nasync def async_select_index(hass: HomeAssistant, index: int) -> None:\n    \"\"\"Setup the config entry for my device.\"\"\"\n    try:\n        check_index(index)\n    except ValueError as exc:\n        raise ServiceValidationError(\n            translation_domain=DOMAIN,\n            translation_key=\"invalid_index\",\n            translation_placeholders={\n                \"index\": index,\n                \"expected\": expected,\n            },\n        ) from exc\n```\n\nThe error message is placed in `strings.json`:\n\n```json\n{\n    ...\n    \"exceptions\": {\n        \"invalid_index\": {\n            \"message\": \"An invalid index is selected, expected: {expected}, got: {index}\"\n        }\n    }\n}\n```"},{"id":"/2024/03/13/deprecate_add_run_job","metadata":{"permalink":"/blog/2024/03/13/deprecate_add_run_job","source":"@site/blog/2024-03-13-deprecate_add_run_job.md","title":"Deprecating `async_run_job` and `async_add_job`","description":"asyncrunjob and asyncaddjob are deprecated and will be removed in Home Assistant 2025.4. This deprecation does not apply to the sync API add_job method, which is not planned to be removed.","date":"2024-03-13T00:00:00.000Z","tags":[],"readingTime":0.47,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Deprecating `async_run_job` and `async_add_job`"},"unlisted":false,"prevItem":{"title":"Raising exceptions with translations","permalink":"/blog/2024/03/15/exception-translations"},"nextItem":{"title":"Climate entity auxiliary heater is deprecated","permalink":"/blog/2024/03/10/climate-aux-heater-deprecated"}},"content":"`async_run_job` and `async_add_job` are deprecated and will be removed in Home Assistant 2025.4. This deprecation does not apply to the sync API `add_job` method, which is not planned to be removed.\n\nInstead, it's more efficient to use one of the other job methods, as the method of calling the job does not ever have to be worked out:\n\nIf the callable is a coroutine function running from a config entry:\n`entry.async_create_background_task`, `entry.async_create_task`\n\nIf the callable is a coroutine function running from another place:\n`hass.async_create_background_task`, `hass.async_create_task`\n\nIf the callable should run in the executor:\n`hass.async_add_executor_job`"},{"id":"/2024/03/10/climate-aux-heater-deprecated","metadata":{"permalink":"/blog/2024/03/10/climate-aux-heater-deprecated","source":"@site/blog/2024-03-10-climate-aux-heater-deprecated.md","title":"Climate entity auxiliary heater is deprecated","description":"As of Home Assistant Core 2024.4 we have deprecated the auxiliary heater functionality in ClimateEntity.","date":"2024-03-10T00:00:00.000Z","tags":[],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Climate entity auxiliary heater is deprecated"},"unlisted":false,"prevItem":{"title":"Deprecating `async_run_job` and `async_add_job`","permalink":"/blog/2024/03/13/deprecate_add_run_job"},"nextItem":{"title":"Integrations import in the executor to avoid blocking the event loop","permalink":"/blog/2024/03/09/import_executor_default"}},"content":"As of Home Assistant Core 2024.4 we have deprecated the auxiliary heater functionality in `ClimateEntity`.\n\nIntegrations that are currently implementing the `is_aux_heat` property and the `turn_aux_heat_on`/`turn_aux_heat_off` methods need to remove these and alternatively implement other entities to accommodate the necessary functionality such as a `SwitchEntity` or in the case of a read-only property a `BinarySensorEntity`.\n\nYou can read more about this decision [here](https://github.com/home-assistant/architecture/discussions/932)."},{"id":"/2024/03/09/import_executor_default","metadata":{"permalink":"/blog/2024/03/09/import_executor_default","source":"@site/blog/2024-03-09-import_executor_default.md","title":"Integrations import in the executor to avoid blocking the event loop","description":"Starting from Home Assistant 2024.4, all integrations are imported in the executor to avoid blocking the event loop while the code is imported and executed.","date":"2024-03-09T00:00:00.000Z","tags":[],"readingTime":0.5,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Integrations import in the executor to avoid blocking the event loop"},"unlisted":false,"prevItem":{"title":"Climate entity auxiliary heater is deprecated","permalink":"/blog/2024/03/10/climate-aux-heater-deprecated"},"nextItem":{"title":"Support for platform translations in separate files will be removed","permalink":"/blog/2024/03/05/platform_entity_translations_deprecation"}},"content":"Starting from Home Assistant 2024.4, all integrations are imported in the executor to avoid blocking the event loop while the code is imported and executed.\n\nIn the rare event that an integration creates loop-bound objects at import time, this may fail because there is no running loop in the executor.\n\nCustom integrations needing more time to adjust their code to avoid creating such objects can opt-out and continue to have their code imported in the event loop, understanding that system stability will be impacted.\n\nTo opt-out of importing in the executor, an integration can add:\n\n`\"import_executor\": false` to their [`manifest.json`](/docs/creating_integration_manifest)"},{"id":"/2024/03/05/platform_entity_translations_deprecation","metadata":{"permalink":"/blog/2024/03/05/platform_entity_translations_deprecation","source":"@site/blog/2024-03-05-platform_entity_translations_deprecation.md","title":"Support for platform translations in separate files will be removed","description":"The method for integrations to provide translations for states of its entities under other integrations, for example to translate an integration's sensors was changed in November 2022, and support for the old method will be removed in Home Assistant Core 2024.5.0.","date":"2024-03-05T00:00:00.000Z","tags":[],"readingTime":0.675,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Support for platform translations in separate files will be removed"},"unlisted":false,"prevItem":{"title":"Integrations import in the executor to avoid blocking the event loop","permalink":"/blog/2024/03/09/import_executor_default"},"nextItem":{"title":"Introducing device name translations","permalink":"/blog/2024/02/28/device-name-translations"}},"content":"The method for integrations to provide translations for states of its entities under other integrations, for example to translate an integration's sensors was changed in November 2022, and support for the old method will be removed in Home Assistant Core 2024.5.0.\n\nOnce Home Assistant Core 2024.5.0 is released, integrations can no longer use custom device classes together with a `strings.<platform name>.json` file. Instead, entities must set the `translation_key` property on an entity and include that `translation_key` in the integration's `strings.json`.\n\nThe following example `strings.json` is for a Moon domain `sensor` entity with its `translation_key` property set to `phase`:\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"phase\": {\n        \"state\": {\n          \"new_moon\": \"New moon\",\n          \"first_quarter\": \"First quarter\",\n          \"full_moon\": \"Full moon\",\n          \"last_quarter\": \"Last quarter\"\n        }\n      }\n    }\n  }\n}\n```\n\nFor more details, see the [`translation`](/docs/internationalization/core/#state-of-entities) and [`entity`](/docs/core/entity#generic-properties) documentation."},{"id":"/2024/02/28/device-name-translations","metadata":{"permalink":"/blog/2024/02/28/device-name-translations","source":"@site/blog/2024-02-28-device-name-translations.md","title":"Introducing device name translations","description":"It's now possible to provide translations for device names, including support for","date":"2024-02-28T00:00:00.000Z","tags":[],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Introducing device name translations"},"unlisted":false,"prevItem":{"title":"Support for platform translations in separate files will be removed","permalink":"/blog/2024/03/05/platform_entity_translations_deprecation"},"nextItem":{"title":"Deprecate use of @bind_hass and hass.components","permalink":"/blog/2024/02/27/deprecate-bind-hass-and-hass-components"}},"content":"It's now possible to provide translations for device names, including support for\nstatic values to be used as placeholders.\n\nAn example sensor with a translated device name:\n```python\nclass TestEntity(SensorEntity):\n    \"\"\"Example entity.\"\"\"\n    \n    _attr_has_entity_name = True\n    \n    def __init__(self) -> None:\n        \"\"\"Initialize example entity.\"\"\"\n        self._attr_device_info = DeviceInfo(\n            translation_key=\"n_ch_power_strip\",\n            translation_placeholders={\"number_of_sockets\": \"2\"},\n        )\n```\nThe `strings.json` file would look like:\n```json\n{\n  \"device\": {\n    \"n_ch_power_strip\": {\n      \"name\": \"Power strip with {number_of_sockets} sockets\"\n    }\n  }\n}\n```\n\nThe resulting device would be called `Power strip with 2 sockets`.\n\nA warning is logged when a translation placeholder is expected but not provided by the device.\nWhen this happens on a system that is not on a stable version (dev, nightly, or beta), an error will be raised to be able to catch the mistakes quickly.\n\nPlease don't forget to be kind towards your translators, as they need to understand what kind of name or value will be passed in from the placeholder name ❤️."},{"id":"/2024/02/27/deprecate-bind-hass-and-hass-components","metadata":{"permalink":"/blog/2024/02/27/deprecate-bind-hass-and-hass-components","source":"@site/blog/2024-02-27-deprecate-bind-hass-and-hass-components.md","title":"Deprecate use of @bind_hass and hass.components","description":"As of Home Assistant 2024.3, we deprecate the use of the @bind_hass decorator","date":"2024-02-27T00:00:00.000Z","tags":[],"readingTime":1.43,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"Deprecate use of @bind_hass and hass.components"},"unlisted":false,"prevItem":{"title":"Introducing device name translations","permalink":"/blog/2024/02/28/device-name-translations"},"nextItem":{"title":"New single instance only manifest option","permalink":"/blog/2024/02/26/single-instance-only-manifest-option"}},"content":"As of Home Assistant 2024.3, we deprecate the use of the `@bind_hass` decorator \nand thus also the use of `hass.components`.\nUsing `hass.components` will issue a warning in the logs.\nAuthors of custom integrations are encouraged to update their code \nto prevent any issues before Home Assistant 2024.9.\n\nStarting from Home Assistant 2024.9, the `@bind_hass` decorator and \n`hass.components` will be removed and will no longer work.\n\n## Use of `@bind_hass` decorator\n\nIntegrations that use the `@bind_hass` decorator should be updated to remove them and pass the `hass` object as first parameter to the function instead:\n\n### New example\n\n```python\nfrom homeassistant.core import HomeAssistant\nfrom homeassistant.components.persistent_notification import async_create\n\ndef create_notification(hass: HomeAssistant, message: str):\n    \"\"\"Create a notification.\"\"\"\n    async_create(\n        hass,\n        message, \n        title='Important notification'\n    )\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    create_notification(hass, \"You're already using the latest version!\")\n```\n\n### Old example\n\n```python\nfrom homeassistant.core import HomeAssistant\nfrom homeassistant.loader import bind_hass\nfrom homeassistant.components.persistent_notification import async_create\n\n@bind_hass\ndef create_notification(hass: HomeAssistant, message: str):\n    \"\"\"Create a notification.\"\"\"\n    async_create(\n        hass,\n        message, \n        title='Important notification'\n    )\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    create_notification(\"You're already using the latest version!\")\n```\n\n## Use of `hass.components` \n\nIntegrations that use `hass.components` should be updated to import the functions and classes directly\nfrom the integration package and pass the `hass` object as first parameter.\nRemember to include the imported components under `dependencies` in your `manifest.json`.\n\n### New example\n\n```python\nfrom homeassistant.core import HomeAssistant\nfrom homeassistant.components.persistent_notification import async_create\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    async_create(\n        hass, \n        \"You're already using the latest version!\", \n        title='Important notification'\n    )\n```\n\n### Old example\n\n```python\nfrom homeassistant.core import HomeAssistant\n\nasync def async_setup(hass: HomeAssistant, config):\n    \"\"\"Set up the component.\"\"\"\n    hass.components.persistent_notification.async_create(\n        \"You're already using the latest version!\", \n        title='Important notification'\n    )\n```"},{"id":"/2024/02/26/single-instance-only-manifest-option","metadata":{"permalink":"/blog/2024/02/26/single-instance-only-manifest-option","source":"@site/blog/2024-02-26-single-instance-only-manifest-option.md","title":"New single instance only manifest option","description":"In Home Assistant 2024.3, we introduced a new singleconfigentry option for the integration manifest file.","date":"2024-02-26T00:00:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"New single instance only manifest option"},"unlisted":false,"prevItem":{"title":"Deprecate use of @bind_hass and hass.components","permalink":"/blog/2024/02/27/deprecate-bind-hass-and-hass-components"},"nextItem":{"title":"New Climate entity toggle method","permalink":"/blog/2024/02/25/Climate-toggle-service"}},"content":"In Home Assistant 2024.3, we introduced a new `single_config_entry` option for the integration manifest file.\nThis option allows you to set that your integration supports only one config entry.\n\nHome Assistant will take care and prevent the initialization of a config flow if there is already a config entry for the integration.\nThis way you won't have to implement any check in the config flow.\n\nIntegrations that have this option not set in their manifest and do the check in the config flow should replace it with the new option."},{"id":"/2024/02/25/Climate-toggle-service","metadata":{"permalink":"/blog/2024/02/25/Climate-toggle-service","source":"@site/blog/2024-02-25-Climate-toggle-service.md","title":"New Climate entity toggle method","description":"As of Home Assistant Core 2024.3 we have added a new toggle method to ClimateEntity and users can now call climate.toggle in their service calls.","date":"2024-02-25T00:00:00.000Z","tags":[],"readingTime":0.34,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"New Climate entity toggle method"},"unlisted":false,"prevItem":{"title":"New single instance only manifest option","permalink":"/blog/2024/02/26/single-instance-only-manifest-option"},"nextItem":{"title":"Altering config entries","permalink":"/blog/2024/02/12/async_update_entry"}},"content":"As of Home Assistant Core 2024.3 we have added a new `toggle` method to `ClimateEntity` and users can now call `climate.toggle` in their service calls.\n\nIntegrations that support `turn_on` and `turn_off` implicitly also support the `toggle` method.\n\n[Read more about the toggle method in our documentation](/docs/core/entity/climate#toggle)\n\nExample (default implementation):\n\n```python\nasync def async_toggle(self) -> None:\n    \"\"\"Toggle the entity.\"\"\"\n    if self.hvac_mode == HVACMode.OFF:\n        await self.async_turn_on()\n    else:\n        await self.async_turn_off()\n\n```"},{"id":"/2024/02/12/async_update_entry","metadata":{"permalink":"/blog/2024/02/12/async_update_entry","source":"@site/blog/2024-02-12-async_update_entry.md","title":"Altering config entries","description":"Starting from Home Assistant 2024.3, modifications to a ConfigEntry should use hass.configentries.asyncupdate_entry.","date":"2024-02-12T00:00:00.000Z","tags":[],"readingTime":0.5,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Altering config entries"},"unlisted":false,"prevItem":{"title":"New Climate entity toggle method","permalink":"/blog/2024/02/25/Climate-toggle-service"},"nextItem":{"title":"It is now required for lights to set color mode","permalink":"/blog/2024/02/12/light-color-mode-mandatory"}},"content":"Starting from Home Assistant 2024.3, modifications to a `ConfigEntry` should use `hass.config_entries.async_update_entry`.\nDirectly setting attributes on the `ConfigEntry` object is deprecated and will start to fail in version 2024.9 and later.\nThere is no deprecation period for directly setting `unique_id` on the `ConfigEntry` as doing so will corrupt the internal state, and doing so will start to fail immediately.\n\nThe following attributes must now be set via `hass.config_entries.async_update_entry`:\n\n- data\n- minor_version\n- options\n- pref_disable_new_entities\n- pref_disable_polling\n- title\n- unique_id\n- version\n\nTests must ensure that `MockConfigEntry` objects are added to Home Assistant via `entry.add_to_hass(hass)` before calling `hass.config_entries.async_update_entry`."},{"id":"/2024/02/12/light-color-mode-mandatory","metadata":{"permalink":"/blog/2024/02/12/light-color-mode-mandatory","source":"@site/blog/2024-02-12-light-color-mode-mandatory.md","title":"It is now required for lights to set color mode","description":"Change","date":"2024-02-12T00:00:00.000Z","tags":[],"readingTime":0.51,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"It is now required for lights to set color mode"},"unlisted":false,"prevItem":{"title":"Altering config entries","permalink":"/blog/2024/02/12/async_update_entry"},"nextItem":{"title":"Properties changes for ha-state-icon","permalink":"/blog/2024/01/30/ha-state-icon-properties-changes"}},"content":"## Change\n\nLight entities are now required to set the `supported_color_modes` and `color_mode` properties, and a warning will be logged asking users to report an issue if that's not done.\n\nIn addition, a warning will be logged if the light reports an invalid combination of `supported_color_modes` or a `color_mode` other than `ColorMode.UNKNOWN`, which is not included in the light's `supported_color_modes`.\n\nIn the Home Assistant 2025.3 release, the warnings will be removed, and lights that have still not been upgraded to a color mode or that violate the color mode rules will no longer work.\n\nMore details can be found in the [documentation](/docs/core/entity/light#color-modes)."},{"id":"/2024/01/30/ha-state-icon-properties-changes","metadata":{"permalink":"/blog/2024/01/30/ha-state-icon-properties-changes","source":"@site/blog/2024-01-30-ha-state-icon-properties-changes.md","title":"Properties changes for ha-state-icon","description":"In Home Assistant 2024.2, integrations have a new way to provide icons. To support this new feature, ha-state-icon component properties have changed.","date":"2024-01-30T00:00:00.000Z","tags":[],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Paul Bottein","url":"https://github.com/piitaya","key":null,"page":null}],"frontMatter":{"author":"Paul Bottein","authorURL":"https://github.com/piitaya","title":"Properties changes for ha-state-icon"},"unlisted":false,"prevItem":{"title":"It is now required for lights to set color mode","permalink":"/blog/2024/02/12/light-color-mode-mandatory"},"nextItem":{"title":"New entity features in Climate entity","permalink":"/blog/2024/01/24/climate-climateentityfeatures-expanded"}},"content":"In Home Assistant 2024.2, integrations have a new way to provide icons. To support this new feature, `ha-state-icon` component properties have changed.\n\n[Read more about icon translations in our documentation](/docs/core/entity#icons).\n\nIf you are a custom card developer using this component, you must adjust the properties passed to the component to avoid displaying the wrong icons in your custom card.\n\n### Before 2024.2\n\n```html\n<ha-state-icon .state=${stateObj}></ha-state-icon>\n```\n\n### After 2024.2\n\n```html\n<ha-state-icon .hass=${hass} .stateObj=${stateObj}></ha-state-icon>\n```\n\n### Backward compatibility\n\nIf you want to support both old and new version on Home Assistant, you can pass all the properties.\n\n```html\n<ha-state-icon\n  .hass=${hass}\n  .stateObj=${stateObj}\n  .state=${stateObj}\n></ha-state-icon>\n```"},{"id":"/2024/01/24/climate-climateentityfeatures-expanded","metadata":{"permalink":"/blog/2024/01/24/climate-climateentityfeatures-expanded","source":"@site/blog/2024-01-24-climate-climateentityfeatures-expanded.md","title":"New entity features in Climate entity","description":"As of Home Assistant Core 2024.2 we have added two new flags into ClimateEntityFeature: TURNON, TURNOFF.","date":"2024-01-24T00:00:00.000Z","tags":[],"readingTime":0.795,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"New entity features in Climate entity"},"unlisted":false,"prevItem":{"title":"Properties changes for ha-state-icon","permalink":"/blog/2024/01/30/ha-state-icon-properties-changes"},"nextItem":{"title":"Changes to light color mode when lights display an effect","permalink":"/blog/2024/01/23/light-color-mode-changes"}},"content":"As of Home Assistant Core 2024.2 we have added two new flags into `ClimateEntityFeature`: `TURN_ON`, `TURN_OFF`.\n\nIntegrations implementing `turn_on` service call needs to set the `TURN_ON` feature flag.\nIntegrations implementing `turn_off` service call needs to set the `TURN_OFF` feature flag.\n\nThere will be a 10 month deprecation period (2025.1) where `ClimateEntity` will set these on behalf of the integrations implementing the respective methods and from 2025.1 it will make integrations unable to use the respective methods if entity features has not been set accordingly.\n\nImplementing the methods without setting the respective feature flag will create a warning log entry guiding the user to create an issue for the integration.\n\nIntegrations should set the attribute `_enable_turn_on_off_backwards_compatibility` in your `ClimateEntity` subclass instance to `False` once it has been migrated into using or not using the new feature flags.\nThis will stop the automatic setting of the new feature flags during the deprecation period and can be removed once deprecation has ended."},{"id":"/2024/01/23/light-color-mode-changes","metadata":{"permalink":"/blog/2024/01/23/light-color-mode-changes","source":"@site/blog/2024-01-23-light-color-mode-changes.md","title":"Changes to light color mode when lights display an effect","description":"Background","date":"2024-01-23T00:00:00.000Z","tags":[],"readingTime":1.235,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Changes to light color mode when lights display an effect"},"unlisted":false,"prevItem":{"title":"New entity features in Climate entity","permalink":"/blog/2024/01/24/climate-climateentityfeatures-expanded"},"nextItem":{"title":"Enumerating services","permalink":"/blog/2024/01/22/async_services_for_domain"}},"content":"## Background\n\nThe primary reason for introducing light color modes was that a light's state should not be ambiguous. As an example, a light which supports color and white with adjustable color temperature must be in either color mode `hs` (for example) or `color_temp`.\n\nHowever, effects complicate this because when the same light is rendering an effect, none of the `hs_color`, `color_temp`, or `brightness` state attributes may be meaningful.\n\n## Changes\n\n### Requirements on `color_mode` are less strict when a light is rendering an effect\n\nMore restrictive color modes than what's otherwise supported by the light are allowed when an effect is active:\n- A light which supports colors is allowed to indicate color modes `on_off` and `brightness` when controlled by an effect\n- A light which supports brightness is allowed to indicate color mode `on_off` when controlled by an effect.\n\nFor example, a light which has its supported_color_modes set to `{\"hs\", \"color_temp\"}` is allowed to set its `color_mode` to `on_off` when rendering an effect which can't be adjusted and to `brightness` when rendering an effect which allows brightness to be controlled.\n\n### A special effect `EFFECT_OFF` which means no effect / turn off effect has been added\n\nThere was previously no standard way for a light which supports effects to show that no effect is active.\nThis has been solved by adding an the pre-defined effect `EFFECT_OFF` to indicate no effect is active.\n\nMore details can be found in the [documentation](/docs/core/entity/light#color-modes) and in [architecture discussion #960](https://github.com/home-assistant/architecture/discussions/960)."},{"id":"/2024/01/22/async_services_for_domain","metadata":{"permalink":"/blog/2024/01/22/async_services_for_domain","source":"@site/blog/2024-01-22-async_services_for_domain.md","title":"Enumerating services","description":"In Home Assistant 2024.2, we will introduce hass.services.asyncservicesfor_domain(), which is a new way to enumerate services by domain, allowing integrations to inspect which services are available without having to obtain all the services on the system. We found that most integrations are only interested in the services they provide, and it was expensive to enumerate all the services in the system when an integration was only interested in their services.","date":"2024-01-22T00:00:00.000Z","tags":[],"readingTime":0.435,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Enumerating services"},"unlisted":false,"prevItem":{"title":"Changes to light color mode when lights display an effect","permalink":"/blog/2024/01/23/light-color-mode-changes"},"nextItem":{"title":"Introducing entity translation placeholders","permalink":"/blog/2024/01/19/entity-translations-placeholders"}},"content":"In Home Assistant 2024.2, we will introduce `hass.services.async_services_for_domain()`, which is a new way to enumerate services by domain, allowing integrations to inspect which services are available without having to obtain all the services on the system. We found that most integrations are only interested in the services they provide, and it was expensive to enumerate all the services in the system when an integration was only interested in their services.\n\nIntegrations that call `hass.services.async_services()[DOMAIN]` to get services for a specific domain should replace the call with `hass.services.async_services_for_domain(DOMAIN)`."},{"id":"/2024/01/19/entity-translations-placeholders","metadata":{"permalink":"/blog/2024/01/19/entity-translations-placeholders","source":"@site/blog/2024-01-19-entity-translations-placeholders.md","title":"Introducing entity translation placeholders","description":"It's now possible to provide static values to be used in an entity translation using placeholders.","date":"2024-01-19T00:00:00.000Z","tags":[],"readingTime":0.845,"hasTruncateMarker":false,"authors":[{"name":"Joost Lekkerkerker","url":"https://github.com/joostlek","imageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","key":null,"page":null}],"frontMatter":{"author":"Joost Lekkerkerker","authorURL":"https://github.com/joostlek","authorImageURL":"https://avatars.githubusercontent.com/u/7083755?v=4","title":"Introducing entity translation placeholders"},"unlisted":false,"prevItem":{"title":"Enumerating services","permalink":"/blog/2024/01/22/async_services_for_domain"},"nextItem":{"title":"Icon translations","permalink":"/blog/2024/01/19/icon-translations"}},"content":"It's now possible to provide static values to be used in an entity translation using placeholders.\nYou can pass placeholders via the `translation_placeholders` property of an entity.\n\nAn example sensor:\n```python\nclass TestEntity(SensorEntity):\n    \"\"\"Example entity.\"\"\"\n    \n    _attr_has_entity_name = True\n    _attr_translation_key = \"temperature\"\n    \n    def __init__(self) -> None:\n        \"\"\"Initialize example entity.\"\"\"\n        self._attr_translation_placeholders = {\"channel_id\": \"2\"}\n        self._attr_device_info = DeviceInfo(\n            name=\"Example device\"\n        )\n```\nThe `strings.json` file would look like:\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"temperature\": {\n        \"name\": \"Temperature channel {channel_id}\"\n      }\n    }\n  }\n}\n```\n\nThe resulting entity would be called `Example device Temperature channel 2`.\n\nA warning is logged once when a translation placeholder is expected but not provided by the entity.\nWhen this happens on a system that is not on a stable version (dev, nightly, or beta), an error will be raised to be able to catch the mistakes quickly.\n\nPlease don't forget to be kind towards your translators, as they need to understand what kind of name or value will be passed in from the placeholder name ❤️."},{"id":"/2024/01/19/icon-translations","metadata":{"permalink":"/blog/2024/01/19/icon-translations","source":"@site/blog/2024-01-19-icon-translations.md","title":"Icon translations","description":"In Home Assistant 2024.2, we will introduce a new way to provide icons for integrations: Icon translations.","date":"2024-01-19T00:00:00.000Z","tags":[],"readingTime":1.23,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Icon translations"},"unlisted":false,"prevItem":{"title":"Introducing entity translation placeholders","permalink":"/blog/2024/01/19/entity-translations-placeholders"},"nextItem":{"title":"Deprecate invalid use of sensor unit of measurement and state class","permalink":"/blog/2024/01/17/deprecate-invalid-sensor-uom-state-class-use"}},"content":"In Home Assistant 2024.2, we will introduce a new way to provide icons for integrations: Icon translations.\n\nIcon translations work similarly to our regular translations for entities, which can translate the state of an entity or entity attribute state into any language. Icon translations work in a similar way, but instead of translating the state into the end-user language, it translates the state into an icon.\n\nEach integration can now provide an `icons.json` file, containing a mapping of states to icons. Here is an example of a Moon `sensor` entity that provides different icons for each state:\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"phase\": {\n        \"default\": \"mdi:moon\",\n        \"state\": {\n          \"new_moon\": \"mdi:moon-new\",\n          \"first_quarter\": \"mdi:moon-first-quarter\",\n          \"full_moon\": \"mdi:moon-full\",\n          \"last_quarter\": \"mdi:moon-last-quarter\"\n        }\n      }\n    }\n  }\n}\n```\n\nIcon translations also support translating entity attribute states.\n\n[Read more about icon translations in our documentation](/docs/core/entity#icons).\n\n## Service icons\n\nThis change is backward-compatible. The existing `icon` property of entities will continue to work as it did before. However, we recommend the use of the icon translation over the `icon` property.\n\nAdditionally, services provided by integrations now also support icons and can be provided in the same icon translations file. These icons are used in the Home Assistant UI when displaying the service in places like the automation and script editors. The following example shows how to provide icons for the `light.turn_on` and `light.turn_off` services:\n\n```json\n{\n  \"services\": {\n    \"turn_on\": \"mdi:lightbulb-on\",\n    \"turn_off\": \"mdi:lightbulb-off\"\n  }\n}\n```\n\n[Read more about service icons in our documentation](/docs/dev_101_services#icons)."},{"id":"/2024/01/17/deprecate-invalid-sensor-uom-state-class-use","metadata":{"permalink":"/blog/2024/01/17/deprecate-invalid-sensor-uom-state-class-use","source":"@site/blog/2024-01-17-deprecate-invalid-sensor-uom-state-class-use.md","title":"Deprecate invalid use of sensor unit of measurement and state class","description":"Since Home Assistant Core 2022.12, a warning is issued in the logs if a sensor entity that has a device class","date":"2024-01-17T00:00:00.000Z","tags":[],"readingTime":0.51,"hasTruncateMarker":false,"authors":[{"name":"Jan-Philipp Benecke","url":"https://github.com/jpbede","imageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan-Philipp Benecke","authorURL":"https://github.com/jpbede","authorImageURL":"https://avatars.githubusercontent.com/u/3989428?s=96&v=4","title":"Deprecate invalid use of sensor unit of measurement and state class"},"unlisted":false,"prevItem":{"title":"Icon translations","permalink":"/blog/2024/01/19/icon-translations"},"nextItem":{"title":"Changes to FlowManager.async_show_progress","permalink":"/blog/2024/01/11/async-show-progress-changes"}},"content":"Since Home Assistant Core 2022.12, a warning is issued in the logs if a sensor entity that has a device class \nuses unit of measurement and state class incorrectly, taking their device class into account.\n\nAn invalid use would be a sensor entity that has a device class of `SensorDeviceClass.TEMPERATURE` but uses \nthe unit of measurement `%` instead of `°C` or `°F`; or the state class `SensorStateClass.TOTAL` \ninstead of `SensorStateClass.MEASUREMENT`.\n\nThere will be a six-month deprecation period to ensure all custom integration authors have time to adjust.\nAs of Home Assistant Core 2024.8, the warning will then be replaced by an exception."},{"id":"/2024/01/11/async-show-progress-changes","metadata":{"permalink":"/blog/2024/01/11/async-show-progress-changes","source":"@site/blog/2024-01-11-async-show-progress-changes.md","title":"Changes to FlowManager.async_show_progress","description":"FlowHandler.asyncshowprogress has been updated:","date":"2024-01-11T00:00:00.000Z","tags":[],"readingTime":0.635,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Changes to FlowManager.async_show_progress"},"unlisted":false,"prevItem":{"title":"Deprecate invalid use of sensor unit of measurement and state class","permalink":"/blog/2024/01/17/deprecate-invalid-sensor-uom-state-class-use"},"nextItem":{"title":"Deprecating all magic numbers for supported features","permalink":"/blog/2023/12/28/support-feature-magic-numbers-deprecation"}},"content":"`FlowHandler.async_show_progress` has been updated:\n- The `step_id` parameter is deprecated and will be removed in Home Assistant core release 2024.8\n- A new argument `progress_task` has been added, which will be mandatory in Home Assistant core release 2024.8\n\nIf `progress_task` is passed, `FlowManager` will:\n- Send an event to fronted once the task has finished\n- Cancel the `progress_task` if the user closes the config flow dialog before the task is done\n\nThis means derived classes are no longer responsible for interaction between the progress task state and the UI.\n\n`FlowHandler.async_show_progress` will log a warning if it's called without a `progress_task`. In Home Assistant core release 2024.8, the call will instead fail.\n\nMore details can be found in the [documentation](/docs/data_entry_flow_index/#show-progress--show-progress-done) and in [core PR #107668](https://github.com/home-assistant/core/pull/107668) and [\"107802](https://github.com/home-assistant/core/pull/107802)."},{"id":"/2023/12/28/support-feature-magic-numbers-deprecation","metadata":{"permalink":"/blog/2023/12/28/support-feature-magic-numbers-deprecation","source":"@site/blog/2023-12-28-support-feature-magic-numbers-deprecation.md","title":"Deprecating all magic numbers for supported features","description":"As of Home Assistant Core 2024.1, all usage of magic numbers for supported features is deprecated,","date":"2023-12-28T00:00:00.000Z","tags":[],"readingTime":0.84,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Deprecating all magic numbers for supported features"},"unlisted":false,"prevItem":{"title":"Changes to FlowManager.async_show_progress","permalink":"/blog/2024/01/11/async-show-progress-changes"},"nextItem":{"title":"Deprecated constants create a log entry","permalink":"/blog/2023/12/19/constant-deprecation"}},"content":"As of Home Assistant Core 2024.1, all usage of magic numbers for supported features is deprecated,\nand each entity platform has provided an `EntityFeature` enum to replace them.\n\nThere will be a one-year deprecation period, and the magic numbers will stop working in 2025.1 to ensure all custom integration authors have time to adjust.\n\nThis applies to, the following platforms:\n\n- **Alarm Control Panel**\n\n  Use the new [`AlarmControlPanelEntityFeature`](/docs/core/entity/alarm-control-panel#supported-features) enum instead.\n\n- **Camera**\n\n  Use the new [`CameraEntityFeature`](/docs/core/entity/camera#supported-features) enum instead.\n\n- **Cover**\n\n  Use the new [`CoverEntityFeature`](/docs/core/entity/cover#supported-features) enum instead.\n\n- **Climate**\n\n  Use the new [`ClimateEntityFeature`](/docs/core/entity/climate#supported-features) enum instead.\n\n- **Humidifier**\n\n  Use the new [`HumidifierEntityFeature`](/docs/core/entity/humidifier#supported-features) enum instead.\n\n- **Fan**\n\n  Use the new [`FanEntityFeature`](/docs/core/entity/fan#supported-features) enum instead.\n\n- **Light**\n\n  Use the new [`LightEntityFeature`](/docs/core/entity/light#supported-features) enum instead.\n\n- **Lock**\n\n  Use the new [`LockEntityFeature`](/docs/core/entity/lock#supported-features) enum instead.\n\n- **Media Player**\n\n  Use the new [`MediaPlayerEntityFeature`](/docs/core/entity/media-player#supported-features) enum instead.\n\n- **Remote**\n\n  Use the new [`RemoteEntityFeature`](/docs/core/entity/remote#supported-features) enum instead.\n\n- **Siren**\n\n  Use the new [`SirenEntityFeature`](/docs/core/entity/siren#supported-features) enum instead.\n\n- **Vacuum**\n\n  Use the new [`VacuumEntityFeature`](/docs/core/entity/vacuum#supported-features) enum instead.\n\n- **Water Heater**\n\n  Use the new [`WaterHeaterEntityFeature`](/docs/core/entity/water-heater#supported-features) enum instead."},{"id":"/2023/12/19/constant-deprecation","metadata":{"permalink":"/blog/2023/12/19/constant-deprecation","source":"@site/blog/2023-12-19-constant-deprecation.md","title":"Deprecated constants create a log entry","description":"In recent years many constants have been replaced by Enums or other values by adding a code comment pointing to the successor.","date":"2023-12-19T00:00:00.000Z","tags":[],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Robert Resch","url":"https://github.com/edenhaus","imageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Robert Resch","authorURL":"https://github.com/edenhaus","authorImageURL":"https://avatars.githubusercontent.com/u/26537646?s=96&v=4","title":"Deprecated constants create a log entry"},"unlisted":false,"prevItem":{"title":"Deprecating all magic numbers for supported features","permalink":"/blog/2023/12/28/support-feature-magic-numbers-deprecation"},"nextItem":{"title":"Config entry now supports minor versions","permalink":"/blog/2023/12/18/config-entry-minor-version"}},"content":"In recent years many constants have been replaced by Enums or other values by adding a code comment pointing to the successor.\nUsing deprecated constants will now create a warning log entry containing the used integration, the replacement, and the version where the constant will be removed from core.\nThere will be a one-year deprecation period to ensure all custom integration authors have time to adjust.\n\nMost constants should already have been replaced, as we created several blog posts in the past about their deprecation. Some are listed below:\n- [Deprecating all SUPPORT_* constants](2022-04-02-support-constants-deprecation.md)\n- [Constant deprecations for 2022.5](2022-05-03-constants-deprecations.md)\n- [AutomationActionType deprecation for 2022.9](2022-08-15-automation-action-type-deprecation.md)\n- [Device tracker deprecations for 2022.9](2022-07-29-device-tracker_source-type-deprecation.md)\n- [Deprecating media player constants](2022-09-06-media-player-repeat-mode-deprecation.md)\n- [Add new precipitation intensity units](2022-10-25-new-precipitation-intensity-units.md)\n- [Introducing new unit enumerators](2022-10-26-new-unit-enumerators.md)\n- [Add  more unit enumerators](2022-11-28-more-unit-enumerators.md)\n- [Add  more unit enumerators](2022-12-05-more-unit-enumerators.md)\n\nMore details can be found in [core PR #105736](https://github.com/home-assistant/core/pull/105736) or by checking the usage of the function [`check_if_deprecated_constant`](https://github.com/home-assistant/core/blob/dev/homeassistant/helpers/deprecation.py#L240) in the deprecation helper."},{"id":"/2023/12/18/config-entry-minor-version","metadata":{"permalink":"/blog/2023/12/18/config-entry-minor-version","source":"@site/blog/2023-12-18-config-entry-minor-version.md","title":"Config entry now supports minor versions","description":"Config entry now supports minor versions.","date":"2023-12-18T00:00:00.000Z","tags":[],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Config entry now supports minor versions"},"unlisted":false,"prevItem":{"title":"Deprecated constants create a log entry","permalink":"/blog/2023/12/19/constant-deprecation"},"nextItem":{"title":"Changes to EntityDescription data classes","permalink":"/blog/2023/12/11/entity-description-changes"}},"content":"Config entry now supports minor versions.\n\nIf minor versions differ, but major versions are the same, the integration setup will be allowed to continue even if the integration does not implement `async_migrate_entry`. This means a minor version bump is backwards compatible, unlike a major version bump which causes the integration to fail setup if the user downgrades HA Core without restoring configuration from backup.\n\n### Background\n\nWe have been very conservative with versioning config entry data because it breaks downgrading to an older version of Home Assistant Core. This means in most cases, we don't version, and the integrations instead do a kind of soft upgrade where they may, for example, do `dict.get` on config entry data that was not in an initial version, transform the data during setup etc.\n\nBy introducing minor versions similar to that already offered by the storage helper, this pattern is no longer recommended.\nA bump of the minor version should be done instead whenever the newly added, or otherwise changed, data does not break older versions.\n\nMore details can be found in the [documentation on config entry migration](/docs/config_entries_config_flow_handler#config-entry-migration) and in [core PR #105749](https://github.com/home-assistant/core/pull/105479)."},{"id":"/2023/12/11/entity-description-changes","metadata":{"permalink":"/blog/2023/12/11/entity-description-changes","source":"@site/blog/2023-12-11-entity-description-changes.md","title":"Changes to EntityDescription data classes","description":"The EntityDescription classes have changed; derived dataclasses should now set frozen=True and kw_only=True.","date":"2023-12-11T00:00:00.000Z","tags":[],"readingTime":0.615,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Changes to EntityDescription data classes"},"unlisted":false,"prevItem":{"title":"Config entry now supports minor versions","permalink":"/blog/2023/12/18/config-entry-minor-version"},"nextItem":{"title":"New scaling utils and import changes","permalink":"/blog/2023/12/05/scaling-utils"}},"content":"The `EntityDescription` classes have changed; derived `dataclasses` should now set `frozen=True` and `kw_only=True`.\n\nSetting `frozen` to `True` makes the `EntityDescription` instances immutable, which means they cannot be accidentally updated after creation.\nSetting `kw_only` to `True` ensures the order of fields can be changed in the base class without breaking users.\n\nDuring a deprecation period, which will end with HA Core 2025.1, it will still be possible to derive `dataclasses` not setting `frozen=True` or `kw_only=True`, but this will be logged, and the user will be asked to create an issue with the custom integration.\n\nOnce HA Core 2025.1 is released, it will no longer be possible to derive `dataclasses` without setting `frozen=True` or `kw_only=True`.\n\nMore details can be found in the [core PR #105211](https://github.com/home-assistant/core/pull/105211)."},{"id":"/2023/12/05/scaling-utils","metadata":{"permalink":"/blog/2023/12/05/scaling-utils","source":"@site/blog/2023-12-05-scaling-utils.md","title":"New scaling utils and import changes","description":"New utils for scaling brightness","date":"2023-12-05T00:00:00.000Z","tags":[],"readingTime":2.025,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"New scaling utils and import changes"},"unlisted":false,"prevItem":{"title":"Changes to EntityDescription data classes","permalink":"/blog/2023/12/11/entity-description-changes"},"nextItem":{"title":"Exception handling during service calls and translation support","permalink":"/blog/2023/11/30/service-exceptions-and-translations"}},"content":"## New utils for scaling brightness\n\nMultiple integrations have implemented there own scaling algorithm to scale brightness. New utils are introduced now to simplify the implementation of brightness scaling in `homeassistant.util.color`:\n\n```python\ndef brightness_to_value(low_high_range: tuple[float, float], brightness: int) -> float:\n    \"\"\"Given a brightness_scale convert a brightness to a single value.\n\n    Do not include 0 if the light is off for value 0.\n\n    Given a brightness low_high_range of (1,100) this function\n    will return:\n\n    255: 100.0\n    127: ~49.8039\n    10: ~3.9216\n    \"\"\"\n    ...\n```\n\nIf you'd rather like to scale brightness to an integer range you can also use `scale_ranged_value_to_int_range`, described [here](#background).\n\n```python\ndef value_to_brightness(low_high_range: tuple[float, float], value: float) -> int:\n    \"\"\"Given a brightness_scale convert a single value to a brightness.\n\n    Do not include 0 if the light is off for value 0.\n\n    Given a brightness low_high_range of (1,100) this function\n    will return:\n\n    100: 255\n    50: 127\n    4: 10\n\n    The value will be clamped between 1..255 to ensure valid value.\n    \"\"\"\n    ...\n```\n\nThis also ensures a valid brightness value is returned.\n\n### Background\n\nTo scale fan speed percentage we already have some utils `homeassistant.utils.percentage`:\n\n```python\ndef ranged_value_to_percentage(\n    low_high_range: tuple[float, float], value: float\n) -> int:\n    ...\n```\n\nand\n\n```python\ndef percentage_to_ranged_value(\n    low_high_range: tuple[float, float], percentage: int\n) -> float:\n    ...\n```\n\nThese percentage utils will now use new generic scaling utils in `homeassistant.utils.scaling`:\n\n`scale_ranged_value_to_int_range` and `scale_to_ranged_value`\n\n```python\ndef scale_ranged_value_to_int_range(\n    source_low_high_range: tuple[float, float],\n    target_low_high_range: tuple[float, float],\n    value: float,\n) -> int:\n    \"\"\"Given a range of low and high values convert a single value to another range.\n\n    Given a source low value of 1 and a high value of 255 and\n    a target range from 1 to 100 this function\n    will return:\n\n    (1,255), 255: 100\n    (1,255), 127: 50\n    (1,255), 10: 4\n    \"\"\"\n    ...\n```\n\nand\n\n```python\ndef scale_to_ranged_value(\n    source_low_high_range: tuple[float, float],\n    target_low_high_range: tuple[float, float],\n    value: int,\n) -> float:\n    \"\"\"Given a range of low and high values convert a single value to another range.\n\n    Do not include 0 in a range if 0 means off,\n    e.g. for brightness or fan speed.\n\n    Given a source low value of 1 and a high value of 255 and\n    a target range from 1 to 100 this function\n    will return:\n\n    (1,255), 255: 100\n    (1,255), 127: ~49.8039\n    (1,255), 10: ~3.9216\n    \"\"\"\n    ...\n```\n\n## Utils `int_states_in_range` and `states_in_range` are moved\n\nThese utils are now under `homeassistant.util.scaling`. If these are used in your custom integration, make sure you update the import to the new module."},{"id":"/2023/11/30/service-exceptions-and-translations","metadata":{"permalink":"/blog/2023/11/30/service-exceptions-and-translations","source":"@site/blog/2023-11-30-service-exceptions-and-translations.md","title":"Exception handling during service calls and translation support","description":"Exception handling during service calls","date":"2023-11-30T00:00:00.000Z","tags":[],"readingTime":1.375,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Exception handling during service calls and translation support"},"unlisted":false,"prevItem":{"title":"New scaling utils and import changes","permalink":"/blog/2023/12/05/scaling-utils"},"nextItem":{"title":"Config processing and error handling","permalink":"/blog/2023/11/27/config-validation-and-error-handling"}},"content":"## Exception handling during service calls\n\nService calls which raise exceptions have until now logged stack traces. Service calls that fail due to incorrect usage, for example invalid input, don't need a stack trace and would benefit from a helpful error message in the user's own language.\n\nTo be able to suppress the stack trace in these cases, the new exception type `ServiceValidationError`, which is derived from `HomeAssistantError`, has been introduced. `ServiceValidationError` should now be raised instead of `ValueError` when the service fails because it's used incorrectly. \n\nIf the service is used correctly but still fails, `HomeAssistantError`, or a subclass of `HomeAssistantError` other than `ServiceValidationError`, should still be raised.\n\nWhen a service raises `ServiceValidationError`, the error message will show in the UI, and in the logs, but the stack trace is logged at debug level. For other exceptions that are raised from a service call (including  `HomeAssistantError`) nothing changes and a full stack trace is still printed at exception severity.\n\nIntegrations should be updated and raise `ServiceValidationError` instead of `ValueError` when the the service fails due to incorrect usage, and `HomeAssistantError` when it fails for other expected errors, for example a network error. [Read more](/docs/core/platform/raising_exceptions).\n\n## Translation support for Exceptions\n\nThe `HomeAssistantError` exception and its subclasses, including `ServiceValidationError`, now accept a translation key to allow localization. [Read more](/docs/internationalization/core/#exceptions). The translation key will be used in cases where the frontend receives information about the exception. The English error message from the translation cache will also be used to log a message to the console if no custom error message is passed to the exception as argument.\n\n### Background\n\n- Background [discussion](https://github.com/home-assistant/architecture/discussions/992).\n- Implementation [Core PR #102592](https://github.com/home-assistant/core/pull/102592)."},{"id":"/2023/11/27/config-validation-and-error-handling","metadata":{"permalink":"/blog/2023/11/27/config-validation-and-error-handling","source":"@site/blog/2023-11-27-config-validation-and-error-handling.md","title":"Config processing and error handling","description":"Changes in component config processing and error handling","date":"2023-11-27T00:00:00.000Z","tags":[],"readingTime":1.21,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://github.com/jbouwh","imageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://github.com/jbouwh","authorImageURL":"https://avatars.githubusercontent.com/u/7188918?s=96&v=4","title":"Config processing and error handling"},"unlisted":false,"prevItem":{"title":"Exception handling during service calls and translation support","permalink":"/blog/2023/11/30/service-exceptions-and-translations"},"nextItem":{"title":"Public Addon Config","permalink":"/blog/2023/11/06/public-addon-config"}},"content":"## Changes in component config processing and error handling\n\nThe way component YAML configuration is processed has been changed. Now, it is possible to raise if an error occurs. Some custom integrations might break if they are using `config.async_process_component_config`.\nInstead, they can use `config.async_process_component_and_handle_errors` now. This new method supports raising when an error occurs during config processing.\nFrom now on, failures will no longer be notified as a persistent message, so integrations need to implement error handling to notify users in case of a failure. Notifications are still added during setup in case of a config issue.\n\n```python\nasync def async_process_component_and_handle_errors(\n    hass: HomeAssistant,\n    config: ConfigType,\n    integration: Integration,\n    raise_on_failure: bool = False,\n) -> ConfigType | None:\n...\n```\n\nDuring a reload integrations can use the  `helpers.reload.async_integration_yaml_config`. This helper now also has the ability to raise in case of a failure.\n\n```python\nasync def async_integration_yaml_config(\n    hass: HomeAssistant, integration_name: str, *, raise_on_failure: bool = False\n) -> ConfigType | None:\n...\n```\n\n## Translation support for Exceptions on config validation\n\nA new `ConfigValidationError` exception class is introduced. It will be raised in case an error occurs during config error handling and `raise_on_failure` is set to `True`. It can be re-raised to a `ServiceValidationError` in case this error is raised during the execution of a service call and a stack trace is not warranted. Translation keys are added to allow localization of the error messages.\n\n### Background\n\n- Background [discussion](https://github.com/home-assistant/architecture/discussions/992).\n- Implementation [Core PR #102410](https://github.com/home-assistant/core/pull/102410)."},{"id":"/2023/11/06/public-addon-config","metadata":{"permalink":"/blog/2023/11/06/public-addon-config","source":"@site/blog/2023-11-06-public-addon-config.md","title":"Public Addon Config","description":"Add-ons can now have a public folder for config or data files, which users can see","date":"2023-11-06T00:00:00.000Z","tags":[],"readingTime":1.955,"hasTruncateMarker":false,"authors":[{"name":"Mike Degatano","url":"https://github.com/mdegat01","key":null,"page":null}],"frontMatter":{"author":"Mike Degatano","authorURL":"https://github.com/mdegat01","title":"Public Addon Config"},"unlisted":false,"prevItem":{"title":"Config processing and error handling","permalink":"/blog/2023/11/27/config-validation-and-error-handling"},"nextItem":{"title":"Country selector","permalink":"/blog/2023/10/12/country_selector"}},"content":"Add-ons can now have a public folder for config or data files, which users can see\nand modify, but it is still backed up with the add-on.\n\nMany add-ons ask users to provide files as part of the addon configuration. Or generate\nfiles that they want users to be able to see and potentially modify. They typically\nhandle this by including `config` and/or `share` in the list of folders to map.\n\nThe problem with this is twofold:\n\n1. Nothing in `config` or `share` is backed up with the add-on. So, backups of that add-on do not include all the necessary files to run it after restore.\n2. Add-ons that map `config` have far more access than they should since `config` includes all secrets and credentials used in your Home Assistant integrations.\n\nThere is now a better solution for add-on developers. Add-ons can include `addon_config`\nin the list of folders to map. Then, the supervisor will create a folder for that add-on\nat `/addon_configs/<your addon slug>` and map that to `/config` within the add-on\ncontainer. If your addon needs to be able to create and modify files in this folder\nin addition to collecting files from users, use `addon_config:rw` instead.\n\nTo read more about this feature and some of the use cases, see [Add-on advanced options](/docs/add-ons/configuration#add-on-advanced-options).\n\n## Backwards compatibility with `/config`\n\nYou may notice that the new public config folder is mapped to `/config`. Which is\npreviously where Home Assistant's config folder was mapped if you added `config`\nto the `map` field.\n\nThis option is intended to replace the need for add-ons to map Home Assistant's\nconfig into their container. As such, an add-on cannot include both `config` and\n`addon_config` in the `map` field.\n\nGoing forward, if you do need to make Home Assistant's config available to your\nadd-on, you should list `homeassistant_config` as a folder in the `map` field. Then\nHome Assistant's config folder will be mapped to `/homeassistant` within the container.\n\n## New `addon_configs` folder\n\nSome add-ons need access to all these add-on-specific config folders. For example:\n\n1. Samba\n2. SSH\n3. Studio Code Server\n\nEssentially, these add-ons provide alternative means of editing the configuration\nfiles of Home Assistant and its add-ons. Add-ons like these should add `all_addon_configs:rw`\nto the list of folders in the map field. This will map the entire addon configs\nfolder within the container at `/addon_configs`."},{"id":"/2023/10/12/country_selector","metadata":{"permalink":"/blog/2023/10/12/country_selector","source":"@site/blog/2023-10-12-country_selector.md","title":"Country selector","description":"Selectors has been expanded and now also includes a CountrySelector.","date":"2023-10-12T00:00:00.000Z","tags":[],"readingTime":0.215,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Country selector"},"unlisted":false,"prevItem":{"title":"Public Addon Config","permalink":"/blog/2023/11/06/public-addon-config"},"nextItem":{"title":"Removal of deprecated unit conversion utilities","permalink":"/blog/2023/10/03/conversion-functions-cleanup"}},"content":"[Selectors](https://www.home-assistant.io/docs/blueprint/selectors/) has been expanded and now also includes a `CountrySelector`.\n\nUsing this in [config flows](/docs/data_entry_flow_index#show-form) will allow frontend to automatically translate the country codes into the proper country names.\n\nExample:\n\n```python\nvol.Schema(\n    {\n        vol.Optional(CONF_COUNTRY): CountrySelector(\n            CountrySelectorConfig(\n                countries=[\"DE\", \"US\"],\n            )\n        ),\n    }\n)\n```"},{"id":"/2023/10/03/conversion-functions-cleanup","metadata":{"permalink":"/blog/2023/10/03/conversion-functions-cleanup","source":"@site/blog/2023-10-03-conversion-functions-cleanup.md","title":"Removal of deprecated unit conversion utilities","description":"The following utilities were deprecated in Home Assistant 2022.10) and have now been removed as of 2023.11:","date":"2023-10-03T00:00:00.000Z","tags":[],"readingTime":0.415,"hasTruncateMarker":false,"authors":[{"name":"davet2001","url":"https://github.com/davet2001","key":null,"page":null}],"frontMatter":{"author":"davet2001","authorURL":"https://github.com/davet2001","title":"Removal of deprecated unit conversion utilities"},"unlisted":false,"prevItem":{"title":"Country selector","permalink":"/blog/2023/10/12/country_selector"},"nextItem":{"title":"Home Assistant is participating in Hacktoberfest 2023!","permalink":"/blog/2023/10/01/hacktoberfest-2023"}},"content":"The following utilities were [deprecated in Home Assistant 2022.10](/blog/2022/09/28/deprecate-conversion-utilities)) and have now been removed as of 2023.11:\n\n  - `homeassistant/util/distance`\n  - `homeassistant/util/pressure`\n  - `homeassistant/util/speed`\n  - `homeassistant/util/temperature`\n  - `homeassistant/util/volume`\n\nPlease use the corresponding static classes from `homeassistant/util/unit_conversion`:\n\n  - `DistanceConverter`\n  - `PressureConverter`\n  - `SpeedConverter`\n  - `TemperatureConverter`\n  - `VolumeConverter`\n\nThe deprecated functions were already unused within the built-in Home Assistant integrations, and community integrations using them should have seen warnings for the past 12 months. Attempting to import the original utilities will now result in an error."},{"id":"/2023/10/01/hacktoberfest-2023","metadata":{"permalink":"/blog/2023/10/01/hacktoberfest-2023","source":"@site/blog/2023-10-01-hacktoberfest-2023.md","title":"Home Assistant is participating in Hacktoberfest 2023!","description":"📢 Exciting news for Hacktoberfest 2023 participants! We are participating! 🎉","date":"2023-10-01T00:00:00.000Z","tags":[],"readingTime":1.51,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Home Assistant is participating in Hacktoberfest 2023!"},"unlisted":false,"prevItem":{"title":"Removal of deprecated unit conversion utilities","permalink":"/blog/2023/10/03/conversion-functions-cleanup"},"nextItem":{"title":"New way of excluding state attributes from recording","permalink":"/blog/2023/09/20/excluding-state-attributes-from-recording"}},"content":"📢 Exciting news for Hacktoberfest 2023 participants! We are participating! 🎉\n\nIt is not just our [10th anniversary](https://www.home-assistant.io/blog/2023/09/17/10-years-home-assistant/), but also the 10th year of Hacktoberfest! Congratulations! 🎂\n\nHacktoberfest is a worldwide, month-long celebration of open source. An event open to everyone. Whether you’re a developer, student learning to code, documenter, or designer, you can help drive the growth of open source projects, like Home Assistant. All backgrounds and skill levels are encouraged to complete the Hacktoberfest challenge. And of course, we are happy to help you get your pull requests in.\n\nJust like all other years, Home Assistant participates in Hacktoberfest. All of our repositories have joined, no matter if you want to make a change to the [frontend](https://github.com/home-assistant/frontend), [core](https://github.com/home-assistant/core), or even our [documentation](https://github.com/home-assistant/home-assistant.io). The issue trackers on these repositories give a good overview of what is possible to contribute to.\n\n## But, I’m not a developer?!\n\nIf you are not a developer, new to git, GitHub, or open source in general, documentation can be a great way to get started. A relatively easy way to contribute is by reviewing the documentation of integrations you use or are familiar with. Check if everything is still up to date and is free of spelling/grammar mistakes.\n\nEvery single documentation page on our website has a “Edit” button, at the buttom of the page. Using that button, you can change the text on that page and provide a suggestion for improvement.\n\nOn our Community forum, there is a good step-by-step guide on how this works: [Editing the Documentation and Creating a Pull Request on GitHub](https://community.home-assistant.io/t/editing-the-documentation-and-creating-a-pull-request-on-github/9573).\n\nSo, what are you waiting for? Sign-up on the [Hacktoberfest](https://hacktoberfest.com/) website and start hacking! If you have any questions, please, drop by our [Discord chat server](https://www.home-assistant.io/join-chat). We have dedicated developer channels and are happy to assist you.\n\nHappy Hacktoberfest 🎉"},{"id":"/2023/09/20/excluding-state-attributes-from-recording","metadata":{"permalink":"/blog/2023/09/20/excluding-state-attributes-from-recording","source":"@site/blog/2023-09-20-excluding-state-attributes-from-recording.md","title":"New way of excluding state attributes from recording","description":"The way in which state attributes are excluded from recording has changed","date":"2023-09-20T00:00:00.000Z","tags":[],"readingTime":0.43,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"New way of excluding state attributes from recording"},"unlisted":false,"prevItem":{"title":"Home Assistant is participating in Hacktoberfest 2023!","permalink":"/blog/2023/10/01/hacktoberfest-2023"},"nextItem":{"title":"The websocket command entity/source has been modified","permalink":"/blog/2023/09/12/ws-entity-source-simplified"}},"content":"The way in which state attributes are excluded from recording has changed\n\nThe recorder platforms have been replaced with two new attributes which can be set in classes derived from `Entity`:\n- `_entity_component_unrecorded_attributes: frozenset[str]` - This should be set by base component entity classes, e.g. `LightEntity`\n- `_unrecorded_attributes: frozenset[str]` - This should be set by derived platform classes, e.g. `HueLight` to exclude \nadditional, integration specific, attributes from recording.\n\n\nMore details can be found in the [entity documentation](/docs/core/entity#excluding-state-attributes-from-recorder-history).\n\nBackground for the change is in [architecture discussion #964](https://github.com/home-assistant/architecture/discussions/964)."},{"id":"/2023/09/12/ws-entity-source-simplified","metadata":{"permalink":"/blog/2023/09/12/ws-entity-source-simplified","source":"@site/blog/2023-09-12-ws-entity-source-simplified.md","title":"The websocket command entity/source has been modified","description":"The websocket command entity/source has been greatly simplified:","date":"2023-09-12T00:00:00.000Z","tags":[],"readingTime":0.465,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"The websocket command entity/source has been modified"},"unlisted":false,"prevItem":{"title":"New way of excluding state attributes from recording","permalink":"/blog/2023/09/20/excluding-state-attributes-from-recording"},"nextItem":{"title":"Entity state formatting","permalink":"/blog/2023/08/29/hass-format-state"}},"content":"The websocket command `entity/source` has been greatly simplified:\n- It's no longer possible to get information for a single entity\n- Only the domain of the entities is included in the response, `custom_component`, `config_entry` and `source` are no longer present.\n\n### New response example\n```json\n{\n  \"light.entity_1\": {\n    \"domain\": \"template\",\n  },\n  \"switch.entity_2\": {\n    \"domain\": \"shelly\",\n  },\n}\n```\n\n### Old response example\n```json\n{\n  \"light.entity_1\": {\n    \"custom_component\": false,\n    \"domain\": \"template\",\n    \"source\": \"platform_config\",\n  },\n  \"switch.entity_2\": {\n    \"custom_component\": false,\n    \"config_entry\": \"<config_entry_id>\",\n    \"domain\": \"shelly\",\n    \"source\": \"config_entry\",\n  },\n}\n```\n\n\nThe change was introduced in [core PR#99439](https://github.com/home-assistant/core/pull/99439)"},{"id":"/2023/08/29/hass-format-state","metadata":{"permalink":"/blog/2023/08/29/hass-format-state","source":"@site/blog/2023-08-29-hass-format-state.md","title":"Entity state formatting","description":"In the Home Assistant Core 2023.9 release, we introduced 3 new methods to the hass object to allow entity state formatting with localization support for custom cards:","date":"2023-08-29T00:00:00.000Z","tags":[],"readingTime":0.345,"hasTruncateMarker":false,"authors":[{"name":"Paul Bottein","url":"https://github.com/piitaya","key":null,"page":null}],"frontMatter":{"author":"Paul Bottein","authorURL":"https://github.com/piitaya","authorTwitter":"piitaya","title":"Entity state formatting"},"unlisted":false,"prevItem":{"title":"The websocket command entity/source has been modified","permalink":"/blog/2023/09/12/ws-entity-source-simplified"},"nextItem":{"title":"HomeAssistant.__init__ requires passing a string to it","permalink":"/blog/2023/08/29/homeassistant-changed-signature"}},"content":"In the Home Assistant Core 2023.9 release, we introduced 3 new methods to the `hass` object to allow entity state formatting with localization support for custom cards:\n\n- `hass.formatEntityState`\n- `hass.formatEntityAttributeValue`\n- `hass.formatEntityAttributeName`\n\nExample:\n\n```js\nhass.formatEntityState(hass.states[\"cover.living_room_shutter\"]); \n// It will return \"Open\" if the user language is English.\n// It will return \"Ouvert\" if the user language is French.\n```\n\nFor more details, refer to the [entity state formatting documentation](/docs/frontend/data#entity-state-formatting)."},{"id":"/2023/08/29/homeassistant-changed-signature","metadata":{"permalink":"/blog/2023/08/29/homeassistant-changed-signature","source":"@site/blog/2023-08-29-homeassistant-changed-signature.md","title":"HomeAssistant.__init__ requires passing a string to it","description":"The signature of HomeAssistant.init has been changed from no arguments to require the configuration directory as a string to be passed to it. Scripts, tests etc. outside of the HomeAssistant core repo which create HomeAssistant objects will need to be updated.","date":"2023-08-29T00:00:00.000Z","tags":[],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"HomeAssistant.__init__ requires passing a string to it"},"unlisted":false,"prevItem":{"title":"Entity state formatting","permalink":"/blog/2023/08/29/hass-format-state"},"nextItem":{"title":"Numerical sensors are no longer allowed to set their state to NaN or inf","permalink":"/blog/2023/08/23/sensor-updates"}},"content":"The signature of `HomeAssistant.__init__` has been changed from no arguments to require the configuration directory as a string to be passed to it. Scripts, tests etc. outside of the HomeAssistant core repo which create `HomeAssistant` objects will need to be updated.\n\nThe change was introduced in [core PR#98442](https://github.com/home-assistant/core/pull/98442)\n\nIf backwards compatibility is important, this is a way to achieve it:\n\n```python\n    try:\n        hass = HomeAssistant()  # pylint: disable=no-value-for-parameter\n    except TypeError:\n        hass = HomeAssistant(config_dir)  # pylint: disable=too-many-function-args\n```"},{"id":"/2023/08/23/sensor-updates","metadata":{"permalink":"/blog/2023/08/23/sensor-updates","source":"@site/blog/2023-08-23-sensor-updates.md","title":"Numerical sensors are no longer allowed to set their state to NaN or inf","description":"Numerical sensors are no longer allowed to set their state to Not a Number or to positive or negative infinity.","date":"2023-08-23T00:00:00.000Z","tags":[],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Numerical sensors are no longer allowed to set their state to NaN or inf"},"unlisted":false,"prevItem":{"title":"HomeAssistant.__init__ requires passing a string to it","permalink":"/blog/2023/08/29/homeassistant-changed-signature"},"nextItem":{"title":"Weather entity forecast types","permalink":"/blog/2023/08/07/weather_entity_forecast_types"}},"content":"Numerical sensors are no longer allowed to set their state to [Not a Number](https://en.wikipedia.org/wiki/NaN) or to positive or negative infinity.\n\nThe change was introduce in [core PR#98110](https://github.com/home-assistant/core/pull/98110)\n\nFor more details, refer to the [`sensor` documentation](/docs/core/entity/sensor)."},{"id":"/2023/08/07/weather_entity_forecast_types","metadata":{"permalink":"/blog/2023/08/07/weather_entity_forecast_types","source":"@site/blog/2023-08-07-weather_entity_forecast_types.md","title":"Weather entity forecast types","description":"WeatherEntity now allows a single weather entity to support different forecast types meaning it's no longer necessary to create multiple entities for the same location, as an example, an entity providing daily forecast and another entity providing hourly forecast.","date":"2023-08-07T00:00:00.000Z","tags":[],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"G Johansson","url":"https://github.com/gjohansson-ST","key":null,"page":null}],"frontMatter":{"author":"G Johansson","authorURL":"https://github.com/gjohansson-ST","title":"Weather entity forecast types"},"unlisted":false,"prevItem":{"title":"Numerical sensors are no longer allowed to set their state to NaN or inf","permalink":"/blog/2023/08/23/sensor-updates"},"nextItem":{"title":"Avoid unnecessary callbacks with DataUpdateCoordinator","permalink":"/blog/2023/07/27/avoiding-unnecessary-callbacks-with-dataupdatecoordinator"}},"content":"`WeatherEntity` now allows a single weather entity to support different forecast types meaning it's no longer necessary to create multiple entities for the same location, as an example, an entity providing daily forecast and another entity providing hourly forecast.\n\nIntegrations providing `weather` entities should be updated to implement one or several of the new async methods `async_forecast_daily`, `async_forecast_hourly` and `async_forecast_twice_daily`.\n\nFor the upcoming Home Assistant Core 2024.3 release, integrations should remove the deprecated `forecast` property and also remove any duplicated weather entities which were added to provide multiple forecasts.\n\nSee [`weather` developer documentation](/docs/core/entity/weather#weather-forecasts) for details on how to implement the new forecast methods.\n\nThe \"Weather Forecast Card\" has been updated to provide the user with an option to select the preferred forecast to show, if the integration are using the new methods."},{"id":"/2023/07/27/avoiding-unnecessary-callbacks-with-dataupdatecoordinator","metadata":{"permalink":"/blog/2023/07/27/avoiding-unnecessary-callbacks-with-dataupdatecoordinator","source":"@site/blog/2023-07-27-avoiding-unnecessary-callbacks-with-dataupdatecoordinator.md","title":"Avoid unnecessary callbacks with DataUpdateCoordinator","description":"The DataUpdateCoordinator can now reduce unnecessary updates when API data can be compared.","date":"2023-07-27T00:00:00.000Z","tags":[],"readingTime":0.535,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Avoid unnecessary callbacks with DataUpdateCoordinator"},"unlisted":false,"prevItem":{"title":"Weather entity forecast types","permalink":"/blog/2023/08/07/weather_entity_forecast_types"},"nextItem":{"title":"The naming of MQTT entities changes to correspond with HA guidelines","permalink":"/blog/2023/07/21/change-naming-mqtt-entities"}},"content":"The `DataUpdateCoordinator` can now reduce unnecessary updates when API data can be compared.\n\nWhen using the `DataUpdateCoordinator`, the data being polled is often expected to stay mostly the same. For example, if you are polling a light that is only turned on once a week, that data may be the same nearly all the time. The default behavior is always calling back listeners when the data is updated, even if it does not change. If the data returned from the API can be compared for changes with the Python `__eq__` method, set `always_update=False` when creating the `DataUpdateCoordinator` to avoid unnecessary callbacks and writes to the state machine."},{"id":"/2023/07/21/change-naming-mqtt-entities","metadata":{"permalink":"/blog/2023/07/21/change-naming-mqtt-entities","source":"@site/blog/2023-07-21-change-naming-mqtt-entities.md","title":"The naming of MQTT entities changes to correspond with HA guidelines","description":"The way MQTT entities are named and how device configuration can be shared between discovered entities has changed","date":"2023-07-21T00:00:00.000Z","tags":[],"readingTime":0.815,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://twitter.com/jbouwh","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://twitter.com/jbouwh","title":"The naming of MQTT entities changes to correspond with HA guidelines"},"unlisted":false,"prevItem":{"title":"Avoid unnecessary callbacks with DataUpdateCoordinator","permalink":"/blog/2023/07/27/avoiding-unnecessary-callbacks-with-dataupdatecoordinator"},"nextItem":{"title":"Translating services","permalink":"/blog/2023/07/11/translating-services"}},"content":"The way MQTT entities are named and how device configuration can be shared between discovered entities has changed\n\n### Sharing of device configuration\n\nDiscovered MQTT entities can share device configuration, meaning one entity can include the full device configuration and other entities can link to that device by only setting mandatory fields.\nThe mandatory fields were previously limited to at least one of `connection` and `identifiers`, but has now been extended to at least one of `connection` and `identifiers` as well as the `name`.\n\n### Naming of MQTT entities\n\nNaming of MQTT entities has been changed to be aligned with the [entity naming guidelines](https://developers.home-assistant.io/docs/core/entity/#entity-naming):\n\n- The `has_entity_name` entity will be set to `True` on all MQTT entities\n- Unnamed `binary_sensor`, `button`, `number` and `sensor` entities will now be named by their device class instead of being named `MQTT binary sensor\" etc.\n- It's now allowed to set an MQTT entity's name to `None` to mark it as the main feature of a device"},{"id":"/2023/07/11/translating-services","metadata":{"permalink":"/blog/2023/07/11/translating-services","source":"@site/blog/2023-07-11-translating-services.md","title":"Translating services","description":"We now support translating services in Home Assistant. Previously, the names & descriptions of services and their service fields have been hardcoded into the services.yaml files of each integration.","date":"2023-07-11T00:00:00.000Z","tags":[],"readingTime":0.74,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Translating services"},"unlisted":false,"prevItem":{"title":"The naming of MQTT entities changes to correspond with HA guidelines","permalink":"/blog/2023/07/21/change-naming-mqtt-entities"},"nextItem":{"title":"Updated to the Vacuum entity integration","permalink":"/blog/2023/07/10/vacuum-updates"}},"content":"We now support translating services in Home Assistant. Previously, the names & descriptions of services and their service fields have been hardcoded into the `services.yaml` files of each integration.\n\nWe have now added support for translating these names & descriptions using our translation system. This means that the names & descriptions of services and their service fields can now be translated into any language.\n\nTo achieve this, the `name` and `description` keys from each service and service field moves from the hardcoded `services.yaml` files to the translation files of each integration.\n\nAn updated example of a `services.yaml` service description can be [found in our documentation](/docs/dev_101_services#service-descriptions). The [backend localization](/docs/internationalization/core#services) has been extended to have an example of a translated service, matching the example from the service description.\n\nThe services translation is available as of Home Assistant 2023.8. We hope this will make Home Assistant more accessible to non-English users."},{"id":"/2023/07/10/vacuum-updates","metadata":{"permalink":"/blog/2023/07/10/vacuum-updates","source":"@site/blog/2023-07-10-vacuum-updates.md","title":"Updated to the Vacuum entity integration","description":"The Vacuum entity has seen some recent changes:","date":"2023-07-10T00:00:00.000Z","tags":[],"readingTime":0.975,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Updated to the Vacuum entity integration"},"unlisted":false,"prevItem":{"title":"Translating services","permalink":"/blog/2023/07/11/translating-services"},"nextItem":{"title":"Action event for custom cards","permalink":"/blog/2023/07/07/action-event-custom-cards"}},"content":"The Vacuum entity has seen some recent changes:\n- The `VacuumEntity` base class was superseded by `StateVacuumEntity` by [PR 15573](https://github.com/home-assistant/core/pull/15573) which was merged in August 2018, and has now been scheduled for removal in Home Assistant Core 2024.2.0. All core integrations are already updated, but custom component integration authors need to update their integrations. [PR 95920](https://github.com/home-assistant/core/pull/95920) is a recent example of migrating from `VacuumEntity` to `StateVacuumEntity`.\n- Services supported by `VacuumEntity` and `StateVacuumEntity` differ, but the documentation was a bit ambiguous causing some integrations to implement services from the wrong base class. This is now prevented by [PR 95833](https://github.com/home-assistant/core/pull/95833). All core integrations are already updated, but custom component integration authors need to update their integrations.\n- The `battery_icon` + `battery_level` state attributes have been deprecated. Integrations can instead report battery status by adding a `sensor` with device class `battery` to the same device as the `vacuum` entity, see architecture discussion [938](https://github.com/home-assistant/architecture/discussions/938) for details.\n- The `map` state attribute has been deprecated. Integrations can instead provide a map image by adding an `image` entity to the same device as the `vacuum` entity, see architecture discussion [939](https://github.com/home-assistant/architecture/discussions/939) for details.\n\nFor more details, refer to the [`vacuum` documentation](/docs/core/entity/vacuum)."},{"id":"/2023/07/07/action-event-custom-cards","metadata":{"permalink":"/blog/2023/07/07/action-event-custom-cards","source":"@site/blog/2023-07-07-action-event-custom-cards.md","title":"Action event for custom cards","description":"In the Home Assistant Core 2023.7 release, we introduced hass-action for custom cards.","date":"2023-07-07T00:00:00.000Z","tags":[],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"Paul Bottein","url":"https://github.com/piitaya","key":null,"page":null}],"frontMatter":{"author":"Paul Bottein","authorURL":"https://github.com/piitaya","authorTwitter":"piitaya","title":"Action event for custom cards"},"unlisted":false,"prevItem":{"title":"Updated to the Vacuum entity integration","permalink":"/blog/2023/07/10/vacuum-updates"},"nextItem":{"title":"Changes to entity naming","permalink":"/blog/2023/06/28/entity-name-changes"}},"content":"In the Home Assistant Core 2023.7 release, we introduced `hass-action` for custom cards.\n\nIf you are a custom cards developer, you can now use any [card action](https://www.home-assistant.io/dashboards/actions/) in your custom card by using the new `hass-action`.\n\nExample :\n\n```js\n// Define the action config\nconst actionConfig = {\n  entity: \"sensor.temperature\",\n  tap_action: {\n    action: \"more-info\",\n  },\n  hold_action: {\n    action: \"assist\",\n    start_listening: true,\n  },\n};\n\n// Open more info on tap action\nconst event = new Event(\"hass-action\", {\n  bubbles: true,\n  composed: true,\n});\nevent.detail = {\n  config: actionConfig,\n  action: \"tap\",\n};\nthis.dispatchEvent(event);\n\n// Open assist dialog on hold action\nconst event = new Event(\"hass-action\", {\n  bubbles: true,\n  composed: true,\n});\nevent.detail = {\n  config: actionConfig,\n  action: \"hold\",\n};\nthis.dispatchEvent(event);\n```"},{"id":"/2023/06/28/entity-name-changes","metadata":{"permalink":"/blog/2023/06/28/entity-name-changes","source":"@site/blog/2023-06-28-entity-name-changes.md","title":"Changes to entity naming","description":"There have been a couple of changes to entity naming:","date":"2023-06-28T00:00:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Changes to entity naming"},"unlisted":false,"prevItem":{"title":"Action event for custom cards","permalink":"/blog/2023/07/07/action-event-custom-cards"},"nextItem":{"title":"Service call description filters","permalink":"/blog/2023/06/28/service-description-filters"}},"content":"There have been a couple of changes to entity naming:\n- Marking an entity as the single main feature of a device is now done by explicitly setting the entity's `name` property to `None`, implicitly marking an entity as the single main feature of a device by not setting the `name` property is no longer supported.\n- Unnamed entities from certain platforms now get a default name based on their device class, this includes `binary_sensor`, `button`, `number` and `sensor` entities.\n\nMore details can be found in the [entity naming documentation](/docs/core/entity#entity-naming)."},{"id":"/2023/06/28/service-description-filters","metadata":{"permalink":"/blog/2023/06/28/service-description-filters","source":"@site/blog/2023-06-28-service-description-filters.md","title":"Service call description filters","description":"Service call descriptions have been changed to support filtering.","date":"2023-06-28T00:00:00.000Z","tags":[],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Service call description filters"},"unlisted":false,"prevItem":{"title":"Changes to entity naming","permalink":"/blog/2023/06/28/entity-name-changes"},"nextItem":{"title":"Service Call API changes","permalink":"/blog/2023/06/14/service-calls"}},"content":"Service call descriptions have been changed to support filtering.\nIt's possible to add a filter to a service call to not show entities which do not support the service call, it's also possible to add a filter to a service call field to not show fields which are not supported by a selected entity to the user.\n\nFor example:\n- The `brightness` service call parameter for `light.turn_on` will only be shown if the light supports brightness.\n- The `climate.set_aux_heat` service call will only allow picking a climate entity which supports auxiliary heat.\n\nThis features was introduced in core [PR #86162](https://github.com/home-assistant/core/pull/86162) and is documented [here](/docs/dev_101_services#filtering-service-fields)."},{"id":"/2023/06/14/service-calls","metadata":{"permalink":"/blog/2023/06/14/service-calls","source":"@site/blog/2023-06-14-service-calls.md","title":"Service Call API changes","description":"This change affects Service Call APIs: hass.services.async_call and hass.services.call.","date":"2023-06-14T00:00:00.000Z","tags":[],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"Allen Porter","url":"https://github.com/allenporter","key":null,"page":null}],"frontMatter":{"author":"Allen Porter","authorURL":"https://github.com/allenporter","title":"Service Call API changes"},"unlisted":false,"prevItem":{"title":"Service call description filters","permalink":"/blog/2023/06/28/service-description-filters"},"nextItem":{"title":"Recent MQTT changes to improve overall performance","permalink":"/blog/2023/05/21/retained-mqtt-messages-filtered"}},"content":"This change affects Service Call APIs: `hass.services.async_call` and `hass.services.call`.\n\nFor Home Assistant Core 2023.7 some input arguments and the return values for service calls have\nbeen changed to prepare to better support [Service return values](https://github.com/home-assistant/architecture/discussions/777#discussioncomment-6127898). \n\nPreviously, the return value of `True` on success and `False` if a timeout occurred. The `limit`\nargument that sets a timeout has been removed, and the boolean return value has been removed.\nCallers that would like a timeout should now set their own using asyncio."},{"id":"/2023/05/21/retained-mqtt-messages-filtered","metadata":{"permalink":"/blog/2023/05/21/retained-mqtt-messages-filtered","source":"@site/blog/2023-05-21-retained-mqtt-messages-filtered.md","title":"Recent MQTT changes to improve overall performance","description":"The way Home Assistant's MQTT integration processes MQTT messages and how subscribes and unsubscribes are performed has changed.","date":"2023-05-21T00:00:00.000Z","tags":[],"readingTime":1.195,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://twitter.com/jbouwh","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://twitter.com/jbouwh","title":"Recent MQTT changes to improve overall performance"},"unlisted":false,"prevItem":{"title":"Service Call API changes","permalink":"/blog/2023/06/14/service-calls"},"nextItem":{"title":"Job: Home Assistant Core Developer","permalink":"/blog/2023/05/07/job-home-assistant-core"}},"content":"The way Home Assistant's MQTT integration processes MQTT messages and how subscribes and unsubscribes are performed has changed.\n\n### Updates were made in the way MQTT subscribes, unsubscribes are performed\n\nSubscribes and unsubscribes are not immediately sent to the broker anymore. Debouncer code was added that will delay subscribes to the broker and bundle them when more are added within the debounce time. At the point where the actual (un)subscribes are done, the (un)subscribes are bundled into one call to the broker. These changes will speed up the MQTT integration and the startup of integrations that register a lot of MQTT entities, especially when shared topics are subscribed to (e.g. to publish the availability). In the MQTT debug logging the `mid` number shows what (un)subscribe calls have been bundled in one call to the MQTT broker.\n\n### The way how retained messages are processed has changed\n\nThe way MQTT messages with a set `retain` flag are handled has changed such that existing subscribers are no longer passed retained messages re-sent by the broker as a result of new subscribers subscribing to the same topic. Instead, retained messages re-sent by the broker are only passed to the new subscriber.\n\nThe new behavior avoids flooding subscribers with the same retained message over and over and is also better aligned with the MQTT specification, see OASIS MQTT Version 3.1.1 spec ([on how the RETAIN flag is used](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc385349265)) and Normative Statement Number [MQTT-3.3.1-9](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718134)."},{"id":"/2023/05/07/job-home-assistant-core","metadata":{"permalink":"/blog/2023/05/07/job-home-assistant-core","source":"@site/blog/2023-05-07-job-home-assistant-core.md","title":"Job: Home Assistant Core Developer","description":"Nabu Casa is seeking a passionate and experienced Python developer to join the Home Assistant core team as a full-time Software Engineer. As a member of our team, you will be responsible for reviewing contributions and developing new features that align with our roadmap.","date":"2023-05-07T00:00:00.000Z","tags":[],"readingTime":0.245,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://github.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://github.com/balloob","authorImageURL":"/img/profile/paulus.jpg","title":"Job: Home Assistant Core Developer"},"unlisted":false,"prevItem":{"title":"Recent MQTT changes to improve overall performance","permalink":"/blog/2023/05/21/retained-mqtt-messages-filtered"},"nextItem":{"title":"Statistics WebSocket API changes","permalink":"/blog/2023/04/30/statistics_impossible_values"}},"content":"Nabu Casa is seeking a passionate and experienced Python developer to join the Home Assistant core team as a full-time Software Engineer. As a member of our team, you will be responsible for reviewing contributions and developing new features that align with our roadmap.\n\n[Learn more @ Nabu Casa](https://nabucasa.com/jobs/home-assistant-core-developer/)"},{"id":"/2023/04/30/statistics_impossible_values","metadata":{"permalink":"/blog/2023/04/30/statistics_impossible_values","source":"@site/blog/2023-04-30-statistics_impossible_values.md","title":"Statistics WebSocket API changes","description":"This change affects WebSocket APIs: recorder/statisticduringperiod and recorder/statisticsduringperiod. The Home Assistant project does not currently document these APIs, as they may change.","date":"2023-04-30T00:00:00.000Z","tags":[],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Statistics WebSocket API changes"},"unlisted":false,"prevItem":{"title":"Job: Home Assistant Core Developer","permalink":"/blog/2023/05/07/job-home-assistant-core"},"nextItem":{"title":"New limits for Supervisor Add-ons","permalink":"/blog/2023/04/13/new_limits_for_add_ons"}},"content":"This change affects WebSocket APIs: `recorder/statistic_during_period` and `recorder/statistics_during_period`. The Home Assistant project does not currently document these APIs, as they may change.\n\nFor Home Assistant Core 2023.6 the statistics WebSocket API will no longer return columns that it knows will be empty. Callers should treat the lack of values the same as null values.\n\nTo reduce database overhead, if the statistics backend knows in advance that all rows for a column will be empty values, the column will no longer be returned."},{"id":"/2023/04/13/new_limits_for_add_ons","metadata":{"permalink":"/blog/2023/04/13/new_limits_for_add_ons","source":"@site/blog/2023-04-13-new_limits_for_add_ons.md","title":"New limits for Supervisor Add-ons","description":"With Home Assistant OS 10, we update to the latest Docker release 23.0. With the","date":"2023-04-13T00:00:00.000Z","tags":[],"readingTime":0.925,"hasTruncateMarker":false,"authors":[{"name":"Stefan Agner","url":"https://github.com/agners","key":null,"page":null}],"frontMatter":{"author":"Stefan Agner","authorURL":"https://github.com/agners","title":"New limits for Supervisor Add-ons"},"unlisted":false,"prevItem":{"title":"Statistics WebSocket API changes","permalink":"/blog/2023/04/30/statistics_impossible_values"},"nextItem":{"title":"Deprecating Polymer","permalink":"/blog/2023/04/04/deprecating_polymer"}},"content":"With Home Assistant OS 10, we update to the latest Docker release 23.0. With the\nnew Docker version the maximum number of open file descriptors for add-ons\nchanged to infinity (sort of).\n\nIf you are an add-on developer and experience out-of-memory issues on Home\nAssistant OS 10, you can apply the old limit by using `ulimit -n 1048576` before\nstarting your service.\n\nBackground: During Home Assistant OS release candidate phase, the higher limit turned out to\nbe problematic for several add-ons (Node-RED, Network UPS Tools, and the EMQX\nMQTT broker, see [Home Assistant OS issue #2438](https://github.com/home-assistant/operating-system/issues/2438)).\nIn all cases, the problems manifested as an out-of-memory error,\nwhere it worked on the same hardware as the previous Home Assistant OS release. Also\nin all three cases, memory got allocated dynamically depending on the number of\nopen file descriptors allowed (which can be determined via `prlimit64` syscall,\nwhich returns a limit of 1073741816).\n\nWe considered returning to the old limit; however, according to the change\nin the Docker (moby) repository using infinity as a limit has less overhead.\nTherefore we decided to stick with the new default."},{"id":"/2023/04/04/deprecating_polymer","metadata":{"permalink":"/blog/2023/04/04/deprecating_polymer","source":"@site/blog/2023-04-04-deprecating_polymer.md","title":"Deprecating Polymer","description":"The Home Assistant frontend used to use the Polymer Library for her web components. Polymer has since been deprecated and superseded by Lit.","date":"2023-04-04T00:00:00.000Z","tags":[],"readingTime":1.175,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://twitter.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://twitter.com/bramkragten","authorTwitter":"bramkragten","title":"Deprecating Polymer"},"unlisted":false,"prevItem":{"title":"New limits for Supervisor Add-ons","permalink":"/blog/2023/04/13/new_limits_for_add_ons"},"nextItem":{"title":"Calendar best practices","permalink":"/blog/2023/03/28/calendar_best_practices"}},"content":"The Home Assistant frontend used to use the [Polymer Library](https://polymer-library.polymer-project.org/3.0/docs/about_30) for her web components. Polymer has since been deprecated and superseded by [Lit](https://lit.dev).\n\nIn the last couple of years, we migrated most of the frontend to Lit, and we only have a few places and dependencies that still use Polymer.\n\nThis is good news, as Lit is way faster and lighter than Polymer.\n\nIn Home Assistant 2023.4, we finally removed the last piece of Polymer from the entry point of Home Assistant, meaning it is not loaded when the app starts, but only when a component needs it.\n\nFor custom cards and panels, we have supplied Polymer on the window object, so it was easier to access and use. But nowadays it is hardly used anymore, and since Home Assistant no longer uses it, it is mainly a big chunk of unused code that is slowing down the loading of Home Assistant.\n\nThat's why we decided to remove it.\n\nIn Home Assistant 2023.5 Polymer will no longer be provided by Home Assistant. If you use Polymer now, we recommend you switch to Lit. If you want to keep using Polymer, you will have to load Polymer yourself.\n\nIn Home Assistant 2023.4, we will log a warning every time Polymer is accessed. If you got a log message, find the custom card, panel, or more info that uses Polymer, and notify the author of this deprecation."},{"id":"/2023/03/28/calendar_best_practices","metadata":{"permalink":"/blog/2023/03/28/calendar_best_practices","source":"@site/blog/2023-03-28-calendar_best_practices.md","title":"Calendar best practices","description":"Home Assistant has improved best practices for Calendar entities to ensure","date":"2023-03-28T00:00:00.000Z","tags":[],"readingTime":0.74,"hasTruncateMarker":false,"authors":[{"name":"Allen Porter","url":"https://github.com/allenporter","key":null,"page":null}],"frontMatter":{"author":"Allen Porter","authorURL":"https://github.com/allenporter","title":"Calendar best practices"},"unlisted":false,"prevItem":{"title":"Deprecating Polymer","permalink":"/blog/2023/04/04/deprecating_polymer"},"nextItem":{"title":"Translating the name and attributes of entities","permalink":"/blog/2023/03/27/entity_name_translations"}},"content":"Home Assistant has improved best practices for Calendar entities to ensure\nthat calendar triggers/automations and the UI work correctly in all cases.\n\nIn particular, there are now more documented expectations and enforcement of invariants including:\n- A `CalendarEvent` property `end` is exclusive. e.g. An all day event that lasts one day should have an end date with 1 day after the start date.\n- A `CalendarEvent` can accept a `datetime` in any timezone.  Floating dates without a timezone are not allowed.\n- The `CalendarEvent` invariants are now enforced when created.\n- Events returned by `async_get_events` are expected to be returned in order.\n- All Day events returned by `async_get_events` must be evaluated in the Home Assistant local timezone. That is, an all day event should be ordered as if it starts at midnight in the local time.\n\nThe [Calendar Entity developer documentation](/docs/core/entity/calendar) has been updated with additional detail."},{"id":"/2023/03/27/entity_name_translations","metadata":{"permalink":"/blog/2023/03/27/entity_name_translations","source":"@site/blog/2023-03-27-entity_name_translations.md","title":"Translating the name and attributes of entities","description":"It's now possible to translate the name of entities, and this is preferred over hard coding a name in natural language in the Python implementation. Also, entity components provide shared translations, for example, for binary sensor device classes, which should be used to avoid translating the same thing multiple times.","date":"2023-03-27T00:00:00.000Z","tags":[],"readingTime":1.355,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Translating the name and attributes of entities"},"unlisted":false,"prevItem":{"title":"Calendar best practices","permalink":"/blog/2023/03/28/calendar_best_practices"},"nextItem":{"title":"Custom tile features","permalink":"/blog/2023/02/28/custom-tile-features"}},"content":"It's now possible to translate the name of entities, and this is preferred over hard coding a name in natural language in the Python implementation. Also, entity components provide shared translations, for example, for binary sensor device classes, which should be used to avoid translating the same thing multiple times.\n\nAlso, the frontend now has full support for translated entity state attributes for both the names and their values.\n\n\n:::warning\nPointing to translations via the `translation_key` property is currently only supported for entities with a `unique_id`.\n\nAdditionally, translating entity names requires that the `has_entity_name` property is set to `True`.\n:::\n\n## Translating entity name\nThe following example `strings.json` is for a `sensor` entity with its `translation_key` property set to `thermostat_mode`:\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"thermostat_mode\": {\n        \"name\": \"Thermostat mode\"\n      }\n    }\n  }\n}\n```\n\nThe following example `strings.json` is for a `sensor` entity with its `translation_key` property set to `temperature_sensor` where a shared translation provided by the `sensor` integration is used:\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"temperature_sensor\": {\n        \"name\": \"[%key:component::sensor::entity_component::temperature::name%]\"\n      }\n    }\n  }\n}\n```\n\n## Translating entity attributes\nThe following example `strings.json` is for a `demo` domain `climate` entity with its `translation_key` property set to `ubercool`, which has custom `fan_mode` and `swing_mode` settings:\n\n\n```json\n{\n  \"entity\": {\n    \"climate\": {\n      \"ubercool\": {\n        \"state_attributes\": {\n          \"fan_mode\": {\n            \"state\": {\n              \"auto_high\": \"Auto High\",\n              \"auto_low\": \"Auto Low\",\n              \"on_high\": \"On High\",\n              \"on_low\": \"On Low\"\n            }\n          },\n          \"swing_mode\": {\n            \"state\": {\n              \"1\": \"1\",\n              \"2\": \"2\",\n              \"3\": \"3\",\n              \"auto\": \"Auto\",\n              \"off\": \"Off\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nFor more details, see the [`entity name translation`](/docs/internationalization/core/#name-of-entities) [`entity attribute translation`](/docs/internationalization/core#entity-state-attributes) and [`entity`](/docs/core/entity#generic-properties) documentation."},{"id":"/2023/02/28/custom-tile-features","metadata":{"permalink":"/blog/2023/02/28/custom-tile-features","source":"@site/blog/2023-02-28-custom-tile-features.md","title":"Custom tile features","description":"In the Home Assistant Core 2022.3 release, we add custom features for the tile card. If you are a developer of custom cards, you can now build your own features to the tile card instead of building a whole card.","date":"2023-02-28T00:00:00.000Z","tags":[],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"Paul Bottein","url":"https://github.com/piitaya","key":null,"page":null}],"frontMatter":{"author":"Paul Bottein","authorURL":"https://github.com/piitaya","authorTwitter":"piitaya","title":"Custom tile features"},"unlisted":false,"prevItem":{"title":"Translating the name and attributes of entities","permalink":"/blog/2023/03/27/entity_name_translations"},"nextItem":{"title":"Deprecated callback signatures for MQTT subscribe removed","permalink":"/blog/2023/02/21/deprecated-callback-removed"}},"content":"In the Home Assistant Core 2022.3 release, we add custom features for the [tile card](https://www.home-assistant.io/dashboards/tile/). If you are a developer of custom cards, you can now build your own features to the tile card instead of building a whole card.\n\n![Screenshot showing example of custom tile feature](/img/en/blog/2023-02-28-custom-tile-features/example.png)\n\n```yaml\ntype: tile\nentity: button.push\nfeatures:\n  - type: custom:button-press-tile-feature\n```\n\nCustom tile features can even be added to the tile card editor like any other built-in tile feature using similar syntax as custom cards.\n\n```js\nwindow.customTileFeatures = window.customTileFeatures || [];\nwindow.customTileFeatures.push({\n  type: \"button-press-tile-feature\",\n  name: \"Button press\",\n});\n```\n\nFor more details, see the [custom tile features](/docs/frontend/custom-ui/custom-card/#tile-features) documentation."},{"id":"/2023/02/21/deprecated-callback-removed","metadata":{"permalink":"/blog/2023/02/21/deprecated-callback-removed","source":"@site/blog/2023-02-21-deprecated-callback-removed.md","title":"Deprecated callback signatures for MQTT subscribe removed","description":"Home Assistant's MQTT integration no longer supports","date":"2023-02-21T00:00:00.000Z","tags":[],"readingTime":0.54,"hasTruncateMarker":false,"authors":[{"name":"Jan Bouwhuis","url":"https://twitter.com/jbouwh","key":null,"page":null}],"frontMatter":{"author":"Jan Bouwhuis","authorURL":"https://twitter.com/jbouwh","title":"Deprecated callback signatures for MQTT subscribe removed"},"unlisted":false,"prevItem":{"title":"Custom tile features","permalink":"/blog/2023/02/28/custom-tile-features"},"nextItem":{"title":"Added support for snapshot testing","permalink":"/blog/2023/02/20/snapshot-testing"}},"content":"Home Assistant's MQTT integration [no longer supports](https://github.com/home-assistant/core/pull/88543)\ndeprecated callback signatures for MQTT subscribe.\n\nCustome integrations that still used the deprecated callback signature for the callback function on MQTT subscribe will break unless updated. An exception will be raised if a not supported callback type is detected.\n\nExamples of deprecated callback functions that will no longer work:\n\n```python\nasync def async_deprecated_callback1(topic: str, payload: ReceivePayloadType, qos: int) -> None:\n    \"\"\"Deprecated async callback example 1.\"\"\"\n    ...\n\n\n@callback\ndef async_deprecated_callback2(topic: str, payload: ReceivePayloadType, qos: int) -> None:\n    \"\"\"Deprecated async callback example 2.\"\"\"\n    ...\n```\n\nExample of a correct callback signature:\n\n```python\n@callback\ndef async_correct_callback(msg: ReceiveMessage) -> None:\n    \"\"\"Callback example 1.\"\"\"\n    ...\n```"},{"id":"/2023/02/20/snapshot-testing","metadata":{"permalink":"/blog/2023/02/20/snapshot-testing","source":"@site/blog/2023-02-20-snapshot-testing.md","title":"Added support for snapshot testing","description":"Home Assistant now supports snapshot testing","date":"2023-02-20T00:00:00.000Z","tags":[],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Added support for snapshot testing"},"unlisted":false,"prevItem":{"title":"Deprecated callback signatures for MQTT subscribe removed","permalink":"/blog/2023/02/21/deprecated-callback-removed"},"nextItem":{"title":"Refactor json helper and utility","permalink":"/blog/2023/02/15/json"}},"content":"Home Assistant [now supports snapshot testing](https://github.com/home-assistant/core/pull/88323)\nfor our Python codebase.\n\nSnapshot testing (also known as approval tests) are tests that assert values\nagainst a stored reference value (the snapshot); ensuring the output of code\nremains the same over time.\n\nSnapshot tests are different from regular (functional) tests and do not replace\nfunctional tests, but they can be very useful for testing larger test outputs.\nWithin Home Assistant they could, for example, be used to test entity states, device\nor entity registry items, or the output of a diagnostic dump.\n\nTake, for example, this diagnostic test, which uses a snapshot to assert the\noutput of a diagnostic dump:\n\n```python\n# tests/components/example/test_diagnostics.py\nasync def test_diagnostics(\n    hass: HomeAssistant,\n    hass_client: ClientSessionGenerator,\n    init_integration: MockConfigEntry,\n    snapshot: SnapshotAssertion,\n) -> None:\n    \"\"\"Test diagnostics.\"\"\"\n    assert (\n        await get_diagnostics_for_config_entry(hass, hass_client, init_integration)\n        == snapshot\n    )\n```\n\nWhen this test is run for the first time, it will fail, as no snapshot exists.\nTo create (or update) a snapshot, run pytest with the `--snapshot-update` flag,\nwhich will create a snapshot file in the `snapshots` directory of this component.\n\nThe snapshot file is named after the test file, in this case:\n`tests/components/example/snapshots/test_diagnostics.ambr`. The snapshot files\nare human-readable and must be committed to the repository.\n\nAny sequential runs of the tests will then compare the results against the\nsnapshot. If the results are different, the test will fail.\n\nSnapshots are an easy way to ensure the output of code remains the same over\ntime and can greatly reduce the amount of testing code needed (while providing)\na full assert against a complete output.\n\nSnapshot testing in Home Assistant is build on top of [Syrupy](https://github.com/tophat/syrupy),\nwhich has been extended to handle Home Assistant-specific data structures.\n\nMore information on testing integrations,\ncan be found [in our documentation](/docs/development_testing)."},{"id":"/2023/02/15/json","metadata":{"permalink":"/blog/2023/02/15/json","source":"@site/blog/2023-02-15-json.md","title":"Refactor json helper and utility","description":"As of Home Assistant Core 2023.3, some constants and functions have been moved","date":"2023-02-15T00:00:00.000Z","tags":[],"readingTime":0.245,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Refactor json helper and utility"},"unlisted":false,"prevItem":{"title":"Added support for snapshot testing","permalink":"/blog/2023/02/20/snapshot-testing"},"nextItem":{"title":"The HassGetState intent","permalink":"/blog/2023/02/09/hassgetstate"}},"content":"As of Home Assistant Core 2023.3, some constants and functions have been moved\nbetween `homeassistant.helpers.json` and `homeassistant.util.json` :\n\n  - `save_json` and `find_paths_unserializable_data` functions should now be\n  imported from `homeassistant.helpers.json`\n  - `json_loads` function should now be imported from `homeassistant.util.json`\n  - `JSON_ENCODE_EXCEPTIONS` and `JSON_DECODE_EXCEPTIONS` constants should now\n  be imported from `homeassistant.util.json`"},{"id":"/2023/02/09/hassgetstate","metadata":{"permalink":"/blog/2023/02/09/hassgetstate","source":"@site/blog/2023-02-09-hassgetstate.md","title":"The HassGetState intent","description":"We've added a new built-in intent: HassGetState","date":"2023-02-09T00:00:00.000Z","tags":[],"readingTime":0.87,"hasTruncateMarker":false,"authors":[{"name":"Michael Hansen","url":"https://twitter.com/rhasspy","imageURL":"/img/profile/mike_hansen.png","key":null,"page":null}],"frontMatter":{"author":"Michael Hansen","authorURL":"https://twitter.com/rhasspy","authorImageURL":"/img/profile/mike_hansen.png","authorTwitter":"rhasspy","title":"The HassGetState intent"},"unlisted":false,"prevItem":{"title":"Refactor json helper and utility","permalink":"/blog/2023/02/15/json"},"nextItem":{"title":"The number of decimals used when displaying a sensor state is now configurable","permalink":"/blog/2023/02/08/sensor_presentation_rounding"}},"content":"We've added a new [built-in intent](/docs/intent_builtin/): `HassGetState`\n\nThis intent will enable users to ask questions to [Assist](https://www.home-assistant.io/docs/assist) once we've added translations to the [intents repository](https://github.com/home-assistant/intents/).\nYou can try it out now by adding [custom sentences](https://www.home-assistant.io/docs/assist/custom_sentences):\n\n```yaml\n# Example <config>/custom_sentences/en/get_state.yaml\n\nlanguage: en\nintents:\n  HassGetState:\n    data:\n      - sentences:\n          - what is <name> [in <area>]\n          - is <name> {state} [in <area>]\n\nresponses:\n  intents:\n    HassGetState:\n      default: \"{{ slots.name }} is {{ state.state_with_unit }}\"\n\nlists:\n  state:\n    values:\n      - \"on\"\n      - \"off\"\n      - open\n      - closed\n      - locked\n      - unlocked\n      - wet\n      - dry\n```\n\nWith these sentences, you can now ask Assist things like \"what is the outside temperature?\", \"is the front door locked?\", or \"is the floor in the basement wet?\"\nThis relies on having entity names (or aliases) set up just right, of course. For example, a sensor named \"outside temperature\" and a binary moisture sensor named \"floor\" in the \"basement\" area.\n\nAs we add translations, more types of questions will be possible such as \"which lights are in the living room?\" and \"are any doors unlocked?\""},{"id":"/2023/02/08/sensor_presentation_rounding","metadata":{"permalink":"/blog/2023/02/08/sensor_presentation_rounding","source":"@site/blog/2023-02-08-sensor_presentation_rounding.md","title":"The number of decimals used when displaying a sensor state is now configurable","description":"The number of decimal digits shown when displaying a sensor state is now configurable by the user. Integrations can suggest the number of","date":"2023-02-08T00:00:00.000Z","tags":[],"readingTime":0.84,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"The number of decimals used when displaying a sensor state is now configurable"},"unlisted":false,"prevItem":{"title":"The HassGetState intent","permalink":"/blog/2023/02/09/hassgetstate"},"nextItem":{"title":"Introducing drafting of PRs in our review process","permalink":"/blog/2023/02/07/introducing-PR-drafting-in-reviews"}},"content":"The number of decimal digits shown when displaying a sensor state is now configurable by the user. Integrations can suggest the number of\ndecimal digits by setting the property `suggested_display_precision`. Integrations are encouraged to remove rounding for display and instead set property `suggested_display_precision`.\n\nRound for presentation is done by the frontend, as well as by new template functions introduced in [core PR #87619](https://github.com/home-assistant/core/pull/87619).\n\nThe number of displayed decimal digits is influenced by unit conversion:\n  - Converting from a smaller to a larger unit increases the display precision\n  - Converting from a larger to a smaller unit decreases the display precision if the integration has set `suggested_display_precision`\n  - Minimum precision when converting from a larger to a smaller unit is 0, i.e. there's no rounding to tens, hundreds etc.\n\nThe number of displayed decimal digits is not influenced by unit conversion if the user has set the display precision themselves.\n\nNote:\nA similar concept where the sensor's state was rounded, detailed in [an earlier blog post](/blog/2023/01/25/sensor_rounding), has been reverted."},{"id":"/2023/02/07/introducing-PR-drafting-in-reviews","metadata":{"permalink":"/blog/2023/02/07/introducing-PR-drafting-in-reviews","source":"@site/blog/2023-02-07-introducing-PR-drafting-in-reviews.md","title":"Introducing drafting of PRs in our review process","description":"Home Assistant gets lots of contributions, which is absolutely amazing! But","date":"2023-02-07T00:00:00.000Z","tags":[],"readingTime":2.44,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Introducing drafting of PRs in our review process"},"unlisted":false,"prevItem":{"title":"The number of decimals used when displaying a sensor state is now configurable","permalink":"/blog/2023/02/08/sensor_presentation_rounding"},"nextItem":{"title":"Translation files removed from Core repository","permalink":"/blog/2023/02/06/translations-files-removed-from-core"}},"content":"Home Assistant gets lots of contributions, which is absolutely amazing! But\nwhen having lots of PRs, it becomes harder to keep track of the state of those.\n\nTo help with this, we are introducing a new process to our review process that\nautomatically drafts PRs when they require more work before they can be reviewed\nagain (or merged).\n\nWe have adjusted our bot to automatically draft PRs if a review has requested\nchanges to be made. Once the changes have been made, the author of the PR can\nclick the \"Ready for review\" button to un-draft the PR and make it ready for\nreview again.\n\n![The ready for review button in the bottom of a PR in draft mode](/img/en/blog/2023-02-07-introducing-PR-drafting-in-reviews/ready-for-review.png)\n\nBefore you click the \"Ready for review\" button, make sure you have addressed\nall requested changes, and all our CI jobs and checks are passing successfully.\n\n## What is a draft PR?\n\nA draft PR is a PR that is not ready for review yet. It is a way to let others\nknow that you are working on something, but it is not ready for review and\nmerging yet.\n\nDraft PRs are recognizable by the \"Draft\" label in the top right of the PR\nand show up with a grey merge icon eveywhere in the GitHub UI.\n\n![This is what a PR in draft looks like](/img/en/blog/2023-02-07-introducing-PR-drafting-in-reviews/pr-in-draft.png)\n\nThis doesn't mean you should open a PR to start working on something; please\nonly open a PR if you think it is ready for review and merging. However,\nafter opening a PR, there may be a reason to put it back into draft state.\n\nFor example, opening a PR will automatically trigger our CI jobs\nand checks. These checks can reveal issues in your code that need adjustments,\nor of course, an actual review took place that requested changes.\n\nYou can put any of your PRs back into draft at any moment, by clicking\nthe \"Convert to draft\" link in the top right of your PR.\n\n![Putting a PR in draft is something you can do too](/img/en/blog/2023-02-07-introducing-PR-drafting-in-reviews/convert-to-draft.png)\n\n## Why are we doing this?\n\nAs a reviewer, you are presented with a lot of PRs. Some of them are ready for\nreview, and some of them are not. Typically, the only way to find out, is to open\nthe PR and look at it, to discover it is still in progress.\n\nThis is not only a waste of time but also a waste of energy. Especially\nconsidering this happens to multiple reviewers on the same PR multiple times\na day.\n\nThe draft state of a PR is visible in all places in GitHub. In notifications,\nsearches, and just the overview of PRs. Above all, it is easily filterable.\n\nThis gives reviewers a better focus on what can actually use their attention\nright now.\n\nMore background information can be found in this\n[Google Document](https://docs.google.com/document/d/11_x2YUmAD07JN7JMM4YIIAWVGTJsOB0UptN8hlmWFWg/edit?usp=sharing).\n\nOr, [read all about our review process on this page](/docs/review-process)."},{"id":"/2023/02/06/translations-files-removed-from-core","metadata":{"permalink":"/blog/2023/02/06/translations-files-removed-from-core","source":"@site/blog/2023-02-06-translations-files-removed-from-core.md","title":"Translation files removed from Core repository","description":"We have removed all translation files from the Home Assistant Core repository","date":"2023-02-06T00:00:00.000Z","tags":[],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Translation files removed from Core repository"},"unlisted":false,"prevItem":{"title":"Introducing drafting of PRs in our review process","permalink":"/blog/2023/02/07/introducing-PR-drafting-in-reviews"},"nextItem":{"title":"Intent Responses and Whitespace","permalink":"/blog/2023/02/03/responses"}},"content":"We have removed all translation files from the Home Assistant Core repository\nand put in place a helper script to compile English translations from the\ntranslation strings files (`strings.json`) for development purposes.\n\nPreviously, all translation files (including all languages) were part of the\nHome Assistant Core repository. Every night we would update the translations\nby downloading them from Lokalise and committing them into the Core repository.\n\nInstead, we have moved this process @ build time. We now download the latest\ntranslations from Lokalise when we ship a new release (including betas\n& nightly builds).\n\nThis approach comes with some benefits:\n\n- We no longer have to commit translation files into the Core repository.\n  This means as a developer, this is also no longer a confusing burden.\n- People will no longer (incorrectly) try to contribute language\n  translations via GitHub.\n- Each release, including patch, beta, and nightly versions,\n  will now also have the latest translations.\n\n## Local development\n\nFor local development, we have our translations development helper script. This\nalways has been in place already, except now, it can compile the English\ntranslations for all integrations at once.\n\n```bash\npython3 -m script.translations develop --all\n```\n\nThis script is automatically run when a dev environment is set up, and each\ntime you run running Home Assistant in your VSCode (as a pre-launch task)."},{"id":"/2023/02/03/responses","metadata":{"permalink":"/blog/2023/02/03/responses","source":"@site/blog/2023-02-03-responses.md","title":"Intent Responses and Whitespace","description":"The intents repository which powers Assist, has had two important changes.","date":"2023-02-03T00:00:00.000Z","tags":[],"readingTime":0.745,"hasTruncateMarker":false,"authors":[{"name":"Michael Hansen","url":"https://twitter.com/rhasspy","imageURL":"/img/profile/mike_hansen.png","key":null,"page":null}],"frontMatter":{"author":"Michael Hansen","authorURL":"https://twitter.com/rhasspy","authorImageURL":"/img/profile/mike_hansen.png","authorTwitter":"rhasspy","title":"Intent Responses and Whitespace"},"unlisted":false,"prevItem":{"title":"Translation files removed from Core repository","permalink":"/blog/2023/02/06/translations-files-removed-from-core"},"nextItem":{"title":"Sensor entity can now do rounding of numerical values","permalink":"/blog/2023/01/25/sensor_rounding"}},"content":"The [intents repository](https://github.com/home-assistant/intents/) which powers [Assist](https://www.home-assistant.io/docs/assist), has had two important changes.\n\nFirst, data blocks in the intents YAML can now have a `response` key. For example:\n\n```yaml\nlanguage: en\nintents:\n  HassTurnOn:\n    data:\n      - sentences:\n          - \"open {name}\"\n        response: cover\n```\n\nA response with a matching key must be defined in `responses/<language>/<intent>.yaml`:\n\n```yaml\nlanguage: en\nresponses:\n  intents:\n    HassTurnOn:\n      cover: \"Opened {{ slots.name }}\"\n```\n\nResponse templates are in the [Jinja2 format](https://www.home-assistant.io/docs/configuration/templating/), and may access the matched intent's `slots` as well as the `state` of the affected entity.\n\nThe second change comes from [hassil](https://github.com/home-assistant/hassil), the parser for our [intent template syntax](/docs/voice/intent-recognition/template-sentence-syntax/). In addition to an 8-10x speed-up in parsing, whitespace inside templates is taken literally.\n\nPreviously, a template like `light(s | ing)` would match both \"lights\" and \"lighting\". Now, \"light s\" and \"light ing\" would be matched instead due to the extra space around `|`. The correct template would be `light(s|ing)`"},{"id":"/2023/01/25/sensor_rounding","metadata":{"permalink":"/blog/2023/01/25/sensor_rounding","source":"@site/blog/2023-01-25-sensor_rounding.md","title":"Sensor entity can now do rounding of numerical values","description":"Note:","date":"2023-01-25T00:00:00.000Z","tags":[],"readingTime":1.26,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Sensor entity can now do rounding of numerical values"},"unlisted":false,"prevItem":{"title":"Intent Responses and Whitespace","permalink":"/blog/2023/02/03/responses"},"nextItem":{"title":"Future proofing the Conversation integration","permalink":"/blog/2023/01/24/conversation-updates"}},"content":"Note:\nThe changes described here have been reverted and replaced with rounding for presentation, more details can be found in [this blog post](/blog/2023/02/08/sensor_presentation_rounding).\n\n`SensorEntity` can now do rounding of a numerical `native_value` when it's converted to the sensor state. This is implemented as a part of [core PR #86074](https://github.com/home-assistant/core/pull/86074). The rounding is opt-in by integrations setting the `native_precision` property. It is recommended that this property is set by integrations because it ensures the number of decimals is reasonable also after unit conversion.\n\nA summary of the changes, copied from the PR description:\n\n- By default, no rounding is done\n  - Integrations can influence the state precision by setting a new property `native_precision`\n- The state precision is influenced by unit conversion\n  - Converting from a smaller to a larger unit increases the display precision\n  - Converting from a larger to a smaller unit decreases the display precision if the integration has set `native_precision`\n  - Minimum precision when converting from a larger to a smaller unit is 0, i.e. there's no rounding to tens, hundreds etc.\n- User can override the display precision from the frontend\n  - There's no minimum precision, i.e. rounding to tens, hundreds, etc. is possible by setting a negative precision\n- Integrations are encouraged to drop rounding for display and instead set property `native_precision`\n- Trailing zeroes are added to the sensor state's string representation to match the precision if:\n  - The precision is set by user\n  - The `native_precision` property is not `None`\n  - Unit conversion is done"},{"id":"/2023/01/24/conversation-updates","metadata":{"permalink":"/blog/2023/01/24/conversation-updates","source":"@site/blog/2023-01-24-conversation-updates.md","title":"Future proofing the Conversation integration","description":"The Home Assistant 2023.2 release contains PR 86592 and PR 86484 which include breaking changes to the conversation agent API to future proof it.","date":"2023-01-24T00:00:00.000Z","tags":[],"readingTime":0.49,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","title":"Future proofing the Conversation integration"},"unlisted":false,"prevItem":{"title":"Sensor entity can now do rounding of numerical values","permalink":"/blog/2023/01/25/sensor_rounding"},"nextItem":{"title":"Cover intents deprecated","permalink":"/blog/2023/01/20/cover-intent-deprecated"}},"content":"The Home Assistant 2023.2 release contains [PR 86592](https://github.com/home-assistant/core/pull/86592) and [PR 86484](https://github.com/home-assistant/core/pull/86484) which include breaking changes to [the conversation agent](/docs/core/entity/conversation) API to future proof it.\n\n- Setting an agent now requires a config entry: `conversation.async_set_agent(hass, config_entry, agent).\n- Unsetting an agent now goes via a new endpoint: `conversation.async_unset_agent(hass, config_entry)\n- `AbstractConversationAgent` API has changed:\n  - All onboarding logic removed\n  - `async_process` now takes new `ConversationInput` parameter with the same arguments. Language is now always set.\n  - `async_process` should now always return a `ConversationResult`. It's no longer allowed to return `None` or expect error handling to be done for you."},{"id":"/2023/01/20/cover-intent-deprecated","metadata":{"permalink":"/blog/2023/01/20/cover-intent-deprecated","source":"@site/blog/2023-01-20-cover-intent-deprecated.md","title":"Cover intents deprecated","description":"The intents HassCoverOpen and HassCoverClose have been deprecated as of Home Assistant 2023.02. Instead, use the intents HassTurnOn and HassTurnOff. This was done because some languages do not differentiate between Open/On and Close/Off.","date":"2023-01-20T00:00:00.000Z","tags":[],"readingTime":0.165,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","title":"Cover intents deprecated"},"unlisted":false,"prevItem":{"title":"Future proofing the Conversation integration","permalink":"/blog/2023/01/24/conversation-updates"},"nextItem":{"title":"Bluetooth updates for 2023.2 and later","permalink":"/blog/2023/01/12/bluetooth-adapters"}},"content":"The intents `HassCoverOpen` and `HassCoverClose` have been deprecated as of Home Assistant 2023.02. Instead, use the intents `HassTurnOn` and `HassTurnOff`. This was done because some languages do not differentiate between Open/On and Close/Off."},{"id":"/2023/01/12/bluetooth-adapters","metadata":{"permalink":"/blog/2023/01/12/bluetooth-adapters","source":"@site/blog/2023-01-12-bluetooth-adapters.md","title":"Bluetooth updates for 2023.2 and later","description":"Integrations that need to use a Bluetooth adapter should add bluetoothadapters in dependencies in their manifest.json. The manifest.json entry ensures that all supported remote adapters are connected before the integration tries to use them. This replaces the need to add bluetooth in dependencies.","date":"2023-01-12T00:00:00.000Z","tags":[],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Bluetooth updates for 2023.2 and later"},"unlisted":false,"prevItem":{"title":"Cover intents deprecated","permalink":"/blog/2023/01/20/cover-intent-deprecated"},"nextItem":{"title":"Database schema v32 updates","permalink":"/blog/2023/01/02/db-schema-v32"}},"content":"Integrations that need to use a Bluetooth adapter should add `bluetooth_adapters` in [`dependencies`](/docs/creating_integration_manifest#dependencies) in their [`manifest.json`](/docs/creating_integration_manifest). The [`manifest.json`](/docs/creating_integration_manifest) entry ensures that all supported remote adapters are connected before the integration tries to use them. This replaces the need to add `bluetooth` in [`dependencies`](/docs/creating_integration_manifest#dependencies).\n\nIntegrations that provide a Bluetooth adapter should add `bluetooth` in [`dependencies`](/docs/creating_integration_manifest#dependencies) in their [`manifest.json`](/docs/creating_integration_manifest) and be added to [`after_dependencies`](/docs/creating_integration_manifest#after-dependencies) to the `bluetooth_adapters` integration.\n\nBe sure to check out [Best practices for integration authors](/docs/bluetooth/#best-practices-for-integration-authors) when building new Bluetooth integrations."},{"id":"/2023/01/02/db-schema-v32","metadata":{"permalink":"/blog/2023/01/02/db-schema-v32","source":"@site/blog/2023-01-02-db-schema-v32.md","title":"Database schema v32 updates","description":"For Home Assistant Core 2023.2 the database schema has changed.","date":"2023-01-02T00:00:00.000Z","tags":[],"readingTime":0.25,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Database schema v32 updates"},"unlisted":false,"prevItem":{"title":"Bluetooth updates for 2023.2 and later","permalink":"/blog/2023/01/12/bluetooth-adapters"},"nextItem":{"title":"Multi-pan temporarily disabled","permalink":"/blog/2022/12/08/multi-pan-rollback"}},"content":"For Home Assistant Core 2023.2 the database schema has changed.\n\nThis change affects custom integrations that do not use the `recorder` [`history`](https://github.com/home-assistant/core/blob/dev/homeassistant/components/recorder/history.py) API and access the `last_updated`, `last_changed`, or `time_fired` columns directly.\n\nThe documentation for the [`events`](https://data.home-assistant.io/docs/events) and [`states`](https://data.home-assistant.io/docs/events/) have been updated and is available at the [Data Science Portal](https://data.home-assistant.io/)."},{"id":"/2022/12/08/multi-pan-rollback","metadata":{"permalink":"/blog/2022/12/08/multi-pan-rollback","source":"@site/blog/2022-12-08-multi-pan-rollback.md","title":"Multi-pan temporarily disabled","description":"Update: multi-pan has been fixed and users can once again opt-in to the experimental version starting Home Assistant 2023.2.","date":"2022-12-08T00:00:00.000Z","tags":[],"readingTime":1.135,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Multi-pan temporarily disabled"},"unlisted":false,"prevItem":{"title":"Database schema v32 updates","permalink":"/blog/2023/01/02/db-schema-v32"},"nextItem":{"title":"Entity state color changes","permalink":"/blog/2022/12/07/entity-color-changes"}},"content":"**Update:** multi-pan has been fixed and users can once again opt-in to the experimental version starting Home Assistant 2023.2.\n\nIn [Home Assistant 2022.12](https://www.home-assistant.io/blog/2022/12/07/release-202212/) we soft-launched our experimental multi-pan feature: allowing to run both Zigbee and Thread using the single radio found in both Home Assistant Yellow and Home Assistant SkyConnect. Users had to find it in the hardware menu, confirm the experimental note and opt-in.\n\nWe just found a serious bug in the firmware that we need to fix. That's why we have decided to temporarily disable allowing users to opt in to multi-pan starting Home Assistant 2022.12.1.\n\nThe bug is that Zigbee end-devices cannot rejoin the network through the coordinator: it kicks them and asks them to re-join, over and over. Normal EmberZNet firmware does not behave this way. It only affects end devices joined directly to the coordinator, not ones joining through an intermediate router, and only those that attempt to re-join the network.\n\nWe're working with Silicon Labs to get this issue resolved as soon as possible. Once resolved, we will re-enable multi-pan.\n\nEnabling multi-pan installs a special firmware on your radio. To disable multi-pan, the original Zigbee firmware needs to be installed again. This is not something that can be done automatically from Home Assistant yet. We will be updating this post soon with instructions on how to do this via your browser."},{"id":"/2022/12/07/entity-color-changes","metadata":{"permalink":"/blog/2022/12/07/entity-color-changes","source":"@site/blog/2022-12-07-entity-color-changes.md","title":"Entity state color changes","description":"From the Home Assistant Core 2022.12 release, we are using different colors per domain when an entity is active. These CSS variables are no longer used:","date":"2022-12-07T00:00:00.000Z","tags":[],"readingTime":0.48,"hasTruncateMarker":false,"authors":[{"name":"Paul Bottein","url":"https://github.com/piitaya","key":null,"page":null}],"frontMatter":{"author":"Paul Bottein","authorURL":"https://github.com/piitaya","title":"Entity state color changes"},"unlisted":false,"prevItem":{"title":"Multi-pan temporarily disabled","permalink":"/blog/2022/12/08/multi-pan-rollback"},"nextItem":{"title":"Summary of unit system related changes","permalink":"/blog/2022/12/07/unit_system_changes"}},"content":"From the Home Assistant Core 2022.12 release, we are using different colors per domain when an entity is active. These CSS variables are no longer used:\n\n- `--paper-item-icon-active-color`\n- `--state-icon-active-color`\n\nThis means that any theme that has previously overridden these CSS variables will use the built-in colors for active states. All theses new colors are available as CSS variables too.\n\n:::caution\nAs we only officially support the `primary-color` and `accent-color` properties for themes, some colors can be added or removed between releases.\n:::\n\nMore details about theme configuration can be found in the [Home Assistant documentation](https://www.home-assistant.io/integrations/frontend/#defining-themes)."},{"id":"/2022/12/07/unit_system_changes","metadata":{"permalink":"/blog/2022/12/07/unit_system_changes","source":"@site/blog/2022-12-07-unit_system_changes.md","title":"Summary of unit system related changes","description":"The last few months saw many changes to the supported unit systems, and how numerical sensors are influenced by them. This blog post attempts to summarize the changes.","date":"2022-12-07T00:00:00.000Z","tags":[],"readingTime":1.97,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Summary of unit system related changes"},"unlisted":false,"prevItem":{"title":"Entity state color changes","permalink":"/blog/2022/12/07/entity-color-changes"},"nextItem":{"title":"Add  more unit enumerators","permalink":"/blog/2022/12/05/more-unit-enumerators"}},"content":"The last few months saw many changes to the supported unit systems, and how numerical sensors are influenced by them. This blog post attempts to summarize the changes.\n\n- The unit used for the state of a sensor whose device class is either of `distance`, `gas`, `precipitation`, `precipitation_intensity`, `speed`, `volume`, `water`, `weight`, or `wind_speed` is influenced by the unit system and automatically converted.\n  - Integrations can override the unit system rules by setting the entity property `suggested_unit_of_measurement`.\n  - To avoid breaking changes, the unit of a sensor is automatically converted according to the unit system rules *only the first time the sensor is added to Home Assistant*. This means sensors already in the user's system won't be affected by the new unit conversion rule.\n  - If the user changes the unit system in their preferences, the units of sensors already in the user's system won't be affected by the unit system change.\n  - Integrations, in most cases, no longer have to do any unit conversion as it is now automatically handled.\n  - Existing integration specific code implementing unit conversion can, in most cases, be removed as the sensor's state will be automatically converted after the custom code is removed. For details on how this works, see [core PR #83228](https://github.com/home-assistant/core/pull/83228). Note: This only works for sensors with a `unique_id`.\n  - Custom option flows which allows the user to select sensor units for an integration can, in most cases, be removed. The user can instead override the sensor's unit via entity settings in frontend if the automatic conversion according to the selected unit system is not to their liking. Note: This only works for sensors with a `unique_id`.\n- The behavior of temperature sensors is mostly unchanged; the unit of a temperature sensors state will always reflect the unit system unless:\n  - The user has overridden the unit via entity settings in the frontend.\n  - The temperature sensor has a non-None `suggested_unit_of_measurement` property.\n- The `IMPERIAL_SYSTEM` unit system has been deprecated, and replaced with `US_CUSTOMARY_SYSTEM`. Furthermore, the `is_metric` and `name` properties of a unit system are deprecated and should not be used. More details about these changes can be found in this [blog post](/blog/2022/10/14/deprecate-unit-system).\n- The unit conversion utilities have been refactored and moved, unit converters are now available as static classes in `homeassistant/util/unit_conversion`. More details about these changes can be found in this [blog post](/blog/2022/09/28/deprecate-conversion-utilities)."},{"id":"/2022/12/05/more-unit-enumerators","metadata":{"permalink":"/blog/2022/12/05/more-unit-enumerators","source":"@site/blog/2022-12-05-more-unit-enumerators.md","title":"Add  more unit enumerators","description":"As of Home Assistant Core 2023.1, the following unit constants are deprecated and replaced","date":"2022-12-05T00:00:00.000Z","tags":[],"readingTime":0.39,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Add  more unit enumerators"},"unlisted":false,"prevItem":{"title":"Summary of unit system related changes","permalink":"/blog/2022/12/07/unit_system_changes"},"nextItem":{"title":"Translating the state of entities","permalink":"/blog/2022/12/01/entity_translations"}},"content":"As of Home Assistant Core 2023.1, the following unit constants are deprecated and replaced \nby a corresponding enum:\n\n  - `UnitOfApparentPower` enumerator replaces `POWER_VOLT_AMPERE` constant\n  - `UnitOfDataRate` enumerator replaces `DATA_RATE_***` constants\n  - `UnitOfElectricCurrent` enumerator replaces `ELECTRIC_CURRENT_***` constants\n  - `UnitOfElectricPotential` enumerator replaces `ELECTRIC_POTENTIAL_***` constants\n  - `UnitOfFrequency` enumerator replaces `FREQUENCY_***` constants\n  - `UnitOfInformation` enumerator replaces `DATA_***` constants\n  - `UnitOfIrradiance` enumerator replaces `IRRADIATION_***` constants\n  - `UnitOfSoundPressure` enumerator replaces `SOUND_PRESSURE_***` constants\n  - `UnitOfTime` enumerator replaces `TIME_***` constants\n  - `UnitOfVolumeFlowRate` enumerator replaces `VOLUME_FLOW_RATE_***` constants"},{"id":"/2022/12/01/entity_translations","metadata":{"permalink":"/blog/2022/12/01/entity_translations","source":"@site/blog/2022-12-01-entity_translations.md","title":"Translating the state of entities","description":"The method for integrations to provide translations for states of its entities under other integrations, for example to translate an integration's sensors has changed.","date":"2022-12-01T00:00:00.000Z","tags":[],"readingTime":0.645,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Translating the state of entities"},"unlisted":false,"prevItem":{"title":"Add  more unit enumerators","permalink":"/blog/2022/12/05/more-unit-enumerators"},"nextItem":{"title":"Add  more unit enumerators","permalink":"/blog/2022/11/28/more-unit-enumerators"}},"content":"The method for integrations to provide translations for states of its entities under other integrations, for example to translate an integration's sensors has changed.\n\nIntegrations should no longer use custom device classes together with a `strings.<platform name>.json` file. Instead, entities should set the `translation_key` property on an entity and include that `translation_key` in the integration's `strings.json`.\n\n:::warning\nPointing to translations via the `translation_key` property is currently only supported for entities with a `unique_id`.\n:::\n\nThe following example `strings.json` is for a Moon domain `sensor` entity with its `translation_key` property set to `phase`:\n\n```json\n{\n  \"entity\": {\n    \"sensor\": {\n      \"phase\": {\n        \"state\": {\n          \"new_moon\": \"New moon\",\n          \"first_quarter\": \"First quarter\",\n          \"full_moon\": \"Full moon\",\n          \"last_quarter\": \"Last quarter\"\n        }\n      }\n    }\n  }\n}\n```\n\nFor more details, see the [`translation`](/docs/internationalization/core/#state-of-entities) and [`entity`](/docs/core/entity#generic-properties) documentation."},{"id":"/2022/11/28/more-unit-enumerators","metadata":{"permalink":"/blog/2022/11/28/more-unit-enumerators","source":"@site/blog/2022-11-28-more-unit-enumerators.md","title":"Add  more unit enumerators","description":"As of Home Assistant Core 2022.12, the following unit constants are deprecated and replaced","date":"2022-11-28T00:00:00.000Z","tags":[],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Add  more unit enumerators"},"unlisted":false,"prevItem":{"title":"Translating the state of entities","permalink":"/blog/2022/12/01/entity_translations"},"nextItem":{"title":"Changes to long term statistics APIs","permalink":"/blog/2022/11/16/statistics_refactoring"}},"content":"As of Home Assistant Core 2022.12, the following unit constants are deprecated and replaced \nby a corresponding enum:\n\n  - `UnitOfPrecipitationDepth` enumerator replaces `PRECIPITATION_***` constants"},{"id":"/2022/11/16/statistics_refactoring","metadata":{"permalink":"/blog/2022/11/16/statistics_refactoring","source":"@site/blog/2022-11-16-statistics_refactoring.md","title":"Changes to long term statistics APIs","description":"Some changes have been made to the long-term statistics-related APIs to reduce response size and database load.","date":"2022-11-16T00:00:00.000Z","tags":[],"readingTime":1.845,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Changes to long term statistics APIs"},"unlisted":false,"prevItem":{"title":"Add  more unit enumerators","permalink":"/blog/2022/11/28/more-unit-enumerators"},"nextItem":{"title":"Introducing new unit enumerators","permalink":"/blog/2022/10/26/new-unit-enumerators"}},"content":"Some changes have been made to the long-term statistics-related APIs to reduce response size and database load.\n\nThe changes are implemented in [this PR](https://github.com/home-assistant/core/pull/82131).\n\nThis affects authors of code calling the following WS APIs:\n - `recorder/statistics_during_period`\n   - A new optional parameter `types` has been added, which allows providing a list of statistics characteristics to include in the response. Possible values are: `\"last_reset\"`, `\"max\"`, `\"mean\"`, `\"min\"`, `\"state\"`, `\"sum\"`\n   - Timestamps `start`, `end` and `last_reset` are now an integer number of ms since the UNIX epoch instead of ISO-formatted strings. The new format means the timestamps can be passed directly to js `Date()` constructor.\n   - The `statistic_id` is no longer repeated for each list item in the returned map. This was not used because the return type is a map, keyed by `statistic_id`.\n\nThis affects authors of code calling the following Python APIs:\n- `homeassistant.recorder.statistics.get_last_short_term_statistics`\n  - A new parameter `types` has been added, which allows providing a set of statistics characteristics to include in the response. Possible values are: `\"last_reset\"`, `\"max\"`, `\"mean\"`, `\"min\"`, `\"state\"`, `\"sum\"`\n  - Timestamps `start`, `end` and `last_reset` are now an `datetime` objects instead of ISO-formatted strings.\n  - The `statistic_id` is no longer repeated for each list item in the returned map. This was not used because the return type is a map, keyed by `statistic_id`.\n- `homeassistant.recorder.statistics.get_latest_short_term_statistics`\n  - A new parameter `types` has been added, which allows providing a set of statistics characteristics to include in the response. Possible values are: `\"last_reset\"`, `\"max\"`, `\"mean\"`, `\"min\"`, `\"state\"`, `\"sum\"`\n  - Timestamps `start`, `end` and `last_reset` are now an `datetime` objects instead of ISO-formatted strings.\n  - The `statistic_id` is no longer repeated for each list item in the returned map. This was not used because the return type is a map, keyed by `statistic_id`.\n- `homeassistant.recorder.statistics.statistics_during_period`\n  - A new parameter `types` has been added, which allows providing a set of statistics characteristics to include in the response. Possible values are: `\"last_reset\"`, `\"max\"`, `\"mean\"`, `\"min\"`, `\"state\"`, `\"sum\"`\n  - Timestamps `start`, `end` and `last_reset` are now an `datetime` objects instead of ISO-formatted strings.\n  - The `statistic_id` is no longer repeated for each list item in the returned map. This was not used because the return type is a map, keyed by `statistic_id`."},{"id":"/2022/10/26/new-unit-enumerators","metadata":{"permalink":"/blog/2022/10/26/new-unit-enumerators","source":"@site/blog/2022-10-26-new-unit-enumerators.md","title":"Introducing new unit enumerators","description":"As of Home Assistant Core 2022.11, the following unit constants are deprecated and replaced","date":"2022-10-26T00:00:00.000Z","tags":[],"readingTime":0.33,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Introducing new unit enumerators"},"unlisted":false,"prevItem":{"title":"Changes to long term statistics APIs","permalink":"/blog/2022/11/16/statistics_refactoring"},"nextItem":{"title":"Add new precipitation intensity units","permalink":"/blog/2022/10/25/new-precipitation-intensity-units"}},"content":"As of Home Assistant Core 2022.11, the following unit constants are deprecated and replaced \nby a corresponding enum:\n\n  - `UnitOfEnergy` enumerator replaces `ENERGY_***` constants\n  - `UnitOfLength` enumerator replaces `LENGTH_***` constants\n  - `UnitOfMass` enumerator replaces `MASS_***` constants\n  - `UnitOfPower` enumerator replaces `POWER_***` constants\n  - `UnitOfPressure` enumerator replaces `PRESSURE_***` constants\n  - `UnitOfSpeed` enumerator replaces `SPEED_***` constants\n  - `UnitOfTemperature` enumerator replaces `TEMP_***` constants\n  - `UnitOfVolume` enumerator replaces `VOLUME_***` constants"},{"id":"/2022/10/25/new-precipitation-intensity-units","metadata":{"permalink":"/blog/2022/10/25/new-precipitation-intensity-units","source":"@site/blog/2022-10-25-new-precipitation-intensity-units.md","title":"Add new precipitation intensity units","description":"As of Home Assistant Core 2022.11, the following constants are deprecated for volumetric flux (like precipitation intensity), replaced by UnitOfVolumetricFlux enum:","date":"2022-10-25T00:00:00.000Z","tags":[],"readingTime":0.23,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Add new precipitation intensity units"},"unlisted":false,"prevItem":{"title":"Introducing new unit enumerators","permalink":"/blog/2022/10/26/new-unit-enumerators"},"nextItem":{"title":"Introducing virtual integrations and differentiating hubs, devices, and services,","permalink":"/blog/2022/10/24/hubs-devices-services-virtual-integrations"}},"content":"As of Home Assistant Core 2022.11, the following constants are deprecated for volumetric flux (like precipitation intensity), replaced by `UnitOfVolumetricFlux` enum:\n\n  - `PRECIPITATION_INCHES_PER_HOUR` replaced by `UnitOfVolumetricFlux.INCHES_PER_HOUR`\n  - `PRECIPITATION_MILLIMETERS_PER_HOUR` replaced by `UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR`\n  - `SPEED_INCHES_PER_DAY` replaced by `UnitOfVolumetricFlux.INCHES_PER_DAY`\n  - `SPEED_INCHES_PER_HOUR` replaced by `UnitOfVolumetricFlux.INCHES_PER_HOUR`\n  - `SPEED_MILLIMETERS_PER_DAY` replaced by `UnitOfVolumetricFlux.MILLIMETERS_PER_DAY`"},{"id":"/2022/10/24/hubs-devices-services-virtual-integrations","metadata":{"permalink":"/blog/2022/10/24/hubs-devices-services-virtual-integrations","source":"@site/blog/2022-10-24-hubs-devices-services-virtual-integrations.md","title":"Introducing virtual integrations and differentiating hubs, devices, and services,","description":"For the 2022.11 release, we have been adjusting our integration manifests","date":"2022-10-24T00:00:00.000Z","tags":[],"readingTime":2.08,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Introducing virtual integrations and differentiating hubs, devices, and services,"},"unlisted":false,"prevItem":{"title":"Add new precipitation intensity units","permalink":"/blog/2022/10/25/new-precipitation-intensity-units"},"nextItem":{"title":"GitHub Commands for Code Owners","permalink":"/blog/2022/10/21/code-owner-commands"}},"content":"For the 2022.11 release, we have been adjusting our integration manifests\nto  better differentiate between hubs, devices, and services. Additionally,\nwe are introducing a new type of integration: A virtual integration.\n\n## Differentiating hubs, devices, and services\n\nA confusing aspect: config entries can either integrate a single device (ESPHome),\na whole range of devices via a hub (Hue), or a service (AdGuard).\n\nWe want to start to distinguish between those in the UI in the near future,\nbut are not currently able to do this because integrations don’t expose this\ninformation.\n\nWe already have a [`integration_type`](/docs/creating_integration_manifest#integration-type)\nmanifest property, which we have extended to support these new types:\n\n- `device`: The integration integrates a single device at a time.\n- `hub`: The integration integrates multiple devices.\n- `service`: The integration integrates a service.\n\nThe difference between a `hub` and a `service` or `device` is defined by the\nnature of the integration. A `hub` provides a gateway to multiple other \ndevices or services. `service` and `device` are integrations that provide\na single device or service per config entry.\n\n:::caution\nWhen the [`integration_type`](/docs/creating_integration_manifest#integration-type)\nisn't set, we default it automatically to `hub`. This is a temporary fallback.\nWe will make setting [`integration_type`](/docs/creating_integration_manifest#integration-type)\nexplicitly mandatory in the future.\n\nPlease update your existing (custom) integrations to set the correct `integration_type`\nin the integration manifest.\n:::\n\n## Virtual integrations\n\nSome products are supported by integrations that are not named after the product.\nFor example, Roborock vacuums are integrated via the Xiaomi Miio integration.\n\nThere are also cases where a product line only supports a standard IoT standard\nlike Zigbee or Z-Wave. For example, the U-tec ultraloq works via Z-Wave and\nhas no specific dedicated integration.\n\nFor end-users, it can be confusing to find how to integrate those products\nwith Home Asssistant. To help with these above cases, we introduce:\n[Virtual integrations](/docs/creating_integration_manifest#virtual-integration).\n\nVirtual integrations are not real integrations but are used to help users\nfind the right integration for their device. They only have a single manifest\nfile without any additional code.\n\nThere are two types of virtual integrations: A virtual integration supported\nby another integration and one that uses an existing IoT standard.\n\n[Read more about it in our developer documentation.](/docs/creating_integration_manifest#virtual-integration)\n\n## Removing the supported brands feature\n\nVirtual integrations replace the previous \"supported brands\" feature. This\nfeature was only used by Home Assistant Core integrations, and all those have\nbeen migrated to use virtual integrations instead.\n\nThere is no usage left, therefore, the supported brands feature has been\nremoved without a deprecation period."},{"id":"/2022/10/21/code-owner-commands","metadata":{"permalink":"/blog/2022/10/21/code-owner-commands","source":"@site/blog/2022-10-21-code-owner-commands.md","title":"GitHub Commands for Code Owners","description":"The Home Assistant service hub has been extended by Ludeeus with a new feature: GitHub commands for code owners.","date":"2022-10-21T00:00:00.000Z","tags":[],"readingTime":0.575,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"GitHub Commands for Code Owners"},"unlisted":false,"prevItem":{"title":"Introducing virtual integrations and differentiating hubs, devices, and services,","permalink":"/blog/2022/10/24/hubs-devices-services-virtual-integrations"},"nextItem":{"title":"Deprecate IMPERIAL_SYSTEM unit system and linked constants and properties","permalink":"/blog/2022/10/14/deprecate-unit-system"}},"content":"The Home Assistant [service hub](https://github.com/home-assistant/service-hub/) has been extended by [Ludeeus](https://github.com/ludeeus) with a new feature: GitHub commands for code owners.\n\nThis feature allows any code owner to triage issues that are labeled with their integration. The following commands are available starting today:\n\n* `@home-assistant close`<br />\n  Close the issue. Limited to when there is only 1 integration labeled\n\n* `@home-assistant rename New Title`<br />\n  Change the title of the issue. Limited to when there is only 1 integration labeled\n\n* `@home-assistant unassign <your domain>`<br />\n  Remove the integration label and related assignees.\n\nThe bot will include these commands when it posts a comment to notify a code owner of a new issue or pull request ([example](https://github.com/home-assistant/core/issues/80731#issuecomment-1287084569))."},{"id":"/2022/10/14/deprecate-unit-system","metadata":{"permalink":"/blog/2022/10/14/deprecate-unit-system","source":"@site/blog/2022-10-14-deprecate-unit-system.md","title":"Deprecate IMPERIAL_SYSTEM unit system and linked constants and properties","description":"As of Home Assistant Core 2022.11, the IMPERIALSYSTEM is deprecated, replaced by USCUSTOMARY_SYSTEM.","date":"2022-10-14T00:00:00.000Z","tags":[],"readingTime":0.59,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Deprecate IMPERIAL_SYSTEM unit system and linked constants and properties"},"unlisted":false,"prevItem":{"title":"GitHub Commands for Code Owners","permalink":"/blog/2022/10/21/code-owner-commands"},"nextItem":{"title":"Add options to SelectEntityDescription","permalink":"/blog/2022/10/10/add-options-to-SelectEntityDescription"}},"content":"As of Home Assistant Core 2022.11, the `IMPERIAL_SYSTEM` is deprecated, replaced by `US_CUSTOMARY_SYSTEM`.\nThe `is_metric` and `name` properties of a unit system are likewise deprecated and should not be used.\n\nCustom integrations referencing this unit system or these properties will need to be adjusted to use instance checks instead.\n\nCorrect:\n```python\nif hass.config.units is METRIC_SYSTEM:\n    pass\n\nif hass.config.units is US_CUSTOMARY_SYSTEM:\n    pass\n```\n\nTo avoid confusion with future unit systems, the constants `CONF_UNIT_SYSTEM_IMPERIAL` \nand `CONF_UNIT_SYSTEM_METRIC` are also deprecated and should no longer be referenced:\n  - if they were used to compare against the `name` of a unit system, \n  then this is no longer needed.\n  - if they were used for another reason, then local constants should be created instead."},{"id":"/2022/10/10/add-options-to-SelectEntityDescription","metadata":{"permalink":"/blog/2022/10/10/add-options-to-SelectEntityDescription","source":"@site/blog/2022-10-10-add-options-to-SelectEntityDescription.md","title":"Add options to SelectEntityDescription","description":"As of Home Assistant Core 2022.11, options is available as a standard property of SelectEntityDescription.","date":"2022-10-10T00:00:00.000Z","tags":[],"readingTime":0.22,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Add options to SelectEntityDescription"},"unlisted":false,"prevItem":{"title":"Deprecate IMPERIAL_SYSTEM unit system and linked constants and properties","permalink":"/blog/2022/10/14/deprecate-unit-system"},"nextItem":{"title":"Long term statistics now tracks the source entity's unit","permalink":"/blog/2022/09/29/statistics_refactoring"}},"content":"As of Home Assistant Core 2022.11, `options` is available as a standard property of `SelectEntityDescription`.\nThis might cause issues in custom integrations if a custom `options` property was previously implemented.\n\nPlease adjust the custom integration by either dropping or renaming the custom `options` property."},{"id":"/2022/09/29/statistics_refactoring","metadata":{"permalink":"/blog/2022/09/29/statistics_refactoring","source":"@site/blog/2022-09-29-statistics_refactoring.md","title":"Long term statistics now tracks the source entity's unit","description":"Long term statistics now allows showing statistics in a different unit than it's stored in. For example, it's possible to show statistics stored as kWh as Wh, kWh or MWh.","date":"2022-09-29T00:00:00.000Z","tags":[],"readingTime":0.675,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Long term statistics now tracks the source entity's unit"},"unlisted":false,"prevItem":{"title":"Add options to SelectEntityDescription","permalink":"/blog/2022/10/10/add-options-to-SelectEntityDescription"},"nextItem":{"title":"Deprecating unit conversion utilities","permalink":"/blog/2022/09/28/deprecate-conversion-utilities"}},"content":"Long term statistics now allows showing statistics in a different unit than it's stored in. For example, it's possible to show statistics stored as `kWh` as `Wh`, `kWh` or `MWh`.\n\nThe changes are implemented in a series of PRs:\n- https://github.com/home-assistant/core/pull/78031\n- https://github.com/home-assistant/core/pull/78578\n- https://github.com/home-assistant/core/pull/79370\n\nThe background is that we allow overriding the unit of several sensor device classes, and this override should also be reflected when viewing long term statistics.\n\nThis affects authors of code calling the following WS APIs:\n - `recorder/adjust_sum_statistics` - A new mandatory parameter `adjustment_unit_of_measurement` has been added, which defines the unit used by the `adjustment` parameter.\n - `recorder/statistics_during_period` - In case of statistics generated from sensor entities, the unit of returned statistics will be converted to the sensor's `unit_of_measurement`. This behavior can be controlled by passing the optional `units` parameter."},{"id":"/2022/09/28/deprecate-conversion-utilities","metadata":{"permalink":"/blog/2022/09/28/deprecate-conversion-utilities","source":"@site/blog/2022-09-28-deprecate-conversion-utilities.md","title":"Deprecating unit conversion utilities","description":"As of Home Assistant Core 2022.10, the following utilities are deprecated:","date":"2022-09-28T00:00:00.000Z","tags":[],"readingTime":0.195,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Deprecating unit conversion utilities"},"unlisted":false,"prevItem":{"title":"Long term statistics now tracks the source entity's unit","permalink":"/blog/2022/09/29/statistics_refactoring"},"nextItem":{"title":"New sensor device classes","permalink":"/blog/2022/09/28/new_sensor_device_classes"}},"content":"As of Home Assistant Core 2022.10, the following utilities are deprecated:\n\n  - `homeassistant/util/distance`\n  - `homeassistant/util/pressure`\n  - `homeassistant/util/speed`\n  - `homeassistant/util/temperature`\n  - `homeassistant/util/volume`\n\nPlease use the corresponding static classes from `homeassistant/util/unit_conversion`:\n\n  - `DistanceConverter`\n  - `PressureConverter`\n  - `SpeedConverter`\n  - `TemperatureConverter`\n  - `VolumeConverter`"},{"id":"/2022/09/28/new_sensor_device_classes","metadata":{"permalink":"/blog/2022/09/28/new_sensor_device_classes","source":"@site/blog/2022-09-28-new_sensor_device_classes.md","title":"New sensor device classes","description":"Several new sensor device classes have been added:","date":"2022-09-28T00:00:00.000Z","tags":[],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"New sensor device classes"},"unlisted":false,"prevItem":{"title":"Deprecating unit conversion utilities","permalink":"/blog/2022/09/28/deprecate-conversion-utilities"},"nextItem":{"title":"Bluetooth async_track_unavailable API changes for 2022.10","permalink":"/blog/2022/09/16/bluetooth-unavailable-api-changes"}},"content":"Several new sensor device classes have been added:\n - `distance`, a distance measured in either of `cm`, `ft`, `in`, `km`, `m`, `mi`, `mm`, `yd`\n - `speed`, a speed measured in either of `ft/s`, `in/d`, `in/h`, `km/h`, `kn`, `m/s`, `mm/d`, `mph`\n - `volume`, a volume measured in either of `fl. oz.`, `ft³`, `gal`, `L`, `mL`, `m³`\n - `weight`, a mass measured in either of `g`, `kg`, `lb`, `mg`, `oz`, `µg`\n\n Like `pressure` and `temperatures` sensors, users can freely choose the display unit from the UI for sensors using any of the new device classes.\n\n### Long term statistics\n\n Long term statistics will store `distance` as `m`, `speed` as `m/s`, `volume` as `m³` and `weight` as `g`.\n For existing sensors which are modified to one of the new device classes, statistics will continue to be recorded in the sensor's `state_unit` but users will be given the option to have existing statistics converted to the normalized unit."},{"id":"/2022/09/16/bluetooth-unavailable-api-changes","metadata":{"permalink":"/blog/2022/09/16/bluetooth-unavailable-api-changes","source":"@site/blog/2022-09-16-bluetooth-unavailable-api-changes.md","title":"Bluetooth async_track_unavailable API changes for 2022.10","description":"For Home Assistant Core 2022.10 we have changed the asynctrackunavailable bluetooth API to send the last BluetoothServiceInfoBleak to the callback instead of the address.","date":"2022-09-16T00:00:00.000Z","tags":[],"readingTime":0.275,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Bluetooth async_track_unavailable API changes for 2022.10"},"unlisted":false,"prevItem":{"title":"New sensor device classes","permalink":"/blog/2022/09/28/new_sensor_device_classes"},"nextItem":{"title":"Deprecating media player constants","permalink":"/blog/2022/09/06/media-player-repeat-mode-deprecation"}},"content":"For Home Assistant Core 2022.10 we have changed the `async_track_unavailable` bluetooth API to send the last `BluetoothServiceInfoBleak` to the callback instead of the `address`.\n\nBelow is a new example of the usage:\n\n```python\nfrom homeassistant.components import bluetooth\n\ndef _unavailable_callback(info: bluetooth.BluetoothServiceInfoBleak) -> None:\n    _LOGGER.debug(\"%s is no longer seen\", info.address)\n   \ncancel = bluetooth.async_track_unavailable(hass, _unavailable_callback, \"44:44:33:11:23:42\", connectable=True)\n```"},{"id":"/2022/09/06/media-player-repeat-mode-deprecation","metadata":{"permalink":"/blog/2022/09/06/media-player-repeat-mode-deprecation","source":"@site/blog/2022-09-06-media-player-repeat-mode-deprecation.md","title":"Deprecating media player constants","description":"As of Home Assistant Core 2022.10, the following media player constants are deprecated:","date":"2022-09-06T00:00:00.000Z","tags":[],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Deprecating media player constants"},"unlisted":false,"prevItem":{"title":"Bluetooth async_track_unavailable API changes for 2022.10","permalink":"/blog/2022/09/16/bluetooth-unavailable-api-changes"},"nextItem":{"title":"The issue registry has been moved to homeassistant.helpers","permalink":"/blog/2022/08/25/issue_registry_moved_to_helpers"}},"content":"As of Home Assistant Core 2022.10, the following media player constants are deprecated:\n\n  - `MEDIA_CLASS_ALBUM`\n  - `MEDIA_CLASS_APP`\n  - `MEDIA_CLASS_ARTIST`\n  - `MEDIA_CLASS_CHANNEL`\n  - `MEDIA_CLASS_COMPOSER`\n  - `MEDIA_CLASS_CONTRIBUTING_ARTIST`\n  - `MEDIA_CLASS_DIRECTORY`\n  - `MEDIA_CLASS_EPISODE`\n  - `MEDIA_CLASS_GAME`\n  - `MEDIA_CLASS_GENRE`\n  - `MEDIA_CLASS_IMAGE`\n  - `MEDIA_CLASS_MOVIE`\n  - `MEDIA_CLASS_MUSIC`\n  - `MEDIA_CLASS_PLAYLIST`\n  - `MEDIA_CLASS_PODCAST`\n  - `MEDIA_CLASS_SEASON`\n  - `MEDIA_CLASS_TRACK`\n  - `MEDIA_CLASS_TV_SHOW`\n  - `MEDIA_CLASS_URL`\n  - `MEDIA_CLASS_VIDEO`\n\n  - `MEDIA_TYPE_ALBUM`\n  - `MEDIA_TYPE_APP`\n  - `MEDIA_TYPE_APPS`\n  - `MEDIA_TYPE_ARTIST`\n  - `MEDIA_TYPE_CHANNEL`\n  - `MEDIA_TYPE_CHANNELS`\n  - `MEDIA_TYPE_COMPOSER`\n  - `MEDIA_TYPE_CONTRIBUTING_ARTIST`\n  - `MEDIA_TYPE_EPISODE`\n  - `MEDIA_TYPE_GAME`\n  - `MEDIA_TYPE_GENRE`\n  - `MEDIA_TYPE_IMAGE`\n  - `MEDIA_TYPE_MOVIE`\n  - `MEDIA_TYPE_MUSIC`\n  - `MEDIA_TYPE_PLAYLIST`\n  - `MEDIA_TYPE_PODCAST`\n  - `MEDIA_TYPE_SEASON`\n  - `MEDIA_TYPE_TRACK`\n  - `MEDIA_TYPE_TVSHOW`\n  - `MEDIA_TYPE_URL`\n  - `MEDIA_TYPE_VIDEO`\n\n  - `REPEAT_MODE_ALL`\n  - `REPEAT_MODE_OFF`\n  - `REPEAT_MODE_ONE`\n  - `REPEAT_MODES`\n\nUse the new `MediaClass`, `MediaType`, and `RepeatMode` enum instead.\n\nThe use of `STATE_*` constants to reflect media player state is also deprecated. Please use the new `MediaPlayerState` enum instead."},{"id":"/2022/08/25/issue_registry_moved_to_helpers","metadata":{"permalink":"/blog/2022/08/25/issue_registry_moved_to_helpers","source":"@site/blog/2022-08-25-issue_registry_moved_to_helpers.md","title":"The issue registry has been moved to homeassistant.helpers","description":"The issue registry has been moved from homeassistant.components.repairs to homeassistant.helpers and is now loaded together with the other registries very early during bootstrapping, before setup of any integrations.","date":"2022-08-25T00:00:00.000Z","tags":[],"readingTime":0.185,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"The issue registry has been moved to homeassistant.helpers"},"unlisted":false,"prevItem":{"title":"Deprecating media player constants","permalink":"/blog/2022/09/06/media-player-repeat-mode-deprecation"},"nextItem":{"title":"Globally available HomeAssistant object (hass)","permalink":"/blog/2022/08/24/globally_accessible_hass"}},"content":"The issue registry has been moved from `homeassistant.components.repairs` to `homeassistant.helpers` and is now loaded together with the other registries very early during bootstrapping, before setup of any integrations.\n\nThis allows creating issues during validation of the configuration."},{"id":"/2022/08/24/globally_accessible_hass","metadata":{"permalink":"/blog/2022/08/24/globally_accessible_hass","source":"@site/blog/2022-08-24-globally_accessible_hass.md","title":"Globally available HomeAssistant object (hass)","description":"It's now possible to get a reference to the HomeAssistant instance by calling core.asyncgethass().","date":"2022-08-24T00:00:00.000Z","tags":[],"readingTime":0.58,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Globally available HomeAssistant object (hass)"},"unlisted":false,"prevItem":{"title":"The issue registry has been moved to homeassistant.helpers","permalink":"/blog/2022/08/25/issue_registry_moved_to_helpers"},"nextItem":{"title":"LightEntity no longer supports white_value","permalink":"/blog/2022/08/18/light_white_value_removed"}},"content":"It's now possible to get a reference to the `HomeAssistant` instance by calling `core.async_get_hass()`.\n\nAlthough this means it's no longer strictly necessary to pass `hass` around, the recommendation is still to only use `core.async_get_hass` where it's very cumbersome or downright impossible to pass `hass` to the code which needs it.\nAn example where this can be useful is voluptuous validators, which previously couldn't access `hass` because voluptuous has no way of passing user data to validators.\n\n```python\n@callback\ndef async_get_hass() -> HomeAssistant:\n    \"\"\"Return the HomeAssistant instance.\n    Raises LookupError if no HomeAssistant instance is available.\n    This should be used where it's very cumbersome or downright impossible to pass\n    hass to the code which needs it.\n    \"\"\"\n```"},{"id":"/2022/08/18/light_white_value_removed","metadata":{"permalink":"/blog/2022/08/18/light_white_value_removed","source":"@site/blog/2022-08-18-light_white_value_removed.md","title":"LightEntity no longer supports white_value","description":"LightEntity no longer supports white_value, it's replaced by","date":"2022-08-18T00:00:00.000Z","tags":[],"readingTime":0.195,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"LightEntity no longer supports white_value"},"unlisted":false,"prevItem":{"title":"Globally available HomeAssistant object (hass)","permalink":"/blog/2022/08/24/globally_accessible_hass"},"nextItem":{"title":"AutomationActionType deprecation for 2022.9","permalink":"/blog/2022/08/15/automation-action-type-deprecation"}},"content":"`LightEntity` no longer supports `white_value`, it's replaced by\n[color mode](/docs/core/entity/light#color-modes) `white`.\n\n### Background\nLight's `white_value` was deprecated in Home Assistant Core 2021.4 by \n[PR #47720](https://github.com/home-assistant/core/pull/47720)\nand replaced by color mode `white` in Home Assistant Core 2021.7 by \n[PR #51411](https://github.com/home-assistant/core/pull/51411)."},{"id":"/2022/08/15/automation-action-type-deprecation","metadata":{"permalink":"/blog/2022/08/15/automation-action-type-deprecation","source":"@site/blog/2022-08-15-automation-action-type-deprecation.md","title":"AutomationActionType deprecation for 2022.9","description":"For Home Assistant Core 2022.9, we have deprecated AutomationActionType, AutomationTriggerInfo,","date":"2022-08-15T00:00:00.000Z","tags":[],"readingTime":0.32,"hasTruncateMarker":false,"authors":[{"name":"Marc Mueller","url":"https://github.com/cdce8p","key":null,"page":null}],"frontMatter":{"author":"Marc Mueller","authorURL":"https://github.com/cdce8p","title":"AutomationActionType deprecation for 2022.9"},"unlisted":false,"prevItem":{"title":"LightEntity no longer supports white_value","permalink":"/blog/2022/08/18/light_white_value_removed"},"nextItem":{"title":"Bluetooth passive sensor API changes for 2022.9","permalink":"/blog/2022/08/08/bluetooth-api-changes"}},"content":"For Home Assistant Core 2022.9, we have deprecated `AutomationActionType`, `AutomationTriggerInfo`,\nand `AutomationTriggerData` from `homeassistant/components/automation/__init__.py`.\nThey are being replaced by `TriggerActionType`, `TriggerInfo`, and `TriggerData`\nfrom `homeassistant/helpers/trigger.py`.\n\n| Old | New |\n| --- | --- |\n| `AutomationActionType` | `TriggerActionType` |\n| `AutomationTriggerInfo` | `TriggerInfo` |\n| `AutomationTriggerData` | `TriggerData` |\n\nFurthermore, we recommend updating the `automation_info` parameter name for the\n`async_attach_trigger` function to `trigger_info`."},{"id":"/2022/08/08/bluetooth-api-changes","metadata":{"permalink":"/blog/2022/08/08/bluetooth-api-changes","source":"@site/blog/2022-08-08-bluetooth-api-changes.md","title":"Bluetooth passive sensor API changes for 2022.9","description":"For Home Assistant Core 2022.9 we have changed the PassiveBluetoothProcessorCoordinator and PassiveBluetoothDataProcessor bluetooth API's to make PassiveBluetoothProcessorCoordinator responsible for parsing. The coordinator then pushes parsed data to PassiveBluetoothDataProcessor instances.","date":"2022-08-08T00:00:00.000Z","tags":[],"readingTime":0.98,"hasTruncateMarker":false,"authors":[{"name":"John Carr","url":"https://github.com/Jc2k","key":null,"page":null}],"frontMatter":{"author":"John Carr","authorURL":"https://github.com/Jc2k","title":"Bluetooth passive sensor API changes for 2022.9"},"unlisted":false,"prevItem":{"title":"AutomationActionType deprecation for 2022.9","permalink":"/blog/2022/08/15/automation-action-type-deprecation"},"nextItem":{"title":"Device tracker deprecations for 2022.9","permalink":"/blog/2022/07/29/device-tracker_source-type-deprecation"}},"content":"For Home Assistant Core 2022.9 we have changed the `PassiveBluetoothProcessorCoordinator` and `PassiveBluetoothDataProcessor` bluetooth API's to make `PassiveBluetoothProcessorCoordinator` responsible for parsing. The coordinator then pushes parsed data to `PassiveBluetoothDataProcessor` instances.\n\nPassiveBluetoothProcessorCoordinator now takes a mandatory update_method callback that receives bluetooth advertisements (in the form of BluetoothServiceInfoBleak) and returns the data that should be handed off to any subscribed PassiveBluetoothDataProcessor:\n\n```python\ndef my_parser(service_info: BluetoothServiceInfoBleak) -> MyDataClass:\n    ...\n\n    return MyDataClass(\n        a=some_parsed_data,\n        b=some_other_parsed_data,\n    )\n\n\ncoordinator = PassiveBluetoothProcessorCoordinator(\n    hass,\n    _LOGGER,\n    address=address,\n    mode=BluetoothScanningMode.PASSIVE,\n    update_method=my_parser,\n)\n```\n\nPassiveBluetoothDataProcessor still takes an update_method, but instead of a BluetoothServiceInfoBleak, it now receives the data returned from PassiveBluetoothProcessorCoordinator's update_method. It should still return a `PassiveBluetoothDataUpdate` as before:\n\n```python\ndef sensor_update_to_bluetooth_data_update(\n    sensor_update: MyDataClass,\n) -> PassiveBluetoothDataUpdate:\n    \"\"\"Convert a sensor update to a bluetooth data update.\"\"\"\n    ...\n    return PassiveBluetoothDataUpdate( ... )\n\nprocessor = PassiveBluetoothDataProcessor(sensor_update_to_bluetooth_data_update)\n```\n\nAll the built-in integrations have already been converted, so take a look at them for more examples.\n\nThis change will help integrations that need to start parsing data before loading a platform (for example, the list of platforms to load depend on data from the advertisements) or changes where a single advertisement drives multiple platforms (you won't have to parse the broadcast twice)."},{"id":"/2022/07/29/device-tracker_source-type-deprecation","metadata":{"permalink":"/blog/2022/07/29/device-tracker_source-type-deprecation","source":"@site/blog/2022-07-29-device-tracker_source-type-deprecation.md","title":"Device tracker deprecations for 2022.9","description":"For Home Assistant Core 2022.9, we have deprecated the device_tracker","date":"2022-07-29T00:00:00.000Z","tags":[],"readingTime":0.14,"hasTruncateMarker":false,"authors":[{"name":"Marc Mueller","url":"https://github.com/cdce8p","key":null,"page":null}],"frontMatter":{"author":"Marc Mueller","authorURL":"https://github.com/cdce8p","title":"Device tracker deprecations for 2022.9"},"unlisted":false,"prevItem":{"title":"Bluetooth passive sensor API changes for 2022.9","permalink":"/blog/2022/08/08/bluetooth-api-changes"},"nextItem":{"title":"Adopting a new way to name entities","permalink":"/blog/2022/07/10/entity_naming"}},"content":"For Home Assistant Core 2022.9, we have deprecated the `device_tracker`\n`SOURCE_TYPE_*` constants.\nUse the new [`SourceType`](/docs/core/entity/device-tracker) enum instead.\n\nDeprecated constants:\n\n- `SOURCE_TYPE_GPS`\n- `SOURCE_TYPE_ROUTER`\n- `SOURCE_TYPE_BLUETOOTH`\n- `SOURCE_TYPE_BLUETOOTH_LE`"},{"id":"/2022/07/10/entity_naming","metadata":{"permalink":"/blog/2022/07/10/entity_naming","source":"@site/blog/2022-07-10-entity_naming.md","title":"Adopting a new way to name entities","description":"We are working on improving and standardizing our entity naming. This will allow us to show, in the UI, entities in the right context in the future while removing some error-prone magic mangling of entity names from the code base.","date":"2022-07-10T00:00:00.000Z","tags":[],"readingTime":2.74,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Adopting a new way to name entities"},"unlisted":false,"prevItem":{"title":"Device tracker deprecations for 2022.9","permalink":"/blog/2022/07/29/device-tracker_source-type-deprecation"},"nextItem":{"title":"Waiting for config entry platforms","permalink":"/blog/2022/07/08/config_entry_forwards"}},"content":"We are working on improving and standardizing our entity naming. This will allow us to show, in the UI, entities in the right context in the future while removing some error-prone magic mangling of entity names from the code base.\n\nThe short story is:\n\n- Devices have their name as they have today, for example, \"Dishwasher\".\n- Entities will have their own name (without device, area). Or, they may optionally set the name to `None` (in that case they inherit the device name).\n- Device, Area, and Entity names all start with a capital letter, the rest of the words are lower case (unless it's a word that represents a brand/name/abbreviation of course).\n- Every entity which has been migrated to follow these rules should set the [`has_entity_name`](https://developers.home-assistant.io/docs/core/entity#entity-naming) property to `True`.\n\nDuring the migration period, we use the `has_entity_name` property to create \"backward compatible\" friendly names. In the future, we can show deprecation warnings for entities that don't set this property, and later, remove it entirely.\n\nThe frontend is going to be adjusted for this. It will be able to show the entities/devices in various ways, what suits the context the most.\n\n### Example\n\nThis illustrates how devices and entities should be named according to the new recommendations (type: entity name / state object's `friendly_name` / `entity_id`).\nDevelopers only need to set device name and entity name, the `friendly_name` and `entity_id` are automatically generated.\n\n- Device: Dishwasher\n  - Switch: `None` / Dishwasher / `switch.dishwasher`\n  - Sensor: Power usage / Dishwasher Power usage / `sensor.dishwasher_power_usage`\n- Device: Laundry machine\n  - Switch: `None` / Laundry machine / `switch.laundry_machine`\n  - Sensor: Power usage / Laundry machine Power usage / `sensor.laundry_machine_power_usage`\n\n## Background\n\nHome Assistant models the home of a user into three levels:\n\n- Area (eg. Living Room)\n- Device (eg. Switch)\n- Entity (eg. Power usage)\n\nEntities in Home Assistant are the data points provided by a device and can represent specific controls (a switch of the device, a light of the device).\n\nBecause Home Assistant used to only have entities in the first many years of its existence, a lot of functionality is based around entities in Home Assistant, the main one being the UI.\n\nLet’s say you have 2 Shelly switches that report power usage named Dishwasher and Laundry Machine. Both devices have a switch entity and a power sensor. The devices and entities would previously look like this (type: entity name / state object `friendly_name` / `entity_id`):\n\n- Device: Dishwasher\n  - Switch: Dishwasher Switch / Dishwasher Switch / `switch.dishwasher_switch`\n  - Sensor: Dishwasher Power usage / Dishwasher Power usage / `sensor.dishwasher_power_usage`\n- Device: Laundry machine\n  - Switch: Laundry machine Switch / Laundry machine Switch / `switch.laundry_machine_switch`\n  - Sensor: Laundry machine Power usage / Laundry machine Power usage / `sensor.laundry_machine_power_usage`\n\n### Why is this a problem?\n\nThere is not a single source of truth for a device name because entities included the device name in their name.\n\nBecause we “solved” a problem for the UI and the `entity_id` by including the device name in the entity name, we now have this solution applied to all places where we use entities and have to work around this solution.\n\nThis naming scheme makes it unnecessarily difficult to migrate the UI towards hierarchical views of areas->devices->entities instead of long lists of entities."},{"id":"/2022/07/08/config_entry_forwards","metadata":{"permalink":"/blog/2022/07/08/config_entry_forwards","source":"@site/blog/2022-07-08-config_entry_forwards.md","title":"Waiting for config entry platforms","description":"Before 2022.8, it was impossible to await config entry platforms forwards without a deadlock if one of the platforms loaded by the config entry was not already loaded.","date":"2022-07-08T00:00:00.000Z","tags":[],"readingTime":0.345,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Waiting for config entry platforms"},"unlisted":false,"prevItem":{"title":"Adopting a new way to name entities","permalink":"/blog/2022/07/10/entity_naming"},"nextItem":{"title":"Store is now a Generic class","permalink":"/blog/2022/07/08/generic-store"}},"content":"Before 2022.8, it was impossible to `await` config entry platforms forwards without a deadlock if one of the platforms loaded by the config entry was not already loaded.\n\nIntegrations need to be refactored to replace calls to `hass.config_entries.async_setup_platforms` with awaiting `hass.config_entries.async_forward_entry_setups` to ensure that Home Assistant does not inadvertently reload the integration while entities and platforms are still being set up.\n\n`hass.config_entries.async_setup_platforms` is scheduled to be removed in 2022.12."},{"id":"/2022/07/08/generic-store","metadata":{"permalink":"/blog/2022/07/08/generic-store","source":"@site/blog/2022-07-08-generic-store.md","title":"Store is now a Generic class","description":"As of Home Assistant Core 2022.8, a Store (from homeassistant/helpers/storage.py) is defined as a Generic Store(Generic[_T]). It is recommended that the type of data being stored be defined in the Store definition. It should be JSON-serialisable (dict or list), for example:","date":"2022-07-08T00:00:00.000Z","tags":[],"readingTime":0.425,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Store is now a Generic class"},"unlisted":false,"prevItem":{"title":"Waiting for config entry platforms","permalink":"/blog/2022/07/08/config_entry_forwards"},"nextItem":{"title":"Weather entity refactoring to support unit conversions","permalink":"/blog/2022/06/27/weather_entity_refactoring"}},"content":"As of Home Assistant Core 2022.8, a Store (from `homeassistant/helpers/storage.py`) is defined as a Generic `Store(Generic[_T])`. It is recommended that the type of data being stored be defined in the Store definition. It should be JSON-serialisable (dict or list), for example:\n  - Standard definition using a dict: `self._store = Store[dict[str, int]](hass, STORAGE_VERSION, STORAGE_KEY)`\n  - Using a TypedDict: `self._store = Store[EnergyPreferences](hass, STORAGE_VERSION, STORAGE_KEY)`\n  - Accessing an existing Store: `store: Store[dict[str, Any]] = hass.data[DOMAIN][DATA_STORE]`\n  - Inherited Store: `class MyCustomStorage(Store[list[int]]):`\n  \nFor more information about generics, see [PEP 483](https://peps.python.org/pep-0483/#generic-types)"},{"id":"/2022/06/27/weather_entity_refactoring","metadata":{"permalink":"/blog/2022/06/27/weather_entity_refactoring","source":"@site/blog/2022-06-27-weather_entity_refactoring.md","title":"Weather entity refactoring to support unit conversions","description":"WeatherEntity now supports temperature unit conversion following a similar pattern","date":"2022-06-27T00:00:00.000Z","tags":[],"readingTime":0.705,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Weather entity refactoring to support unit conversions"},"unlisted":false,"prevItem":{"title":"Store is now a Generic class","permalink":"/blog/2022/07/08/generic-store"},"nextItem":{"title":"Number entity refactoring to support unit conversion","permalink":"/blog/2022/06/14/number_entity_refactoring"}},"content":"`WeatherEntity` now supports temperature unit conversion following a similar pattern\nas the unit conversion supported by `NumberEntity` and `SensorEntity`.\n\nPrecipitation, pressure, temperature, visibility and wind speed are automatically\nconverted according to the unit system configured by the users. In addition, users can\noverride units for specific weather entities.\n\nTo make this possible, custom component integrations should be updated to override\nproperties `native_precipitation_unit`, `native_pressure`, `native_pressure_unit`,\n `native_temperature`, `native_temperature_unit`,`native_visibility`, `native_visibility_unit`,\n `native_wind_speed` and `native_wind_speed_unit`, instead of `precipitation_unit`,\n `pressure`, `pressure_unit`, `temperature`, `temperature_unit`,`visibility`, `visibility_unit`,\n `wind_speed` and `wind_speed_unit`.\n\nThe same renaming has been done for the corresponding `_attr_*` attributes as well\nas for members of the `Forecast` typed dict\n\nIn Home Assistant Core 2023.1, overriding `precipitation_unit`,\n `pressure`, `pressure_unit`, `temperature`, `temperature_unit`,`visibility`, `visibility_unit`,\n `wind_speed`, `wind_speed_unit`, setting `_attr_precipitation_unit`,\n `_attr_pressure`, `_attr_pressure_unit`, `_attr_temperature`, `_attr_temperature_unit`,\n `_attr_visibility`, `_attr_visibility_unit`, `_attr_wind_speed`, `_attr_wind_speed_unit` and\nsetting `precipitation`, `pressure`, `temperature`, `templow`, `wind_speed` on instances of\n`Forecast` is no longer supported."},{"id":"/2022/06/14/number_entity_refactoring","metadata":{"permalink":"/blog/2022/06/14/number_entity_refactoring","source":"@site/blog/2022-06-14-number_entity_refactoring.md","title":"Number entity refactoring to support unit conversion","description":"NumberEntity now supports temperature unit conversion following a similar pattern","date":"2022-06-14T00:00:00.000Z","tags":[],"readingTime":0.625,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnemery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnemery","authorURL":"https://github.com/emontnemery","title":"Number entity refactoring to support unit conversion"},"unlisted":false,"prevItem":{"title":"Weather entity refactoring to support unit conversions","permalink":"/blog/2022/06/27/weather_entity_refactoring"},"nextItem":{"title":"Avoiding reloading config entries while they are setting up","permalink":"/blog/2022/06/13/unsafe_reloads_during_entry_setup"}},"content":"`NumberEntity` now supports temperature unit conversion following a similar pattern\nas the unit conversion supported by `SensorEntity`.\n\nTemperature conversion will automatically be done for number entities with device\nclass set to `temperature` to the temperature unit configured by the user.\n\nTo make this possible, custom component integrations should be updated to override\nproperties `native_max_value`, `native_min_value`, `native_step`,\n`native_unit_of_measurement`, `native_value` instead of `max_value`, `min_value`,\n`step`, `unit_of_measurement`, `value` and to override methods `async_set_native_value`\nand `set_native_value` instead of `async_set_value` and `set_value`.\n\nThe same renaming has been done for `_attr_*` attributes as well as members of\n`NumberEntityDescription`.\n\nIn Home Assistant Core 2023.1, overriding `async_set_value`, `max_value`, `min_value`,\n`set_value`, `step`, `unit_of_measurement`, `value`, setting `_attr_max_value`,\n`_attr_min_value`, `_attr_unit_of_measurement`, `_attr_step`, `_attr_value` and\nsetting `max_value`, `min_value`, `unit_of_measurement`, `step` on instances of\n`NumberEntityDescription` is no longer supported."},{"id":"/2022/06/13/unsafe_reloads_during_entry_setup","metadata":{"permalink":"/blog/2022/06/13/unsafe_reloads_during_entry_setup","source":"@site/blog/2022-06-13-unsafe_reloads_during_entry_setup.md","title":"Avoiding reloading config entries while they are setting up","description":"Before 2022.7, it was possible to trigger a reload of a config entry while it was still setting up. Reloading during config entry setup often led to unexpected failure modes, which required restarting Home Assistant to get the config entry back in a good state. Attempting a reload during setup now raises the OperationNotAllowed exception.","date":"2022-06-13T00:00:00.000Z","tags":[],"readingTime":0.275,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Avoiding reloading config entries while they are setting up"},"unlisted":false,"prevItem":{"title":"Number entity refactoring to support unit conversion","permalink":"/blog/2022/06/14/number_entity_refactoring"},"nextItem":{"title":"Deprecating Data Entry Flow constants","permalink":"/blog/2022/06/07/dataflow-constants-deprecation"}},"content":"Before 2022.7, it was possible to trigger a reload of a config entry while it was still setting up. Reloading during config entry setup often led to unexpected failure modes, which required restarting Home Assistant to get the config entry back in a good state. Attempting a reload during setup now raises the `OperationNotAllowed` exception."},{"id":"/2022/06/07/dataflow-constants-deprecation","metadata":{"permalink":"/blog/2022/06/07/dataflow-constants-deprecation","source":"@site/blog/2022-06-07-dataflow-constants-deprecation.md","title":"Deprecating Data Entry Flow constants","description":"As of Home Assistant Core 2022.7, all RESULTTYPE* constants for data entry flow result types are deprecated:","date":"2022-06-07T00:00:00.000Z","tags":[],"readingTime":0.195,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"Deprecating Data Entry Flow constants"},"unlisted":false,"prevItem":{"title":"Avoiding reloading config entries while they are setting up","permalink":"/blog/2022/06/13/unsafe_reloads_during_entry_setup"},"nextItem":{"title":"Support context in update coordinator","permalink":"/blog/2022/06/02/update_coordinator-context"}},"content":"As of Home Assistant Core 2022.7, all `RESULT_TYPE_*` constants for data entry flow result types are deprecated:\n\n  - `RESULT_TYPE_FORM`\n  - `RESULT_TYPE_CREATE_ENTRY`\n  - `RESULT_TYPE_ABORT`\n  - `RESULT_TYPE_EXTERNAL_STEP`\n  - `RESULT_TYPE_EXTERNAL_STEP_DONE`\n  - `RESULT_TYPE_SHOW_PROGRESS`\n  - `RESULT_TYPE_SHOW_PROGRESS_DONE`\n  - `RESULT_TYPE_MENU`\n\n  Use the new `FlowResultType` enum instead."},{"id":"/2022/06/02/update_coordinator-context","metadata":{"permalink":"/blog/2022/06/02/update_coordinator-context","source":"@site/blog/2022-06-02-update_coordinator-context.md","title":"Support context in update coordinator","description":"Starting with Home Assistant 2022.7, the update coordinator supports keeping track of context for each listening entity. This can be used to limit the requests against APIs based on enabled entities.","date":"2022-06-02T00:00:00.000Z","tags":[],"readingTime":0.48,"hasTruncateMarker":false,"authors":[{"name":"Joakim Plate","url":"https://github.com/elupus","key":null,"page":null}],"frontMatter":{"author":"Joakim Plate","authorURL":"https://github.com/elupus","title":"Support context in update coordinator"},"unlisted":false,"prevItem":{"title":"Deprecating Data Entry Flow constants","permalink":"/blog/2022/06/07/dataflow-constants-deprecation"},"nextItem":{"title":"Media Player updates: enqueue changes, announce added","permalink":"/blog/2022/05/31/media-player-updates"}},"content":"Starting with Home Assistant 2022.7, the update coordinator supports keeping track of context for each listening entity. This can be used to limit the requests against APIs based on enabled entities.\n\nThis could be a breaking change for custom components that rely on update coordinators and inspect the internal variable `self._listeners` and/or overload the method async_remove_listener() to detect when there is no listeners anymore. Switch to using `async_update_listeners()` to trigger updates on all listeners, and overload `_unschedule_refresh()` to detect when there is no listeners.\n\nSee the updated [integration fetching documentation](/docs/integration_fetching_data/#polling-api-endpoints) for more information on current use."},{"id":"/2022/05/31/media-player-updates","metadata":{"permalink":"/blog/2022/05/31/media-player-updates","source":"@site/blog/2022-05-31-media-player-updates.md","title":"Media Player updates: enqueue changes, announce added","description":"Starting with Home Assistant 2022.6, the media player integration has received two updates to the mediaplayer.playmedia service. The enqueue attribute has been changed to a string in PR #72406 and a new announce boolean attribute was added in PR #72566.","date":"2022-05-31T00:00:00.000Z","tags":[],"readingTime":0.25,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Media Player updates: enqueue changes, announce added"},"unlisted":false,"prevItem":{"title":"Support context in update coordinator","permalink":"/blog/2022/06/02/update_coordinator-context"},"nextItem":{"title":"Logbook API removal of `entity_matches_only` flag","permalink":"/blog/2022/05/24/entity_matches_only_removed_logbook_card"}},"content":"Starting with Home Assistant 2022.6, the media player integration has received two updates to the `media_player.play_media` service. The `enqueue` attribute has been changed to a string in [PR #72406](https://github.com/home-assistant/core/pull/72406) and a new `announce` boolean attribute was added in [PR #72566](https://github.com/home-assistant/core/pull/72566).\n\nSee the updated [media player play_media documentation](/docs/core/entity/media-player/#play-media) for more information."},{"id":"/2022/05/24/entity_matches_only_removed_logbook_card","metadata":{"permalink":"/blog/2022/05/24/entity_matches_only_removed_logbook_card","source":"@site/blog/2022-05-24-entity_matches_only_removed_logbook_card.md","title":"Logbook API removal of `entity_matches_only` flag","description":"Before 2022.6, the entitymatchesonly flag prevented the logbook from providing context data in exchange for performance improvement when querying specific entities. Selecting the context data for particular entities is no longer an intensive process with the new logbook design. No immediate action is required as the flag will be ignored, and removing the flag from any active code paths can be done at your leisure.","date":"2022-05-24T00:00:00.000Z","tags":[],"readingTime":0.325,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Logbook API removal of `entity_matches_only` flag"},"unlisted":false,"prevItem":{"title":"Media Player updates: enqueue changes, announce added","permalink":"/blog/2022/05/31/media-player-updates"},"nextItem":{"title":"S6-Overlay 3.x update on our docker base images","permalink":"/blog/2022/05/12/s6-overlay-base-images"}},"content":"Before 2022.6, the `entity_matches_only` flag prevented the logbook from providing context data in exchange for performance improvement when querying specific entities. Selecting the context data for particular entities is no longer an intensive process with the new logbook design. No immediate action is required as the flag will be ignored, and removing the flag from any active code paths can be done at your leisure."},{"id":"/2022/05/12/s6-overlay-base-images","metadata":{"permalink":"/blog/2022/05/12/s6-overlay-base-images","source":"@site/blog/2022-05-12-s6-overlay-base-images.md","title":"S6-Overlay 3.x update on our docker base images","description":"We started to update our base images to use the new s6-Overlay v3. A migration article also explains the new possibilities around this change. This blog post explains the minimal changes needed to be able to use our new base images.","date":"2022-05-12T00:00:00.000Z","tags":[],"readingTime":1.995,"hasTruncateMarker":false,"authors":[{"name":"Pascal Vizeli","url":"https://twitter.com/pvizeli","key":null,"page":null}],"frontMatter":{"author":"Pascal Vizeli","authorURL":"https://twitter.com/pvizeli","authorTwitter":"pvizeli","title":"S6-Overlay 3.x update on our docker base images"},"unlisted":false,"prevItem":{"title":"Logbook API removal of `entity_matches_only` flag","permalink":"/blog/2022/05/24/entity_matches_only_removed_logbook_card"},"nextItem":{"title":"Constant deprecations for 2022.5","permalink":"/blog/2022/05/03/constants-deprecations"}},"content":"We started to update our base images to use the new s6-Overlay v3. A [migration article](https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md) also explains the new possibilities around this change. This blog post explains the minimal changes needed to be able to use our new base images.\n\nWe have updated our [example add-on](https://github.com/home-assistant/addons-example) to include the new behaviors.\n\n## Minimum\n\nAdd `init: false` to your addon's `config.yaml` if you don't have this already. In V3, S6 enforces that their init is used correctly. If Docker default system init is used you will see the following error when you start your addon:\n\n```\ns6-overlay-suexec: fatal: can only run as pid 1\n```\n\nMake sure all your executable/script files have the execution permission set on your git repository rootfs folder. You can update the permissions using:\n\n```sh\n$ git update-index --chmod=+x rootfs/etc/service.d/my-service/run\n```\n\nIf you use `finish` scripts in your S6-overlay services, for example, to stop the container on an error, you have to replace the line `s6-svscanctl -t /var/run/s6/services` with `/run/s6/basedir/bin/halt`.\n\n## AppArmor\n\nYou have to tweak your [AppArmor profile](/docs/add-ons/presentation#apparmor) to get it working with the new s6-Overlay. We updated our documentation with the default profile. The following changes need to be made:\n\n```txt\n# S6-Overlay\n  /init ix,\n  /bin/** ix,\n  /usr/bin/** ix,\n  /run/{s6,s6-rc*,service}/** ix,\n  /package/** ix,\n  /command/** ix,\n  /etc/services.d/** rwix,\n  /etc/cont-init.d/** rwix,\n  /etc/cont-finish.d/** rwix,\n  /run/{,**} rwk,\n  /dev/tty rw,\n```\n\n## `host_pid` option\n\nAddons running without protection mode enabled can set `host_pid: true` in their configuration. As described in the [documentation](https://developers.home-assistant.io/docs/add-ons/configuration#optional-configuration-options):\n\n> Allow to run container on host PID namespace. Works only for not protected add-ons.\n\nThis is a problem because S6 expects to be PID 1 (it's literally in the [tagline](https://github.com/just-containers/s6-overlay#s6-overlay-)) and that's impossible when using the host PID namespace.\n\nIn V2, S6 didn't actually check that it was running as PID 1. This is why it \"worked\" when in this mode in the past (although it required some [workarounds](https://github.com/hassio-addons/addon-glances/blob/8575d7903ef4c0a7c49e9ab32e0536bd2eb12dd6/glances/rootfs/bin/s6-nuke) to keep s6 from breaking systems when running this way). In V3 S6 checks that it is actually PID 1 and refuses to start otherwise.\n\nTo fix this, don't use s6 overlay in your addon as it's not designed for this use case. You can continue to use the addon base images by overriding `/init` with a no-op script and then use the normal docker init system. Or you can switch to a different base image like stock alpine or debian and add what you need."},{"id":"/2022/05/03/constants-deprecations","metadata":{"permalink":"/blog/2022/05/03/constants-deprecations","source":"@site/blog/2022-05-03-constants-deprecations.md","title":"Constant deprecations for 2022.5","description":"For Home Assistant Core 2022.5, we have deprecated many constants and replaced","date":"2022-05-03T00:00:00.000Z","tags":[],"readingTime":0.675,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorTwitter":"frenck","title":"Constant deprecations for 2022.5"},"unlisted":false,"prevItem":{"title":"S6-Overlay 3.x update on our docker base images","permalink":"/blog/2022/05/12/s6-overlay-base-images"},"nextItem":{"title":"ServiceInfo model improvements and deprecations","permalink":"/blog/2022/05/03/serviceinfo-model-improvements"}},"content":"For Home Assistant Core 2022.5, we have deprecated many constants and replaced\nthem with enums.\n\nAll `SUPPORT_*` constants have been deprecated, and are summerised\nin a [previously published blog article](/blog/2022/04/02/support-constants-deprecation).\n\nAdditionally, the following constants have been deprecated:\n\n- **Alarm Control Panel**\n\n  Deprecated constants:\n\n  - `FORMAT_TEXT`\n  - `FORMAT_NUMBER`\n\n  Use the new [`CodeFormat`](/docs/core/entity/alarm-control-panel#code-formats) enum instead.\n\n- **Camera**\n\n  Deprecated constants:\n\n  - `STREAM_TYPE_HLS`\n  - `STREAM_TYPE_WEB_RTC`\n\n  Use the new [`StreamType`](/docs/core/entity/camera#properties) enum instead.\n\n- **Climate**\n\n  Deprecated constants:\n\n  - `CURRENT_HVAC_COOL`\n  - `CURRENT_HVAC_DRY`\n  - `CURRENT_HVAC_FAN`\n  - `CURRENT_HVAC_HEAT`\n  - `CURRENT_HVAC_IDLE`\n  - `CURRENT_HVAC_OFF`\n  - `HVAC_MODE_AUTO`\n  - `HVAC_MODE_COOL`\n  - `HVAC_MODE_DRY`\n  - `HVAC_MODE_FAN_ONLY`\n  - `HVAC_MODE_HEAT_COOL`\n  - `HVAC_MODE_HEAT`\n  - `HVAC_MODE_OFF`\n\n  Use the new [`HVACAction`](/docs/core/entity/climate#hvac-action) and [`HVACMode`](/docs/core/entity/climate#hvac-modes) enums instead.\n\n- **Light**\n\n  Deprecated constants:\n\n  - `COLOR_MODE_UNKNOWN`\n  - `COLOR_MODE_ONOFF`\n  - `COLOR_MODE_BRIGHTNESS`\n  - `COLOR_MODE_COLOR_TEMP`\n  - `COLOR_MODE_HS`\n  - `COLOR_MODE_XY`\n  - `COLOR_MODE_RGB`\n  - `COLOR_MODE_RGBW`\n  - `COLOR_MODE_RGBWW`\n  - `COLOR_MODE_WHITE`\n\n  Use the new [`ColorMode`](/docs/core/entity/light#color-modes) enum instead."},{"id":"/2022/05/03/serviceinfo-model-improvements","metadata":{"permalink":"/blog/2022/05/03/serviceinfo-model-improvements","source":"@site/blog/2022-05-03-serviceinfo-model-improvements.md","title":"ServiceInfo model improvements and deprecations","description":"As of Home Assistant Core 2022.6, access to discovery information via the, previously deprecated, dictionary methods have been removed.","date":"2022-05-03T00:00:00.000Z","tags":[],"readingTime":0.21,"hasTruncateMarker":false,"authors":[{"name":"epenet","url":"https://github.com/epenet","key":null,"page":null}],"frontMatter":{"author":"epenet","authorURL":"https://github.com/epenet","title":"ServiceInfo model improvements and deprecations"},"unlisted":false,"prevItem":{"title":"Constant deprecations for 2022.5","permalink":"/blog/2022/05/03/constants-deprecations"},"nextItem":{"title":"Text-to-speech say service to use media source IDs","permalink":"/blog/2022/04/26/tts-say-media-source"}},"content":"As of Home Assistant Core 2022.6, access to discovery information via the, previously deprecated, dictionary methods have been removed.\r\n\r\n\r\nThis applies to the `DhcpServiceInfo`, `MqttServiceInfo`, `SsdpServiceInfo`, `UsbServiceInfo`, and `ZeroconfServiceInfo` instances.\r\n\r\nCustom integrations are required to migrate to use the new dataclass properties."},{"id":"/2022/04/26/tts-say-media-source","metadata":{"permalink":"/blog/2022/04/26/tts-say-media-source","source":"@site/blog/2022-04-26-tts-say-media-source.md","title":"Text-to-speech say service to use media source IDs","description":"Starting with Home Assistant 2022.5, the TTS say service will set the media content ID to be a media source URI. These need to be resolved inside the media player using the media source integration.","date":"2022-04-26T00:00:00.000Z","tags":[],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Text-to-speech say service to use media source IDs"},"unlisted":false,"prevItem":{"title":"ServiceInfo model improvements and deprecations","permalink":"/blog/2022/05/03/serviceinfo-model-improvements"},"nextItem":{"title":"Saying goodbye to the time_changed event","permalink":"/blog/2022/04/20/saying-goodbye-to-event_time_changed"}},"content":"Starting with Home Assistant 2022.5, the TTS say service will set the media content ID to be a media source URI. These need to be resolved inside the media player using the media source integration.\n\nPreviously the TTS integration would set the media content ID to a URL that pointed at Home Assistant and it required no extra work from the media players.\n\nMedia players need to support the media source integration as [documented here](/docs/core/entity/media-player#browse-media)."},{"id":"/2022/04/20/saying-goodbye-to-event_time_changed","metadata":{"permalink":"/blog/2022/04/20/saying-goodbye-to-event_time_changed","source":"@site/blog/2022-04-20-saying-goodbye-to-event_time_changed.md","title":"Saying goodbye to the time_changed event","description":"With Home Assistant Core 0.113, we began transiting to using the asyncio event loop for scheduling events.","date":"2022-04-20T00:00:00.000Z","tags":[],"readingTime":0.885,"hasTruncateMarker":false,"authors":[{"name":"J. Nick Koston","url":"https://github.com/bdraco","key":null,"page":null}],"frontMatter":{"author":"J. Nick Koston","authorURL":"https://github.com/bdraco","title":"Saying goodbye to the time_changed event"},"unlisted":false,"prevItem":{"title":"Text-to-speech say service to use media source IDs","permalink":"/blog/2022/04/26/tts-say-media-source"},"nextItem":{"title":"Calendar Data Model improvements and deprecations","permalink":"/blog/2022/04/18/calendar-data-model"}},"content":"With Home Assistant Core 0.113, we began transiting to using the asyncio event loop for scheduling events.\n\nWith 2022.5, we are excited to announce that this process is now complete. The legacy `time_changed` event, also known as `EVENT_TIME_CHANGED` is no longer fired every second. Integrations that listen for all events no longer need to filter out `EVENT_TIME_CHANGED`. Integrations that run in a separate thread may see slight performance benefits since they will no longer be awakened every second.\n\nWith the previous implementation, consumers would subscribe to the `time_changed` event and check the time every time it fired to see if it was a match. This pattern led to many callbacks where most of the time, the callback would reject the event and continue receiving callbacks until the desired time was reached.\n\nIf your custom integration is still relying on listening for `time_changed` events, it will need to transition to using one of the built-in event helpers, which are, in most cases, a one-line drop-in replacement. For more information, please review the [integration\ndocumentation on listening for events](https://developers.home-assistant.io/docs/integration_listen_events#tracking-time-changes)."},{"id":"/2022/04/18/calendar-data-model","metadata":{"permalink":"/blog/2022/04/18/calendar-data-model","source":"@site/blog/2022-04-18-calendar-data-model.md","title":"Calendar Data Model improvements and deprecations","description":"As of Home Assistant Core 2022.5, CalendarDeviceEntity is deprecated and superseded by CalendarEntity. The new entity has a more well defined data model, and a streamlined websocket API. CalendarDeviceEntity will be removed in a future Home Assistant release and custom components are required to migrate to the new APIs. See the new Calendar Entity developer documentation for details.","date":"2022-04-18T00:00:00.000Z","tags":[],"readingTime":0.29,"hasTruncateMarker":false,"authors":[{"name":"Allen Porter","url":"https://github.com/allenporter","key":null,"page":null}],"frontMatter":{"author":"Allen Porter","authorURL":"https://github.com/allenporter","title":"Calendar Data Model improvements and deprecations"},"unlisted":false,"prevItem":{"title":"Saying goodbye to the time_changed event","permalink":"/blog/2022/04/20/saying-goodbye-to-event_time_changed"},"nextItem":{"title":"Local OAuth2 Updates","permalink":"/blog/2022/04/16/local-oauth2"}},"content":"As of Home Assistant Core 2022.5, `CalendarDeviceEntity` is deprecated and superseded by `CalendarEntity`. The new entity has a more well defined data model, and a streamlined websocket API. `CalendarDeviceEntity` will be removed in a future Home Assistant release and custom components are required to migrate to the new APIs. See the new [Calendar Entity](https://developers.home-assistant.io/docs/core/entity/calendar) developer documentation for details."},{"id":"/2022/04/16/local-oauth2","metadata":{"permalink":"/blog/2022/04/16/local-oauth2","source":"@site/blog/2022-04-16-local-oauth2.md","title":"Local OAuth2 Updates","description":"As of Home Assistant Core 2022.5, integrations that register a configentryoauth2flow.LocalOAuth2Implementation must have a manifest dependency on the auth component.","date":"2022-04-16T00:00:00.000Z","tags":[],"readingTime":0.23,"hasTruncateMarker":false,"authors":[{"name":"Allen Porter","url":"https://github.com/allenporter","key":null,"page":null}],"frontMatter":{"author":"Allen Porter","authorURL":"https://github.com/allenporter","title":"Local OAuth2 Updates"},"unlisted":false,"prevItem":{"title":"Calendar Data Model improvements and deprecations","permalink":"/blog/2022/04/18/calendar-data-model"},"nextItem":{"title":"Deprecating all SUPPORT_* constants","permalink":"/blog/2022/04/02/support-constants-deprecation"}},"content":"As of Home Assistant Core 2022.5, integrations that register a `config_entry_oauth2_flow.LocalOAuth2Implementation` must have a [manifest dependency](https://developers.home-assistant.io/docs/creating_integration_manifest?_highlight=manifest#dependencies) on the `auth` component.\n\nThis is motivated by a broader effort to improve OAuth [Application Credentials](https://github.com/home-assistant/architecture/discussions/692#discussioncomment-2121633) handling, which required changing how the HTTP endpoint for the OAuth callback is registered."},{"id":"/2022/04/02/support-constants-deprecation","metadata":{"permalink":"/blog/2022/04/02/support-constants-deprecation","source":"@site/blog/2022-04-02-support-constants-deprecation.md","title":"Deprecating all SUPPORT_* constants","description":"As of Home Assistant Core 2022.5, all SUPPORT_* constants are deprecated,","date":"2022-04-02T00:00:00.000Z","tags":[],"readingTime":1.885,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorTwitter":"frenck","title":"Deprecating all SUPPORT_* constants"},"unlisted":false,"prevItem":{"title":"Local OAuth2 Updates","permalink":"/blog/2022/04/16/local-oauth2"},"nextItem":{"title":"New features for developers in 2022.4","permalink":"/blog/2022/03/30/2022.4-new-dev-features"}},"content":"As of Home Assistant Core 2022.5, all `SUPPORT_*` constants are deprecated,\neach entity platform is providing an `EntityFeature` enum to replace them.\n\nThis applies to, the following platforms:\n\n- **Alarm Control Panel**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_ALARM_ARM_AWAY`\n  - `SUPPORT_ALARM_ARM_CUSTOM_BYPASS`\n  - `SUPPORT_ALARM_ARM_HOME`\n  - `SUPPORT_ALARM_ARM_NIGHT`\n  - `SUPPORT_ALARM_ARM_VACATION`\n  - `SUPPORT_ALARM_TRIGGER`\n\n  Use the new [`AlarmControlPanelEntityFeature`](/docs/core/entity/alarm-control-panel#supported-features) enum instead.\n\n- **Camera**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_ON_OFF`\n  - `SUPPORT_STREAM`\n\n  Use the new [`CameraEntityFeature`](/docs/core/entity/camera#supported-features) enum instead.\n\n- **Cover**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_OPEN`\n  - `SUPPORT_CLOSE`\n  - `SUPPORT_SET_POSITION`\n  - `SUPPORT_STOP`\n  - `SUPPORT_OPEN_TILT`\n  - `SUPPORT_CLOSE_TILT`\n  - `SUPPORT_STOP_TILT`\n  - `SUPPORT_SET_TILT_POSITION`\n\n  Use the new [`CoverEntityFeature`](/docs/core/entity/cover#supported-features) enum instead.\n\n- **Climate**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_TARGET_TEMPERATURE`\n  - `SUPPORT_TARGET_TEMPERATURE_RANGE`\n  - `SUPPORT_TARGET_HUMIDITY`\n  - `SUPPORT_FAN_MODE`\n  - `SUPPORT_PRESET_MODE`\n  - `SUPPORT_SWING_MODE`\n  - `SUPPORT_AUX_HEAT`\n\n  Use the new [`ClimateEntityFeature`](/docs/core/entity/climate#supported-features) enum instead.\n\n- **Humidifier**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_MODES`\n\n  Use the new [`HumidifierEntityFeature`](/docs/core/entity/humidifier#supported-features) enum instead.\n\n- **Fan**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_SET_SPEED`\n  - `SUPPORT_OSCILLATE`\n  - `SUPPORT_DIRECTION`\n  - `SUPPORT_PRESET_MODE`\n\n  Use the new [`FanEntityFeature`](/docs/core/entity/fan#supported-features) enum instead.\n\n- **Light**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_EFFECT`\n  - `SUPPORT_FLASH`\n  - `SUPPORT_TRANSITION`\n\n  Use the new [`LightEntityFeature`](/docs/core/entity/light#supported-features) enum instead.\n\n  Note that the following light constants were already deprecated,\n  thus `LightEntityFeature` does not provide a replacement for those.\n\n  - `SUPPORT_BRIGHTNESS`\n  - `SUPPORT_COLOR_TEMP`\n  - `SUPPORT_COLOR`\n  - `SUPPORT_WHITE_VALUE`\n\n  These cases should instead be migrated to the [new color modes](/docs/core/entity/light#color-modes).\n\n- **Lock**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_OPEN`\n\n  Use the new [`LockEntityFeature`](/docs/core/entity/lock#supported-features) enum instead.\n\n- **Media Player**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_PAUSE`\n  - `SUPPORT_SEEK`\n  - `SUPPORT_VOLUME_SET`\n  - `SUPPORT_VOLUME_MUTE`\n  - `SUPPORT_PREVIOUS_TRACK`\n  - `SUPPORT_NEXT_TRACK`\n  - `SUPPORT_TURN_ON`\n  - `SUPPORT_TURN_OFF`\n  - `SUPPORT_PLAY_MEDIA`\n  - `SUPPORT_VOLUME_STEP`\n  - `SUPPORT_SELECT_SOURCE`\n  - `SUPPORT_STOP`\n  - `SUPPORT_CLEAR_PLAYLIST`\n  - `SUPPORT_PLAY`\n  - `SUPPORT_SHUFFLE_SET`\n  - `SUPPORT_SELECT_SOUND_MODE`\n  - `SUPPORT_BROWSE_MEDIA`\n  - `SUPPORT_REPEAT_SET`\n  - `SUPPORT_GROUPING`\n\n  Use the new [`MediaPlayerEntityFeature`](/docs/core/entity/media-player#supported-features) enum instead.\n\n- **Remote**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_LEARN_COMMAND`\n  - `SUPPORT_DELETE_COMMAND`\n  - `SUPPORT_ACTIVITY`\n\n  Use the new [`RemoteEntityFeature`](/docs/core/entity/remote#supported-features) enum instead.\n\n- **Siren**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_DURATION`\n  - `SUPPORT_TONES`\n  - `SUPPORT_TURN_OFF`\n  - `SUPPORT_TURN_ON`\n  - `SUPPORT_VOLUME_SET`\n\n  Use the new [`SirenEntityFeature`](/docs/core/entity/siren#supported-features) enum instead.\n\n- **Vacuum**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_TURN_ON`\n  - `SUPPORT_TURN_OFF`\n  - `SUPPORT_PAUSE`\n  - `SUPPORT_STOP`\n  - `SUPPORT_RETURN_HOME`\n  - `SUPPORT_FAN_SPEED`\n  - `SUPPORT_BATTERY`\n  - `SUPPORT_STATUS`\n  - `SUPPORT_SEND_COMMAND`\n  - `SUPPORT_LOCATE`\n  - `SUPPORT_CLEAN_SPOT`\n  - `SUPPORT_MAP`\n  - `SUPPORT_STATE`\n  - `SUPPORT_START`\n\n  Use the new [`VacuumEntityFeature`](/docs/core/entity/vacuum#supported-features) enum instead.\n\n- **Water Heater**\n\n  Deprecated supported feature constants:\n\n  - `SUPPORT_TARGET_TEMPERATURE`\n  - `SUPPORT_OPERATION_MODE`\n  - `SUPPORT_AWAY_MODE`\n\n  Use the new [`WaterHeaterEntityFeature`](/docs/core/entity/water-heater#supported-features) enum instead."},{"id":"/2022/03/30/2022.4-new-dev-features","metadata":{"permalink":"/blog/2022/03/30/2022.4-new-dev-features","source":"@site/blog/2022-03-30-2022.4-new-dev-features.md","title":"New features for developers in 2022.4","description":"There are a handful of new features for developers in 2022.4.","date":"2022-03-30T00:00:00.000Z","tags":[],"readingTime":1.61,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"New features for developers in 2022.4"},"unlisted":false,"prevItem":{"title":"Deprecating all SUPPORT_* constants","permalink":"/blog/2022/04/02/support-constants-deprecation"},"nextItem":{"title":"Introducing the update entity","permalink":"/blog/2022/03/20/update-entity"}},"content":"There are a handful of new features for developers in 2022.4.\n\n- [Integration Type]: Integrations can now mark themselves as helper.\n- [Backup platform]: Integrations can now pause work during a backup by implementing the new backup platform.\n- hidden_by in entity registry: Entities can now be hidden via the entity registry. These entities should default to not be included when exposing entities to an external UI like voice assistants.\n- [New and updated selectors]: We added a bunch of new selectors to be used in blueprints, services.yaml, and config flows.\n- [Selectors in backend flows]: You can now use the `selector` helper in your config flows. It is configured and renders just like selectors in services.yaml/blueprints.\n- [ha-form context]: Context is a new way to allow selectors to be dynamically configured based on values from other fields. Currently only available for the attribute selector.\n- [config flow helper text for fields]: Config flow fields can now have a description.\n- [Schema Config Flow helper]: New helper to create config flows based on a config schema. [Example implementation](https://github.com/home-assistant/core/blob/dev/homeassistant/components/switch_as_x/config_flow.py)\n- [Show Menu step]: This new step in a data entry flow shows a menu to the user.\n- [Fan speed]: We introduced a new format and this transition is now completed.\n- [Device State Attributes]: Backwards compatibility support for this property has been removed after being deprecated since Home Assistant 2021.4. Use `extra_state_attributes` instead.\n- [Cameras without width/height]: The compatbility layer for cameras without width/height has been removed.\n- [Calendar offset]: Calendar method signatures for `calculate_offset` and `is_offset_reached` have changed, in preparation for typing improvements in Calendar, and potential simplification of offsets more generally.\n\n\n[ha-form context]: https://github.com/home-assistant/frontend/pull/12062\n[Integration Type]: /docs/creating_integration_manifest\n[Backup platform]: /docs/core/platform/backup\n[New and updated selectors]: https://next.home-assistant.io/docs/blueprint/selectors/\n[Selectors in backend flows]: /docs/data_entry_flow_index#show-form\n[config flow helper text for fields]: /docs/data_entry_flow_index#show-form\n[Schema Config Flow helper]: https://github.com/home-assistant/core/blob/dev/homeassistant/helpers/schema_config_entry_flow.py\n[Show Menu step]: /docs/data_entry_flow_index#show-menu\n[Fan speed]: https://github.com/home-assistant/core/pull/67743\n[Device State Attributes]: https://github.com/home-assistant/core/pull/67837\n[Cameras without width/height]: https://github.com/home-assistant/core/pull/68039\n[Calendar offset]: https://github.com/home-assistant/core/pull/68724"},{"id":"/2022/03/20/update-entity","metadata":{"permalink":"/blog/2022/03/20/update-entity","source":"@site/blog/2022-03-20-update-entity.md","title":"Introducing the update entity","description":"Home Assistant 2022.4 will provide a brand new entity platform:","date":"2022-03-20T00:00:00.000Z","tags":[],"readingTime":1.01,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorTwitter":"frenck","title":"Introducing the update entity"},"unlisted":false,"prevItem":{"title":"New features for developers in 2022.4","permalink":"/blog/2022/03/30/2022.4-new-dev-features"},"nextItem":{"title":"Opt in support to manually remove device","permalink":"/blog/2022/02/28/opt-in-remove-device"}},"content":"Home Assistant 2022.4 will provide a brand new entity platform:\nthe `update` entity.\n\nThe `update` entity can be provided by integrations to indicate there is an\nupdate available, for a device or service, towards the Home Assistant user. It\nallows you to provide additional information about the update, such as\nthe latest version available, a summary of the release notes and a link to the\nfull release announcement online.\n\nAdditionally, the `install` method can be implemented, so the user can install\nthe update directly from within Home Assistant.\n\nAdding the `update` platform to your integration is relatively simple to do, as\nit is just a couple of properties and, if available for the integration,\na single `install` method. Most other details are handled by Home Assistant \nautomatically.\n\nIn Home Assistant Core [2021.12](https://www.home-assistant.io/blog/2021/12/11/release-202112/#brand-new-configuration-panel) we moved updates provided by\nthe Supervisor to the Configuration panel, using this new platform, we will\nbe able to extend that in the near future by the information provided by these\nbrand new entities.\n\nSee our [developer documentation](/docs/core/entity/update) for how to implement this in an integration.\n\nIf your integration previously provided a `binary_sensor` or `button` entity\nwith the `update` device class, please consider replacing those with the\n`update` entity."},{"id":"/2022/02/28/opt-in-remove-device","metadata":{"permalink":"/blog/2022/02/28/opt-in-remove-device","source":"@site/blog/2022-02-28-opt-in-remove-device.md","title":"Opt in support to manually remove device","description":"In the Home Assistant Core 2022.3 release, Erik Montnemery added support for any integration to opt in to show a \"delete device\" button on the device page in the Home Assistant interface.","date":"2022-02-28T00:00:00.000Z","tags":[],"readingTime":0.885,"hasTruncateMarker":false,"authors":[{"name":"Martin Hjelmare","url":"https://github.com/MartinHjelmare","key":null,"page":null}],"frontMatter":{"author":"Martin Hjelmare","authorURL":"https://github.com/MartinHjelmare","authorTwitter":"MartinHjelmare","title":"Opt in support to manually remove device"},"unlisted":false,"prevItem":{"title":"Introducing the update entity","permalink":"/blog/2022/03/20/update-entity"},"nextItem":{"title":"Paper Elements are being removed","permalink":"/blog/2022/02/18/paper-elements"}},"content":"In the Home Assistant Core 2022.3 release, [Erik Montnemery](https://github.com/emontnemery) added [support](https://github.com/home-assistant/core/pull/66188) for any integration to opt in to show a \"delete device\" button on the device page in the Home Assistant interface.\n\nSee our [developer documentation](/docs/device_registry_index#removing-devices) for how to implement this in an integration.\n\nSo far five integrations have opted in to this feature:\n\n- [Google Cast](https://github.com/home-assistant/core/pull/66808)\n- [MQTT](https://github.com/home-assistant/core/pull/66766)\n- [MySensors](https://github.com/home-assistant/core/pull/67128)\n- [RFXCOM RFXtrx](https://github.com/home-assistant/core/pull/58252)\n- [Tasmota](https://github.com/home-assistant/core/pull/66811)\n\n## Why is this needed?\n\nBefore this feature was added, integrations were advised to automatically clean up stale devices from the config entry. But not all integrations are able to automatically determine if a device should be removed, so a manual option where the user can make the choice is in some cases still needed.\n\nTo solve this need, some integrations had implemented an integration specific websocket command with accompanying frontend support to allow manual removal of a device. With this new feature, integrations do no longer need to add any websocket or frontend code but can easily support, just by implementing the backend callback function, manual device removal.\n\nHappy days!"},{"id":"/2022/02/18/paper-elements","metadata":{"permalink":"/blog/2022/02/18/paper-elements","source":"@site/blog/2022-02-18-paper-elements.md","title":"Paper Elements are being removed","description":"In the Home Assistant Core 2022.3 release, we are removing all of the paper-dropdown-menu and paper-input elements in the Frontend Repository. This means that any custom card that was previously using these elements in the card or card editor will no longer render correctly and will require updates to its codebase.","date":"2022-02-18T00:00:00.000Z","tags":[],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"Zack Barett","url":"https://github.com/zsarnett","key":null,"page":null}],"frontMatter":{"author":"Zack Barett","authorURL":"https://github.com/zsarnett","title":"Paper Elements are being removed"},"unlisted":false,"prevItem":{"title":"Opt in support to manually remove device","permalink":"/blog/2022/02/28/opt-in-remove-device"},"nextItem":{"title":"Device configuration URL and entity categories","permalink":"/blog/2021/10/26/config-entity"}},"content":"In the Home Assistant Core 2022.3 release, we are removing all of the `paper-dropdown-menu` and `paper-input` elements in the Frontend Repository. This means that any custom card that was previously using these elements in the card or card editor will no longer render correctly and will require updates to its codebase.\n\nCustom Cards using the elements used in the Home Assistant Frontend have never been supported.\n\n## Why did we do this?\n\nWe are converting our codebase from the deprecated `paper` elements to the new [Material Web Components](https://github.com/material-components/material-components-web-components) from Google. This is to keep our frontend up to date with the latest components and features.\n\n## What should custom cards do?\n\nOur advice is to bundle the Material Web Components in your custom card using [Scoped Custom Element Registry](https://github.com/lit/lit/tree/main/packages/labs/scoped-registry-mixin). The Home Assistant Frontend loads the [polyfill](https://github.com/webcomponents/polyfills/tree/master/packages/scoped-custom-element-registry) needed for this to work starting with the release of Home Assistant 2022.3.\n\nThis will allow any custom card to utilize the same MWC elements that are used in the Lovelace Editors. You can see an example of this usage in the [Boilerplate Card](https://github.com/custom-cards/boilerplate-card). Other HA elements like the icon picker (`<ha-icon-picker>`) are not supported in this same way.\n\nSee [this old blog post](https://developers.home-assistant.io/blog/2020/10/02/lazyMoreInfo#what-about-external-elements) for more information."},{"id":"/2021/10/26/config-entity","metadata":{"permalink":"/blog/2021/10/26/config-entity","source":"@site/blog/2021-10-26-config-entity.md","title":"Device configuration URL and entity categories","description":"Home Assistant Core 2021.11 introduces two new concepts to make managing devices easier,","date":"2021-10-26T00:00:00.000Z","tags":[],"readingTime":1.15,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Device configuration URL and entity categories"},"unlisted":false,"prevItem":{"title":"Paper Elements are being removed","permalink":"/blog/2022/02/18/paper-elements"},"nextItem":{"title":"New sensor state class: total","permalink":"/blog/2021/09/20/state_class_total"}},"content":"Home Assistant Core 2021.11 introduces two new concepts to make managing devices easier,\ndevice configuration URL and entity categories.\n\n### Device configuration URL\n\nIt's now possible to provide a configuration_url as part of the device registry information.\nThe configuration_url is used in the device card to allow the user to visit the device\nfor configuration or diagnostics which is not available in Home Assistant.\nNote that the URL linked to is not proxied by Home Assistant, so this typically won't work\nwhen connecting to Home Assistant remotely.\n\n[![Screenshot showing visit device](/img/en/blog/2021-10-26-config-entity/configuration_url.png)](/img/en/blog/2021-10-26-config-entity/configuration_url.png)\n\n### Entity categories \n\nEntities now have an optional property `entity_category` for classifying non-primary\nentities. Set to `config` for entities that allow changing the configuration of a device,\nfor example, a switching entity making it possible to turn the background illumination of a\nswitch on and off. Set to `diagnostic` for an entity exposing some configuration parameter\nor diagnostics of a device but does not allow changing it, for example, a sensor showing\nRSSI or MAC address with allowed values.\n\nEntities which have the `entity_category` set:\n- Are not included in a service call targetting a whole device or area.\n- Are, by default, not exposed to Google Assistant or Alexa.\n- Are shown on a separate card on the device configuration page.\n- Do not show up on the automatically generated Lovelace Dashboards.\n\n[![Screenshot showing seperation of entity categories](/img/en/blog/2021-10-26-config-entity/entity_categories.png)](/img/en/blog/2021-10-26-config-entity/entity_categories.png)"},{"id":"/2021/09/20/state_class_total","metadata":{"permalink":"/blog/2021/09/20/state_class_total","source":"@site/blog/2021-09-20-state_class_total.md","title":"New sensor state class: total","description":"Note: This post was edited 2021-10-21 to remove references to total accumulated increases","date":"2021-09-20T00:00:00.000Z","tags":[],"readingTime":3.555,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"New sensor state class: total"},"unlisted":false,"prevItem":{"title":"Device configuration URL and entity categories","permalink":"/blog/2021/10/26/config-entity"},"nextItem":{"title":"Supervisor update","permalink":"/blog/2021/08/24/supervisor_update"}},"content":"Note: This post was edited 2021-10-21 to remove references to total accumulated increases\nand decreases which were removed and never included in the Home Assistant 2021.10 release.\n\nA new state class, `total` has been added and the `last_reset` attribute has been\nadded back to `SensorEntity` and is no longer deprecated. The driver for the change\nis to support cases where `total_increasing`, which was introduced in Home Assistant\n2021.9, is too restrictive to cover all cases. Note that setting `last_reset` for sensors\nwith state class `measurement` is still deprecated.\n\n### State classes\n\nThere are 3 defined state classes:\n\n- `measurement`, the state represents a measurement in present time, for example a\n   temperature, electric power, etc. For supported sensors, statistics of min,\n   max and average sensor readings are updated periodically.\n- `total`, the state represents a total amount that can both increase and\n   decrease, e.g. a net energy meter. When supported, the accumulated growth\n   or decline of the sensor's value since it was first added is updated periodically.\n- `total_increasing`, a monotonically increasing total, e.g. an amount of\n   consumed gas, water or energy. When supported, the accumulated growth of the sensor's\n   value since it was first added is updated periodically.\n\n#### State class `total`\nFor sensors with state class `total`, the `last_reset` attribute can\noptionally be set to gain manual control of meter cycles.\nThe sensor's state when it's first added to Home Assistant is used as an initial\nzero-point. When a `last_reset` changes, the zero-point will be set to 0.\nIf last_reset is not set, the sensor's value when it was first added is used as the\nzero-point when calculating `sum` statistics.\n\nExample of state class `total` without last_reset:\n\n| t                      | state  | sum    |\n| :--------------------- | -----: | -----: |\n|   2021-08-01T13:00:00  |  1000  |     0  |\n|   2021-08-01T14:00:00  |  1010  |    10  |\n|   2021-08-01T15:00:00  |     0  | -1000  |\n|   2021-08-01T16:00:00  |     5  |  -995  |\n\nExample of state class `total` with last_reset:\n\n| t                      | state  | last_reset          | sum    |\n| :--------------------- | -----: | ------------------- | -----: |\n|   2021-08-01T13:00:00  |  1000  | 2021-08-01T13:00:00 |     0  |\n|   2021-08-01T14:00:00  |  1010  | 2021-08-01T13:00:00 |    10  |\n|   2021-08-01T15:00:00  |  1005  | 2021-08-01T13:00:00 |     5  |\n|   2021-08-01T16:00:00  |     0  | 2021-09-01T16:00:00 |     5  |\n|   2021-08-01T17:00:00  |     5  | 2021-09-01T16:00:00 |    10  |\n\nExample of state class `total` where the there initial state at the beginning\nof the new meter cycle is not 0, but 0 is used as zero-point:\n\n| t                      | state  | last_reset          | sum    |\n| :--------------------- | -----: | ------------------- | -----: |\n|   2021-08-01T13:00:00  |  1000  | 2021-08-01T13:00:00 |     0  |\n|   2021-08-01T14:00:00  |  1010  | 2021-08-01T13:00:00 |    10  |\n|   2021-08-01T15:00:00  |  1005  | 2021-08-01T13:00:00 |     5  |\n|   2021-08-01T16:00:00  |     5  | 2021-09-01T16:00:00 |    10  |\n|   2021-08-01T17:00:00  |    10  | 2021-09-01T16:00:00 |    15  |\n\n\n#### State class `total_increasing`\n\nFor sensors with state_class `total_increasing`, a decreasing value is\ninterpreted as the start of a new meter cycle or the replacement of the meter. It is\nimportant that the integration ensures that the value cannot erroneously decrease in \nthe case of calculating a value from a sensor with measurement noise present. This state\nclass is useful for gas meters, electricity meters, water meters etc.\n\nThe sensor's state when it's first added to Home Assistant is used as an initial\nzero-point. When a new meter cycle is detected the zero-point will be set to 0.\nPlease refer to the tables below for how this affects the statistics.\n\nExample of state class `total_increasing` with a new meter cycle:\n\n| t                      | state  | sum  |\n| :--------------------- | -----: | ---: |\n|   2021-08-01T13:00:00  |  1000  |   0  |\n|   2021-08-01T14:00:00  |  1010  |  10  |\n|   2021-08-01T15:00:00  |     0  |  10  |\n|   2021-08-01T16:00:00  |     5  |  15  |\n\nExample of state class `total_increasing` where the there initial state at the beginning\nof the new meter cycle is not 0, but 0 is used as zero-point:\n\n| t                      | state  | sum  |\n| :--------------------- | -----: | ---: |\n|   2021-08-01T13:00:00  |  1000  |   0  |\n|   2021-08-01T14:00:00  |  1010  |  10  |\n|   2021-08-01T15:00:00  |     5  |  15  |\n|   2021-08-01T16:00:00  |    10  |  20  |"},{"id":"/2021/08/24/supervisor_update","metadata":{"permalink":"/blog/2021/08/24/supervisor_update","source":"@site/blog/2021-08-24-supervisor_update.md","title":"Supervisor update","description":"It's been a while since we posted about changes to the Supervisor. Here are some highlights from the past year and the future. This information is mainly for add-on developers, but there is little something for everyone in here. If you have not yet seen it, we have posted a blog on the main site that you should read.","date":"2021-08-24T00:00:00.000Z","tags":[],"readingTime":3.75,"hasTruncateMarker":false,"authors":[{"name":"Joakim Sørensen","url":"https://github.com/ludeeus","imageURL":"/img/profile/ludeeus.jpg","key":null,"page":null}],"frontMatter":{"author":"Joakim Sørensen","authorURL":"https://github.com/ludeeus","authorImageURL":"/img/profile/ludeeus.jpg","authorTwitter":"ludeeus","title":"Supervisor update"},"unlisted":false,"prevItem":{"title":"New sensor state class: total","permalink":"/blog/2021/09/20/state_class_total"},"nextItem":{"title":"New sensor state class: total_increasing","permalink":"/blog/2021/08/16/state_class_total"}},"content":"It's been a while since we posted about changes to the Supervisor. Here are some highlights from the past year and the future. This information is mainly for add-on developers, but there is little something for everyone in here. If you have not yet seen it, we have posted a [blog on the main site][main_blog] that you should read.\n\n## Snapshot -> Backup\n\nFirst up, as mentioned in the [blog on the main site][main_blog], we have started a transition away from the name \"snapshot\" that has been with us since the beginning of the Supervisor and are now moving to the more recognizable \"backup\".\n\nThese changes are live now on the `dev` channel for the Supervisor, so you can start testing and adjusting your tools/add-ons to make sure they will still work when your users get this.\n\n### API changes\n\nWith the transition from \"snapshot\" to \"backup\", a new base section in the Supervisor API has been added [`/backups`][supervisor_api_backups] that operates the same way as [`/snapshots`][supervisor_api_snapshots] with all the same endpoints as the old section has but there are two key differences:\n\n- If you access `/backups` the data returned now will be `{\"backups\": []}` instead of `{\"snapshots\": []}`\n- To delete a snapshot you now have to use the `DELETE` HTTP method with the `/backups` endpoint, previously both `POST` and `DELETE` were supported.\n\nThe old [`/snapshots`][supervisor_api_snapshots] endpoints are now deprecated and are scheduled for removal in Q4 of this year.\n\n### Backup structure changes\n\nFor consistency, we have also changed the name of the meta file inside the backup tar from `snapshot.json` to `backup.json`. If you have a tool that uses that file you should look for both so your tool will work for existing as well as new backups.\n\n## Streaming ingress\n\nSome add-ons need to receive large payloads from the user, for instance with uploading. Previously, there has been a limit of 16 MB per request for add-ons running behind ingress and this is still the default. If you need to receive larger payloads, you can enable this by setting `ingress_stream` to `True` in the add-on configuration. When you do this the request is streamed from the client to your add-on, and the request has no size limit and virtually no overhead.\n\nNote that not all webservers are able to handle this by default, so you might need to adjust it.\n\n## Deprecated API endpoints\n\nOver the past years, we have restructured parts of our API endpoints, but we have also kept old endpoints working. If you use any of the deprecated endpoints in your tools/add-ons you should move to use the new ones now. All deprecated endpoints are scheduled for removal in Q4 this year.\n\nHere is a list of the deprecated endpoints and their replacements:\n\nDeprecated endpoints | Replaced with\n-- | --\n`/homeassistant/*` | `/core/*`\n`/snapshots/*` | `/backups/*`\n\nIn addition to this, the following are also deprecated and are also scheduled for removal in Q4 this year.\n\n- The environment variable `HASSIO_TOKEN` has been replaced with `SUPERVISOR_TOKEN`.\n- Using `X-Hassio-Key` header has been replaced with [using `Authorization` with a Bearer token][api_example].\n- Using `http://hassio/` to communicate with the Supervisor has been replaced with `http://supervisor/`.\n\n## Supervised installation\n\nMaintaining a [supervised installation][supervised_installation] is currently not the best experience. [The script][supervised_script] that most users use to install is behind what the Supervisor wants from the host. Since there are no real upgrade paths for those using it, users of it need to manually adjust their installation.\n\nRecently we created the [OS Agent][os_agent] as mentioned in the [blog on the main site][main_blog]. This allows for better communication between the host OS and the Supervisor, and to bring in more features. To take advantage of these features users of current supervised installations have to install the OS Agent manually.\n\nAn alternative to this route is to package and distribute the supervised installation as a deb package that can be installed and upgraded with `apt` on the host. For this to be viable, we are looking for a person (or a group of people) that wants to create and maintain this type of deployment, and bring the supervised installation method up to par with our OS, and more importantly make updates needed on the host easier for the users.\n\nIf you have questions about these changes feel free to reach out in the `#devs_supervisor` channel on [our Discord server][discord].\n\nUntil next time 👋\n\n[discord]: https://discord.gg/c5DvZ4e\n[main_blog]: https://www.home-assistant.io/blog/2021/08/24/supervisor-update/\n[supervisor_api_backups]: /docs/api/supervisor/endpoints#backup\n[supervisor_api_snapshots]: /docs/api/supervisor/endpoints#snapshot\n[supervised_installation]: https://github.com/home-assistant/architecture/blob/master/adr/0014-home-assistant-supervised.md\n[supervised_script]: https://github.com/home-assistant/supervised-installer\n[os_agent]: https://github.com/home-assistant/os-agent\n[api_example]: /docs/api/supervisor/examples#get-network-information-with-curl"},{"id":"/2021/08/16/state_class_total","metadata":{"permalink":"/blog/2021/08/16/state_class_total","source":"@site/blog/2021-08-16-state_class_total.md","title":"New sensor state class: total_increasing","description":"A new state class, total_increasing has been added. In addition, the","date":"2021-08-16T00:00:00.000Z","tags":[],"readingTime":1.955,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"New sensor state class: total_increasing"},"unlisted":false,"prevItem":{"title":"Supervisor update","permalink":"/blog/2021/08/24/supervisor_update"},"nextItem":{"title":"Temperature conversions moving to SensorEntity","permalink":"/blog/2021/08/12/sensor_temperature_conversion"}},"content":"A new state class, `total_increasing` has been added. In addition, the\n`last_reset` attribute is removed from `SensorEntity`. The driver for the changes is to\nmake it easier to integrate with devices, like utility meters.\n\n### State classes\n\nThere are 2 defined state classes:\n\n- `measurement`, the state represents a measurement in present time, for \n   example a temperature, electric power, the value of a stock portfolio, etc. For\n   supported sensors, statistics of hourly min, max and average sensor readings or of\n   the accumulated growth or decline of the sensor's value since it was first added is\n   updated hourly.\n- `total_increasing`, a monotonically increasing total, e.g. an amount of\n   consumed gas, water or energy. When supported, the accumulated growth of the sensor's\n   value since it was first added is updated hourly.\n\n#### `STATE_CLASS_TOTAL_INCREASING`\n\nFor sensors with state_class `STATE_CLASS_TOTAL_INCREASING`, a decreasing value is\ninterpreted as the start of a new meter cycle or the replacement of the meter. It is\nimportant that the integration ensures that the value cannot erroneously decrease in \nthe case of calculating a value from a sensor with measurement noise present. This state\nclass is useful for gas meters, electricity meters, water meters etc.\n\nThe sensor's state when it's first added to Home Assistant is used as an initial\nzero-point. When a new meter cycle is detected the zero-point will be set to 0.\nPlease refer to the tables below for how this affects the statistics.\n\nExample of `STATE_CLASS_TOTAL_INCREASING` with a new meter cycle:\n\n| t                      | state  | sum  |\n| :--------------------- | -----: | ---: |\n|   2021-08-01T13:00:00  |  1000  |   0  |\n|   2021-08-01T14:00:00  |  1010  |  10  |\n|   2021-08-01T15:00:00  |     0  |  10  |\n|   2021-08-01T16:00:00  |     5  |  15  |\n\nExample of `STATE_CLASS_TOTAL_INCREASING` where the there initial state at the beginning\nof the new meter cycle is not 0, but 0 is used as zero-point:\n\n| t                      | state  | sum  |\n| :--------------------- | -----: | ---: |\n|   2021-08-01T13:00:00  |  1000  |   0  |\n|   2021-08-01T14:00:00  |  1010  |  10  |\n|   2021-08-01T15:00:00  |     5  |  15  |\n|   2021-08-01T16:00:00  |    10  |  20  |\n\nThis state class used to be represented by state class `measurement` in combination with a `last_reset` value. This approach has been deprecated and will be interpreted as a `total_increasing` state class instead with an automatic last reset."},{"id":"/2021/08/12/sensor_temperature_conversion","metadata":{"permalink":"/blog/2021/08/12/sensor_temperature_conversion","source":"@site/blog/2021-08-12-sensor_temperature_conversion.md","title":"Temperature conversions moving to SensorEntity","description":"Temperature unit conversions are moving from the Entity base class to the SensorEntity base","date":"2021-08-12T00:00:00.000Z","tags":[],"readingTime":0.915,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"Temperature conversions moving to SensorEntity"},"unlisted":false,"prevItem":{"title":"New sensor state class: total_increasing","permalink":"/blog/2021/08/16/state_class_total"},"nextItem":{"title":"New sensor properties for long-term statistics","permalink":"/blog/2021/05/25/sensor_attributes"}},"content":"Temperature unit conversions are moving from the `Entity` base class to the `SensorEntity` base\nclass. Unit conversions will only be done if the sensor's `device_class` attribute is set\nto `DEVICE_CLASS_TEMPERATURE`. If the `device_class` is not set or is not set to\n`DEVICE_CLASS_TEMPERATURE` temperature conversion will take place during a transition\nperiod and a warning will be logged.\n\nTo facilitate this, the sensor entity model has been updated with two new properties, \n`native_value` and `native_unit_of_measurement`. This allows us to add additional\nunit conversions in the future instead of relying on the integrations to do it themselves.\n\nSensor implementations should no longer implement the `state()` property function or set\nthe `_attr_state` attribute. Sensor implementations should also not implement the\n`unit_of_measurement` property function, set the `_attr_unit_of_measurement` attribute\nor set the `unit_of_measurement` member of `EntityDescription`.\n\n### native_value\n\nThe value reported by the sensor.\nThe actual state written to the state machine may be modified by `SensorEntity` due to\nunit conversions.\n\n### native_unit_of_measurement\n\nThe unit of measurement of the sensor, if any.\nThe `unit_of_measurement` written to the state machine may be modified by `SensorEntity`\ndue to unit conversions."},{"id":"/2021/05/25/sensor_attributes","metadata":{"permalink":"/blog/2021/05/25/sensor_attributes","source":"@site/blog/2021-05-25-sensor_attributes.md","title":"New sensor properties for long-term statistics","description":"The sensor entity model has been updated with two new properties, stateclass and lastreset. The driver for both the new properties is to enable automatic generation of long-term statistics.","date":"2021-05-25T00:00:00.000Z","tags":[],"readingTime":1.65,"hasTruncateMarker":false,"authors":[{"name":"Erik Montnémery","url":"https://github.com/emontnemery","key":null,"page":null}],"frontMatter":{"author":"Erik Montnémery","authorURL":"https://github.com/emontnemery","title":"New sensor properties for long-term statistics"},"unlisted":false,"prevItem":{"title":"Temperature conversions moving to SensorEntity","permalink":"/blog/2021/08/12/sensor_temperature_conversion"},"nextItem":{"title":"Upgrade to Lit 2.0","permalink":"/blog/2021/05/19/lit-2.0"}},"content":"The sensor entity model has been updated with two new properties, `state_class` and `last_reset`. The driver for both the new properties is to enable automatic generation of long-term statistics.\n\n### state_class\n\nSensor device classes such as `DEVICE_CLASS_TEMPERATURE` are used to represent wildly different types of data, for example:\n\n- A regularly updated temperature measurement\n- Historical or statistic data, for example daily average temperature\n- Future data, for example tomorrow's forecast\n\nDifferentiating between those sensors which represent a measurement and those which don't is needed in order to automatically make a reasonable selection of sensors to include in long-term statistics.\n\nThe [`state_class`](https://developers.home-assistant.io/docs/core/entity/sensor#properties) property classifies the type of state: The state could be a _measurement in present time_ from a temperature sensor or an energy meter_, a _historic value_ such as the average temperature during the last 24 hours or the amount of energy used last month, or a _predicted value_ such as a weather forecast or the next garbage pickup schedule. If `state_class=\"measurement\"`, the state represents a current value, and not a historical aggregation or a prediction of the future. Otherwise, `state_class=None`. There is an [architecture discussion](https://github.com/home-assistant/architecture/discussions/557) with some additional background.\n\nNote that _measurement in present time_ above does not imply that the state has to be updated with a certain frequency, or that the sensor is not allowed to do indirect measurements such as integrating power to calculate energy. To put it in another way, if the sensor represents the latest observation or the newest data point in a time series it qualifies as `state_class=\"measurement\"`.\n\n### last_reset\n\nThe time when an accumulating sensor such as an electricity usage meter, gas meter, water meter etc. was initialized. If the time of initialization is unknown and the meter will never reset, set to UNIX epoch 0: `homeassistant.util.dt.utc_from_timestamp(0)`. Note that the `datetime.datetime` returned by the `last_reset` property will be converted to an ISO 8601-formatted string when the entity's state attributes are updated. When changing `last_reset`, the `state` must be a valid number."},{"id":"/2021/05/19/lit-2.0","metadata":{"permalink":"/blog/2021/05/19/lit-2.0","source":"@site/blog/2021-05-19-lit-2.0.md","title":"Upgrade to Lit 2.0","description":"We upgraded our frontend to use Lit 2.0, this is a major bump of both LitElement (3.0) and lit-html (2.0) that will now go further under the name Lit together.","date":"2021-05-19T00:00:00.000Z","tags":[],"readingTime":1.31,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://twitter.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://twitter.com/bramkragten","authorTwitter":"bramkragten","title":"Upgrade to Lit 2.0"},"unlisted":false,"prevItem":{"title":"New sensor properties for long-term statistics","permalink":"/blog/2021/05/25/sensor_attributes"},"nextItem":{"title":"Replacing pytz with python-dateutil","permalink":"/blog/2021/05/07/switch-pytz-to-python-dateutil"}},"content":"We upgraded our frontend to use Lit 2.0, this is a major bump of both `LitElement` (3.0) and `lit-html` (2.0) that will now go further under the name [Lit](https://lit.dev) together.\n\nThis upgrade comes with a ton of great [improvements](https://lit.dev/blog/2021-04-21-lit-2.0-meet-lit-all-over-again/), but also with some breaking changes.\n\nIf you have developed a custom card or view, and are using `LitElement` and `lit-html` from our components, your component will be using Lit 2.0 in the next release (2021.6). If you don't know if you are using `LitElement` from our components, your code will look something like this:\n\n```ts\nconst LitElement = Object.getPrototypeOf(customElements.get(\"ha-panel-lovelace\"));\nconst html = LitElement.prototype.html;\nconst css = LitElement.prototype.css;\n```\n\nThis is not a recommended practice, we advise you to bundle Lit into your component, or import it from `unpkg.com` or another source like in this [example](https://developers.home-assistant.io/docs/frontend/custom-ui/custom-card#advanced-example). This way your card is not depending on the Lit version that is shipped with Home Assistant.\n\nOne of the things that changed, is that the creation of the `shadowRoot` is no longer done in the constructor, but just before the first update. This means that if you directly interact with the DOM, like with a query selector, you can no longer assume `shadowRoot` will always be available.\n\nFor all the changes check the [upgrade guide](https://lit.dev/docs/releases/upgrade/) in the Lit documentation.\n\nWe expect most of the cards to work without issues with Lit 2.0, but ask custom card developers to ensure compatibility. You can do this using the current dev version of Home Assistant or by using a nightly version of Home Assistant, both currently use Lit 2.0."},{"id":"/2021/05/07/switch-pytz-to-python-dateutil","metadata":{"permalink":"/blog/2021/05/07/switch-pytz-to-python-dateutil","source":"@site/blog/2021-05-07-switch-pytz-to-python-dateutil.md","title":"Replacing pytz with python-dateutil","description":"Three years ago Paul Ganssle wrote a comparison about time zone handling between pytz and python-dateutil. In this article he shows how it's easy to use pytz in an incorrect way that is hard to spot because it's almost correct:","date":"2021-05-07T00:00:00.000Z","tags":[],"readingTime":1.105,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Replacing pytz with python-dateutil"},"unlisted":false,"prevItem":{"title":"Upgrade to Lit 2.0","permalink":"/blog/2021/05/19/lit-2.0"},"nextItem":{"title":"Astral upgraded to version 2.2","permalink":"/blog/2021/04/09/astral-2.2"}},"content":"Three years ago Paul Ganssle wrote [a comparison](https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html) about time zone handling between `pytz` and `python-dateutil`. In this article he shows how it's easy to use `pytz` in an incorrect way that is hard to spot because it's almost correct:\n\n```python\nimport pytz\nfrom datetime import datetime, timedelta\n\nNYC = pytz.timezone('America/New_York')\ndt = datetime(2018, 2, 14, 12, tzinfo=NYC)\nprint(dt)\n# 2018-02-14 12:00:00-04:56\n```\n\n_[(link to part of the article explaining why it's -4:56)](https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html#pytz-s-time-zone-model)_\n\nIn Home Assistant 2021.6 we're going to switch to `python-dateutil`. You will need to upgrade your custom integration if it relies on the unofficial interface `my_time_zone.localize(my_dt)`. Use Python's official method `my_dt.astimezone(my_time_zone)` instead.\n\nThe property `hass.config.time_zone` will also change to a string instead of a time zone object.\n\nThanks to [@bdraco] for helping revive this effort and push this change [past the finish line](https://github.com/home-assistant/core/pull/49643). We actually found a couple of bugs during the migration! Also thanks to Paul Ganssle for maintaining `python-dateutil` and the excellent write up.\n\n[@bdraco]: https://github.com/bdraco\n\n## Update May 10\n\nWow, time flies! Paul, the author of `python-dateutil` and also the author of the blog post that inspired us, pointed us to the fact that Python 3.9 includes upgraded timezone handling and that we should use that instead. With the help of Nick and Paul `python-dateutil` has been removed again and `zoneinfo` is used instead ([PR](https://github.com/home-assistant/core/pull/50387))."},{"id":"/2021/04/09/astral-2.2","metadata":{"permalink":"/blog/2021/04/09/astral-2.2","source":"@site/blog/2021-04-09-astral-2.2.md","title":"Astral upgraded to version 2.2","description":"We recently merged a pull request to upgrade the astral library version used in Home Assistant Core to version 2.2. This will be released with Home Assistant 2021.5. This is a major version bump of Astral which includes some breaking changes, this caused us to update our built-in helpers and integrations that depend on astral. This has resulted in a couple of breaking changes to our sun helpers.","date":"2021-04-09T00:00:00.000Z","tags":[],"readingTime":0.945,"hasTruncateMarker":false,"authors":[{"name":"Martin Hjelmare","url":"https://github.com/MartinHjelmare","key":null,"page":null}],"frontMatter":{"author":"Martin Hjelmare","authorURL":"https://github.com/MartinHjelmare","authorTwitter":"MartinHjelmare","title":"Astral upgraded to version 2.2"},"unlisted":false,"prevItem":{"title":"Replacing pytz with python-dateutil","permalink":"/blog/2021/05/07/switch-pytz-to-python-dateutil"},"nextItem":{"title":"Custom integration changes","permalink":"/blog/2021/01/29/custom-integration-changes"}},"content":"We recently merged a [pull request](https://github.com/home-assistant/core/pull/48573) to upgrade the astral library version used in Home Assistant Core to version 2.2. This will be released with Home Assistant 2021.5. This is a major version bump of Astral which includes some breaking changes, this caused us to update our built-in helpers and integrations that depend on astral. This has resulted in a couple of breaking changes to our sun helpers.\n\nCustom integration authors that are maintaining integrations that use the sun helpers or the astral library directly, should review the breaking changes and update their custom integrations if needed.\n\nThe sun helper has changed its signature for `get_astral_location` and `get_location_astral_event_next` to include an `elevation` parameter. Also the return value of `get_astral_location` has changed to a tuple including elevation.\n\n```py\n@callback\n@bind_hass\ndef get_astral_location(\n    hass: HomeAssistant,\n) -> tuple[astral.location.Location, astral.Elevation]:\n    \"\"\"Get an astral location for the current Home Assistant configuration.\"\"\"\n\n@callback\ndef get_location_astral_event_next(\n    location: astral.Location,\n    location: astral.location.Location,\n    elevation: astral.Elevation,\n    event: str,\n    utc_point_in_time: datetime.datetime | None = None,\n    offset: datetime.timedelta | None = None,\n) -> datetime.datetime:\n    \"\"\"Calculate the next specified solar event.\"\"\"\n```\n\nPlease see the [changelog of `astral`](https://github.com/sffjunkie/astral/blob/master/ChangeLog.md#22---2020-05-20) for further details."},{"id":"/2021/01/29/custom-integration-changes","metadata":{"permalink":"/blog/2021/01/29/custom-integration-changes","source":"@site/blog/2021-01-29-custom-integration-changes.md","title":"Custom integration changes","description":"Happy New Year everyone! 2021 is finally here 🎉","date":"2021-01-29T00:00:00.000Z","tags":[],"readingTime":2.375,"hasTruncateMarker":false,"authors":[{"name":"Joakim Sørensen","url":"https://github.com/ludeeus","imageURL":"/img/profile/ludeeus.jpg","key":null,"page":null}],"frontMatter":{"author":"Joakim Sørensen","authorURL":"https://github.com/ludeeus","authorImageURL":"/img/profile/ludeeus.jpg","authorTwitter":"ludeeus","title":"Custom integration changes"},"unlisted":false,"prevItem":{"title":"Astral upgraded to version 2.2","permalink":"/blog/2021/04/09/astral-2.2"},"nextItem":{"title":"System Health and Templates","permalink":"/blog/2020/11/09/system-health-and-templates"}},"content":"Happy New Year everyone! 2021 is finally here 🎉\n\nAs you probably are aware, recently we were made aware of security issues in several popular custom integrations. You can read more about that here:\n\n- https://www.home-assistant.io/blog/2021/01/14/security-bulletin/\n- https://www.home-assistant.io/blog/2021/01/22/security-disclosure/\n- https://www.home-assistant.io/blog/2021/01/23/security-disclosure2/\n\nIn light of these incidents. Starting with the Home Assistant 2021.2.0 beta that was just released, we are changing two things that will affect custom integrations.\n\n## Deprecated utilities\n\nThe `sanitize_filename` and `sanitize_path` helpers located in the `homeassistant.utils` package have been deprecated and are pending removal. This will happen with the release of Home Assistant 2021.4.0 scheduled for the first week of April this year.\n\nWe have added `raise_if_invalid_filename` and `raise_if_invalid_path` as replacement. They are located in the same `homeassistant.utils` package. These new functions will raise a `ValueError` instead of relying on the developer comparing the output of the function to the input to see if it is different. This will prevent misuse.\n\n## Versions\n\nThe second change is pretty cool! Versions!\n\nThe [`manifest.json` file][manifest] now has added support for a `version` key. The version should be a string with a major, minor and patch version. For example, `\"1.0.0\"`.\n\nThis version will help users communicate with you the version they had issues with. And if you ever find a security issue with your custom integration, Home Assistant will be able to block insecure versions from being used.\n\n**The `version` key is required from Home Assistant version 2021.6**\n\n## Hassfest updated\n\n`hassfest` is our internal tool that is used in Home Assistant to validate all integrations. In April we made this available as a GitHub Action to help you find issues in your custom integration. This action can be used in any custom integration hosted on GitHub. If you have not added that to your repository yet, now is the time! [Read more about that here][hassfest].\n\nIf you are using the `hassfest` GitHub action, you will now start to see warnings when it runs if you are missing the `version` key in your [`manifest.json` file][manifest]. This warning will become an error at a later point when the `version` key becomes fully required for custom integrations.\n\n## Serving files\n\nMaking resources available to the user is a common use case for custom integrations, whether that is images, panels, or enhancements the user can use in Lovelace. The only way one should serve static files from a path is to use `hass.http.async_register_static_paths`. Use this method and avoid using your own, as this can lead to serious bugs or security issues.\n\n```python\nfrom pathlib import Path\nfrom homeassisant.components.http import StaticPathConfig\n\nshould_cache = False\nfiles_path = Path(__file__).parent / \"static\"\nfiles2_path = Path(__file__).parent / \"static2\"\n\nawait hass.http.async_register_static_paths([\n    StaticPathConfig(\"/api/my_integration/static\", str(files_path), should_cache),\n    StaticPathConfig(\"/api/my_integration/static2\", str(files2_path), should_cache)\n])\n```\n\nThat's it for this update about custom integrations. Keep doing awesome stuff! Until next time 👋\n\n[AwesomeVersion]: https://github.com/ludeeus/awesomeversion\n[CalVer]: https://calver.org/\n[SemVer]: https://semver.org/\n[hassfest]: /blog/2020/04/16/hassfest\n[manifest]: /docs/creating_integration_manifest"},{"id":"/2020/11/09/system-health-and-templates","metadata":{"permalink":"/blog/2020/11/09/system-health-and-templates","source":"@site/blog/2020-11-09-system-health-and-templates.md","title":"System Health and Templates","description":"In Home Assistant 0.118, there will be two changes that could impact your custom integration.","date":"2020-11-09T00:00:00.000Z","tags":[],"readingTime":1.06,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"System Health and Templates"},"unlisted":false,"prevItem":{"title":"Custom integration changes","permalink":"/blog/2021/01/29/custom-integration-changes"},"nextItem":{"title":"Upcoming changes to add-ons","permalink":"/blog/2020/10/29/supervisor-update"}},"content":"In Home Assistant 0.118, there will be two changes that could impact your custom integration.\n\n## Removed deprecated `helpers.template.extract_entities`\n\nThe previously deprecated `extract_entities` method from the Template helper has been removed ([PR 42601](https://github.com/home-assistant/core/pull/42601)). Instead of extracting entities and then manually listen for state changes, use the new `async_track_template_result` from the Event helper. It will dynamically make sure that every touched entity is tracked correctly.\n\n```python\nfrom homeassistant.helpers.event import async_track_template_result, TrackTemplate\n\ntemplate = \"{{ light.kitchen.state == 'on' }}\"\n\nasync_track_template_result(\n    hass,\n    [TrackTemplate(template, None)],\n    lambda event, updates: print(event, updates),\n)\n```\n\n## Improved System Health\n\nStarting with Home Assistant 0.118, we're deprecating the old way of providing system health information for your integration. Instead, create a `system_health.py` file in your integration ([PR 42785](https://github.com/home-assistant/core/pull/42785)).\n\nStarting this release, you can also include health checks that take longer to resolve ([PR 42831](https://github.com/home-assistant/core/pull/42831)), like checking if the service is online. The results will be passed to the frontend when they are ready.\n\n```python\n\"\"\"Provide info to system health.\"\"\"\nfrom homeassistant.components import system_health\nfrom homeassistant.core import HomeAssistant, callback\n\nfrom .const import DOMAIN\n\n\n@callback\ndef async_register(\n    hass: HomeAssistant, register: system_health.RegisterSystemHealth\n) -> None:\n    \"\"\"Register system health callbacks.\"\"\"\n    register.async_register_info(system_health_info)\n\n\nasync def system_health_info(hass):\n    \"\"\"Get info for the info page.\"\"\"\n    client = hass.data[DOMAIN]\n\n    return {\n      \"server_version\": client.server_version,\n      \"can_reach_server\": system_health.async_check_can_reach_url(\n          hass, client.server_url\n      )\n    }\n```"},{"id":"/2020/10/29/supervisor-update","metadata":{"permalink":"/blog/2020/10/29/supervisor-update","source":"@site/blog/2020-10-29-supervisor-update.md","title":"Upcoming changes to add-ons","description":"GitHub Action","date":"2020-10-29T00:00:00.000Z","tags":[],"readingTime":3.6,"hasTruncateMarker":false,"authors":[{"name":"Joakim Sørensen","url":"https://github.com/ludeeus","key":null,"page":null}],"frontMatter":{"author":"Joakim Sørensen","authorURL":"https://github.com/ludeeus","authorTwitter":"ludeeus","title":"Upcoming changes to add-ons"},"unlisted":false,"prevItem":{"title":"System Health and Templates","permalink":"/blog/2020/11/09/system-health-and-templates"},"nextItem":{"title":"Lazy-loading more-info controls","permalink":"/blog/2020/10/02/lazyMoreInfo"}},"content":"## GitHub Action\n\nYou can now use our [builder][marketplace] as a [GitHub action][github_action]! :tada:\n\nThis is already in use in our [hassio-addons repository][addons], you can see an example on how we implemented it [here][builder-action].\n\nIt can be used to ensure that the add-on will still build with changes made to your repository and publish the images as part of a release workflow. How to use the action is documented in the [builder repository][builder-action].\n\nHere is an example of how you can use it:\n\n```yaml\njobs:\n  build:\n    name: Test build\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout the repository\n      uses: actions/checkout@v2\n    - name: Test build\n      uses: home-assistant/builder@master\n      with:\n        args: |\n          --test \\\n          --all \\\n          --target /data\n```\n\nThis example will run a test build on all supported architectures of the add-on.\n\n:::tip\nYour repository is mapped to `/data` in the action, so if you have your add-on files in subdirectories, you need to supply `--target /data/{directoryname}` as an argument to the builder action.\n:::\n\n## Documentation\n\nOur [API documentation][api_docs] has moved to the developer documentation site. During this move, it also got a style update to make it easier to navigate. Some of the endpoints are still missing some content. If you have not yet met your quota for [Hacktoberfest], maybe you want to contribute some more details to our API descriptions?\n\n## API Changes\n\n- Using the `/homeassistant/*` endpoints is deprecated and will be removed later this year. You need to use `/core/*` instead.\n- Using `http://hassio/` is deprecated and will be removed later this year. You need to use `http://supervisor/` instead.\n- Using `HASSIO_TOKEN` is deprecated and will be removed later this year. You need to use `SUPERVISOR_TOKEN` instead.\n- Deleting snapshots with `POST` calling `/supervisor/snapshots/<slug>/remove` is deprecated and will be removed later this year. You need to use the `DELETE` method when calling `/supervisor/snapshots/<slug>` instead.\n- Using `X-Hassio-Key` header as an authentication method is deprecated and will be removed later this year. You need to use an authorization header with a `Bearer` token instead.\n\nThe [API documentation][api_docs] has been updated to reflect these changes.\n\n## Add-on options\n\nThe permissions of the `/data/options.json` file, is changed from `644` to `600`. If your add-on is running as non-root and reading this file, it will now give you permission issues.\n\nThere are several steps you can do in your add-on to continue to use this information:\n\n- If you are using [S6-overlay] in your add-on, you can use [`/etc/fix-attrs.d`][S6-overlay-permissions] to ensure that the user you are running the add-on as, has access to the file.\n- You can change your add-on to run as `root` (default).\n\n## Releases\n\nUntil now, the Supervisor, our plugins and add-ons have been using a mix of the build number and [Semantic Versioning (SemVer)][semver] as the versioning system. We have decided to replace that for these repositories and to adopt [Calendar Versioning (CalVer)][calver] as our versioning system instead.\n\nWe are migrating the Supervisor from release based development to continuous development. This fits perfectly with our existing channel-based update strategy (stable, beta and dev). We are now leveraging automated pipelines to build and push out new Supervisor versions to the correct channels. There was no more need for a dual branch setup by moving to this structure, so both our `dev` and `master` branches have now been replaced with a new `main` branch. Our plugins (DNS, Multicast, Observer, CLI) for the Supervisor will also follow this continuous development principle.\n\nWe made this move to provide higher software quality with an automatic test system. Every commit now triggers a new dev release, which gets tested by our test instances. Issues are imminently reported to sentry. This gives us the opportunity to test all changes before we create a release. When a release is created, the changes will come available in the beta channel. Once declared stable, we can promote the release to the stable channel.\n\nWe are using our [builder action][marketplace] with [GitHub actions][github_action] to build and publish the Supervisor, our plugins and base images for our Docker containers. If you are interested in how we are doing this, you can look at the [builder action for the Supervisor here][builder_action], and the [action helpers here][action_helpers].\n\n[action_helpers]: https://github.com/home-assistant/actions/tree/master/helpers\n[addons]: https://github.com/home-assistant/hassio-addons\n[api_docs]: /docs/api/supervisor/endpoints\n[builder_action]: https://github.com/home-assistant/supervisor/blob/main/.github/workflows/builder.yml\n[builder-action]: https://github.com/home-assistant/builder#github-action\n[calver]: https://calver.org/\n[github_action]: https://github.com/features/actions\n[Hacktoberfest]: https://hacktoberfest.digitalocean.com/\n[marketplace]: https://github.com/marketplace/actions/home-assistant-builder\n[S6-overlay-permissions]: https://github.com/just-containers/s6-overlay#fixing-ownership--permissions\n[S6-overlay]: https://github.com/just-containers/s6-overlay\n[semver]: https://semver.org/"},{"id":"/2020/10/02/lazyMoreInfo","metadata":{"permalink":"/blog/2020/10/02/lazyMoreInfo","source":"@site/blog/2020-10-02-lazyMoreInfo.md","title":"Lazy-loading more-info controls","description":"In 0.115 we converted our more info controls to be lazy-loaded. This was done because the more info dialog is always loaded in an early stage of the page load. Every domain can have its own controls and they can be pretty heavy. We don't need all these elements on page load, so we decided to only load them when they are needed.","date":"2020-10-02T00:00:00.000Z","tags":[],"readingTime":4.645,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://github.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://github.com/bramkragten","authorTwitter":"bramkragten","title":"Lazy-loading more-info controls"},"unlisted":false,"prevItem":{"title":"Upcoming changes to add-ons","permalink":"/blog/2020/10/29/supervisor-update"},"nextItem":{"title":"Lovelace: Custom View Layouts","permalink":"/blog/2020/09/30/customViewChanges"}},"content":"In 0.115 we converted our more info controls to be lazy-loaded. This was done because the more info dialog is always loaded in an early stage of the page load. Every domain can have its own controls and they can be pretty heavy. We don't need all these elements on page load, so we decided to only load them when they are needed.\n\nWe got feedback from Lovelace custom card developers that this broke their cards, as not all the elements would be available anymore. While we don't support using our internal elements in custom cards, for the reasons mentioned below, we decided to revert this change for 0.115.\nIn 0.116 we will re-add the lazy loading of the more info dialog controls. To help our Lovelace custom card developers, we have made the function that we use to lazy-load the more info controls available for custom card developers.\nThis means you can load the controls of the domain of choice if your card needs them.\n\n:::info\nPlease be aware that we do not support this in any way. We won't promise the same elements will be available in a future update, and breaking changes will happen when you rely on our elements.\n:::\n\nAn example loading the more info controls of the `light` domain:\n```js\nconst helpers = await loadCardHelpers();\nhelpers.importMoreInfoControl(\"light\");\n```\n\n## Why do we do this?\n\nWe always try to make our frontend as fast as possible. Not only on your super fast desktop PC with fiber internet but also on a slow and cheap phone that only has 3G.\n\nOne of the things we try to optimize is loading our code. The less code we load the faster it is loaded, the faster we can start rendering the page. We also use less memory if we don't load everything.\nThere is however a tradeoff, if we always want to only load the parts we need, we would have to be able to load every element separately. This would mean a lot of small network requests, which eventually is slower than loading a little more but in fewer requests, because of the overhead of a network request.\n\nSo it is always a search for the right balance between chunk sizes and the number of chunks needed. The splitting of our code into chunks is done with a bundler. At the moment, we use Webpack for this.\n\nSome custom Lovelace developers have asked us why we can't expose all the elements we use internally to custom cards. This is simply because the element you need, might not be loaded yet as it was not needed yet.\n\nWhat makes this extra difficult, is that we use custom elements. Custom elements can only be defined once, if you try to define it again it will error. This means we can't have a mix of bigger chunks and separate elements, as it would error if it would be loaded a second time.\n\nIf we would want to make this happen, we would either have to load every component on the first load, which would make the first load very slow, or we would have to split every component into its own chunk, what would cause a lot of small network requests and thus will also result in a slower experience.\n\nBesides that, the elements we use internally are not supposed to be used by external developers, the API is not documented or supported and could break at any time. We could at any release decide to replace an element as there is a better element or a new use case. Or change the API, like we recently did for the `chart` element. We could not develop at the pace we do now if we would have to support all our elements, we develop an application, the elements are just our building blocks.\n\n## What about external elements?\n\nWe use external custom elements in our frontend, like the [Material Web Components](https://github.com/material-components/material-components-web-components) from Google. While we would love you to use the same elements to provide a uniform experience, we can not advise this.\n\nJust like our own elements the external elements are part of our code splitted chunks, and they will probably be lazy-loaded. That means they will not be available at all times but could be loaded later.\nThis means that if a custom card would load and define an `mwc` element because it was not available at the time it needed it, and we try to do it later when it is lazy-loaded, the Home Assistant frontend will run into an error.\n\nUnfortunately, there is no technical solution for this at the moment. There are some solutions, like [scoped elements](https://open-wc.org/docs/development/scoped-elements/) from open-wc, but they will not work in most cases as the imported element will either self-register or it defines sub-elements, that can not be scoped.\nThere is a discussion about a proposal for [Scoped Custom Element Definitions](https://github.com/w3c/webcomponents/issues/716) that could potentially fix this problem, but it may take a long time before this would be available in all our supported browsers, if the proposal is accepted at all.\n\n## Is there a solution?\n\nIs there a solution to all these problems? So custom cards can provide the same uniform user experience, without the risk of having breaking changes every release?\n\nThe best solution we see is a set of elements created by the custom card community. This set would have its own namespace that would not collide with that of the elements that Home Assistant uses. All custom cards could use these elements, without the risk of breaking changes."},{"id":"/2020/09/30/customViewChanges","metadata":{"permalink":"/blog/2020/09/30/customViewChanges","source":"@site/blog/2020-09-30-customViewChanges.md","title":"Lovelace: Custom View Layouts","description":"Custom Element developers can now create Custom View Layouts that users can load and use!","date":"2020-09-30T00:00:00.000Z","tags":[],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Zack Barett","url":"https://github.com/zsarnett","key":null,"page":null}],"frontMatter":{"author":"Zack Barett","authorURL":"https://github.com/zsarnett","authorTwitter":"zsarnett","title":"Lovelace: Custom View Layouts"},"unlisted":false,"prevItem":{"title":"Lazy-loading more-info controls","permalink":"/blog/2020/10/02/lazyMoreInfo"},"nextItem":{"title":"Improving Python's speed by 40% when running Home Assistant","permalink":"/blog/2020/07/13/alpine-python"}},"content":"Custom Element developers can now create Custom View Layouts that users can load and use!\n\nIn 0.116, we will be changing the way that we create Views in Lovelace. In the past, we had 2 views, a default view and a panel view. When talking about adding Drag and Drop to Lovelace, we decided we could do even better and start allowing custom view types.\n\nCustom Developers will now be able to create a view that receives the following properties:\n\n```ts\ninterface LovelaceViewElement {\n  hass?: HomeAssistant;\n  lovelace?: Lovelace;\n  index?: number;\n  cards?: Array<LovelaceCard | HuiErrorCard>;\n  badges?: LovelaceBadge[];\n  setConfig(config: LovelaceViewConfig): void;\n}\n```\n\nCards and Badges will be created and maintained by the core code and given to the custom view. The custom views are meant to load the cards and badges and display them in a customized layout.\n\nHere is an example below: (note: this example does not have all of the properties but the necessities to show the example)\n\n```js\nclass MyNewView extends LitElement {\n  setConfig(_config) {}\n\n  static get properties() {\n    return { \n      cards: {type: Array, attribute: false}\n    };\n  }\n\n  render() {\n    if(!this.cards) {\n      return html``;\n    }\n    return html`${this.cards.map((card) => html`<div>${card}</div>`)}`;\n  }\n}\n```\n\nAnd you can define this element in the Custom Element Registry just as you would with a Custom Card:\n\n```js\ncustomElements.define(\"my-new-view\", MyNewView);\n```\n\nYou can find an example of this in our default view: `Masonry View` Located here: [frontend/src/panels/lovelace/views/hui-masonry-view.ts](https://github.com/home-assistant/frontend/blob/master/src/panels/lovelace/views/hui-masonry-view.ts)\n\nA user who downloads and installs your new Custom View can then use it via editing the YAML configuration of their view to be:\n\n```yaml\n- title: Home View\n  type: custom:my-new-view\n  badges: [...]\n  cards: [...]\n```\n\nCustom Developers can add a `layout` property to each card that can store a key, position info, width, height, etc:\n\n```yaml\n- type: weather-card\n  layout:\n    key: 1234\n    width: 54px\n  entity: weather.my_weather\n```\n\n### Breaking Change\n\nFor Custom Card developers that use something like this:\n\n```js\nconst LitElement = Object.getPrototypeOf(customElements.get(\"hui-view\"));\n```\n\nYou will no longer be able to use the `hui-view` element to retrieve LitElement as it has been changed to be an `updatingElement`. Instead you can use:\n\n```js\nconst LitElement = Object.getPrototypeOf(customElements.get(\"hui-masonry-view\"));\n```\n\nBut Note! This is not supported by HA. In the future, this may not work to import LitElement."},{"id":"/2020/07/13/alpine-python","metadata":{"permalink":"/blog/2020/07/13/alpine-python","source":"@site/blog/2020-07-13-alpine-python.md","title":"Improving Python's speed by 40% when running Home Assistant","description":"We use Alpine for most of our Containers. It is the perfect distribution for containers because it is small (BusyBox based), available for a lot of CPU architectures, and the package system is slim. Alpine uses musl as their C library instead of the more commonly used glibc.","date":"2020-07-13T00:00:00.000Z","tags":[],"readingTime":7.31,"hasTruncateMarker":false,"authors":[{"name":"Pascal Vizeli","url":"https://github.com/pvizeli","key":null,"page":null}],"frontMatter":{"author":"Pascal Vizeli","authorURL":"https://github.com/pvizeli","authorTwitter":"pvizeli","title":"Improving Python's speed by 40% when running Home Assistant"},"unlisted":false,"prevItem":{"title":"Lovelace: Custom View Layouts","permalink":"/blog/2020/09/30/customViewChanges"},"nextItem":{"title":"Lovelace: getCardSize can now be async","permalink":"/blog/2020/06/01/getCardSize"}},"content":"We use Alpine for most of our Containers. It is the perfect distribution for containers because it is small (BusyBox based), available for a lot of CPU architectures, and the package system is slim. Alpine uses musl as their C library instead of the more commonly used glibc.\n\nAlpine with musl are relatively young compared to their peers (15 and 9 years old) but have seen a significant development pace. Because things move so fast, a lot of misconceptions exist about both based on things that are no longer true. The goal of this post is to address a couple of those and how we have solved them.\n\nThis blogpost is not meant as a musl vs. glibc flamewar. Each use case is different and has its own trade-offs. For example, we use glibc in our OS.\n\nFor the tests, I used the images from [Docker Python library](https://github.com/docker-library/python), and the result is published to our [base images](https://github.com/home-assistant/docker-base). I used pyperformance for lab testing and the Home Assistant internal benchmark tools for more real-life comparison. The test environment was running inside a container on the same Docker host.\n\n## C/POSIX standard library\n\nI often read: Python is slower when it uses musl as the default C library. This fact is not 100% correct. If the Python runtime was compiled with the same GCC and with `-O3`, the glibc variant is a bit faster in the lab benchmark, but in the real world, the difference is insignificant. Alpine compiles it with `-Os` while most other distributions compile it with  `-O2`. This causes the often written difference between the Python runtime interpreters. But when using the same compiler optimizations, musl based Python runtimes have no negative side-effects.\n\nBut there is a game-changer, which makes the musl one more useful compared to the glibc-based runtime. It is the memory allocator [jemalloc](http://jemalloc.net/), a general-purpose malloc implementation that emphasizes fragmentation avoidance and scalable concurrency support. There is an interesting effect, which I found on some blogpost about Rust. There were some developers who saw that musl is much faster when using jemalloc compared to glibc, while glibc is slower when using jemalloc. For sure, the benefit with glibc and jemalloc is not the speed as they optimize memory management, but musl get both benefits. While the difference between pure musl and glibc can be ignored, the difference between musl + jemalloc and glibc are substantial (with disabled GCC memory allocator built-in optimization). Yes, today's jemalloc is compatible with musl (there was a time which it was not).\n\n## Compiler\n\nHow you compile Python is also essential. There were statements from Fedora or Redhat about disable `semantic-interposition` to get a high-performance boost. I was not able to reproduce this on GCC 9.3.0, but I also saw no adverse side-effects. I can recommend disabling the semantics like the built-in allocator optimization and link jemalloc at build time. I will also recommend using the `-O3` optimization. We never saw an issue with these aggressive optimizations on our targeted platforms. I need to say, unlike the distro Python runtime interpreters, we don't need to run everywhere. So we can use the `--enable-optimizations` without any overwrite and add more flags. I can say today, PGO/LTO/O3 make Python faster and it works on our target CPUs.\n\n## Python packages\n\nAlpine indeed has no manylinux compatibility with musl. If you don't cache your builds, it needs to compile the C extensions when installing packages that require it. This process takes time, just like if you would cross-build with Qemu for different CPU architectures. You cannot get precompiled binaries from PyPi. This is not a problem for us as the provided binaries on PyPI are mostly not optimized for our target systems.\n\nTo fix installation times of Python package, we created our own [wheel index](https://wheels.home-assistant.io/) and [backend](https://github.com/home-assistant/wheels) to compile all needed wheels and keep it up to date using CI agents. We pre-build over 1k packages for each CPU architecture, and the build time of the Docker file is not so important at all.\n\n## Alpine Linux\n\nAlpine is a great base system for Container and allows us to provide the best experience to our user. A big thanks to Alpine Linux, musl, and jemalloc, which make this all possible.\n\nThe table shows the results comparing the Alpine Linux's Python runtime and our optimization (GCC 9.3.0/musl). All tests done using Python 3.8.3.\n\n\n| Benchmark               | Alpine   | Optimized                     |\n| ----------------------- | -------- | ----------------------------- |\n| 2to3                    | 924 ms   | 699 ms: 1.32x faster (-24%)   |\n| chameleon               | 37.9 ms  | 25.6 ms: 1.48x faster (-33%)  |\n| chaos                   | 393 ms   | 273 ms: 1.44x faster (-31%)   |\n| crypto_pyaes            | 373 ms   | 245 ms: 1.52x faster (-34%)   |\n| deltablue               | 22.8 ms  | 16.4 ms: 1.39x faster (-28%)  |\n| django_template         | 184 ms   | 145 ms: 1.27x faster (-21%)   |\n| dulwich_log             | 157 ms   | 122 ms: 1.29x faster (-22%)   |\n| fannkuch                | 1.81 sec | 1.32 sec: 1.38x faster (-27%) |\n| float                   | 363 ms   | 263 ms: 1.38x faster (-28%)   |\n| genshi_text             | 113 ms   | 83.9 ms: 1.34x faster (-26%)  |\n| genshi_xml              | 226 ms   | 171 ms: 1.32x faster (-24%)   |\n| go                      | 816 ms   | 598 ms: 1.36x faster (-27%)   |\n| hexiom                  | 36.8 ms  | 24.2 ms: 1.52x faster (-34%)  |\n| json_dumps              | 34.8 ms  | 25.6 ms: 1.36x faster (-26%)  |\n| json_loads              | 61.2 us  | 47.4 us: 1.29x faster (-23%)  |\n| logging_format          | 30.0 us  | 23.5 us: 1.28x faster (-22%)  |\n| logging_silent          | 673 ns   | 486 ns: 1.39x faster (-28%)   |\n| logging_simple          | 27.2 us  | 21.3 us: 1.27x faster (-22%)  |\n| mako                    | 54.5 ms  | 35.6 ms: 1.53x faster (-35%)  |\n| meteor_contest          | 344 ms   | 219 ms: 1.57x faster (-36%)   |\n| nbody                   | 526 ms   | 305 ms: 1.73x faster (-42%)   |\n| nqueens                 | 368 ms   | 246 ms: 1.49x faster (-33%)   |\n| pathlib                 | 64.4 ms  | 45.2 ms: 1.42x faster (-30%)  |\n| pickle                  | 20.3 us  | 17.1 us: 1.19x faster (-16%)  |\n| pickle_dict             | 40.2 us  | 33.6 us: 1.20x faster (-16%)  |\n| pickle_list             | 6.77 us  | 5.88 us: 1.15x faster (-13%)  |\n| pickle_pure_python      | 1.85 ms  | 1.27 ms: 1.45x faster (-31%)  |\n| pidigits                | 274 ms   | 222 ms: 1.24x faster (-19%)   |\n| pyflate                 | 2.53 sec | 1.74 sec: 1.45x faster (-31%) |\n| python_startup          | 14.9 ms  | 12.1 ms: 1.23x faster (-19%)  |\n| python_startup_no_site  | 9.84 ms  | 8.24 ms: 1.19x faster (-16%)  |\n| raytrace                | 1.61 sec | 1.23 sec: 1.30x faster (-23%) |\n| regex_compile           | 547 ms   | 398 ms: 1.38x faster (-27%)   |\n| regex_dna               | 445 ms   | 484 ms: 1.09x slower (+9%)    |\n| regex_effbot            | 10.3 ms  | 9.96 ms: 1.03x faster (-3%)   |\n| regex_v8                | 81.8 ms  | 71.6 ms: 1.14x faster (-12%)  |\n| richards                | 265 ms   | 182 ms: 1.46x faster (-31%)   |\n| scimark_fft             | 1.31 sec | 851 ms: 1.54x faster (-35%)   |\n| scimark_lu              | 616 ms   | 384 ms: 1.61x faster (-38%)   |\n| scimark_monte_carlo     | 390 ms   | 248 ms: 1.57x faster (-36%)   |\n| scimark_sor             | 838 ms   | 571 ms: 1.47x faster (-32%)   |\n| scimark_sparse_mat_mult | 19.0 ms  | 13.2 ms: 1.43x faster (-30%)  |\n| spectral_norm           | 567 ms   | 388 ms: 1.46x faster (-32%)   |\n| sqlalchemy_declarative  | 364 ms   | 286 ms: 1.27x faster (-21%)   |\n| sqlalchemy_imperative   | 60.3 ms  | 46.8 ms: 1.29x faster (-22%)  |\n| sqlite_synth            | 6.88 us  | 5.09 us: 1.35x faster (-26%)  |\n| sympy_expand            | 1.39 sec | 1.05 sec: 1.32x faster (-24%) |\n| sympy_integrate         | 67.3 ms  | 49.5 ms: 1.36x faster (-26%)  |\n| sympy_sum               | 505 ms   | 389 ms: 1.30x faster (-23%)   |\n| sympy_str               | 945 ms   | 656 ms: 1.44x faster (-31%)   |\n| telco                   | 17.9 ms  | 12.5 ms: 1.44x faster (-31%)  |\n| tornado_http            | 347 ms   | 273 ms: 1.27x faster (-21%)   |\n| unpack_sequence         | 232 ns   | 212 ns: 1.09x faster (-9%)    |\n| unpickle                | 41.6 us  | 30.7 us: 1.36x faster (-26%)  |\n| unpickle_list           | 10.5 us  | 9.24 us: 1.14x faster (-12%)  |\n| unpickle_pure_python    | 1.28 ms  | 945 us: 1.36x faster (-26%)   |\n| xml_etree_parse         | 335 ms   | 292 ms: 1.15x faster (-13%)   |\n| xml_etree_iterparse     | 281 ms   | 226 ms: 1.24x faster (-20%)   |\n| xml_etree_generate      | 330 ms   | 219 ms: 1.51x faster (-34%)   |\n| xml_etree_process       | 263 ms   | 181 ms: 1.45x faster (-31%)   |"},{"id":"/2020/06/01/getCardSize","metadata":{"permalink":"/blog/2020/06/01/getCardSize","source":"@site/blog/2020-06-01-getCardSize.md","title":"Lovelace: getCardSize can now be async","description":"Ever since we introduced lazy loading cards to Lovelace, getting the card size of a lazy loaded card was hard.","date":"2020-06-01T00:00:00.000Z","tags":[],"readingTime":1.655,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://github.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://github.com/bramkragten","authorTwitter":"bramkragten","title":"Lovelace: getCardSize can now be async"},"unlisted":false,"prevItem":{"title":"Improving Python's speed by 40% when running Home Assistant","permalink":"/blog/2020/07/13/alpine-python"},"nextItem":{"title":"Entity class names","permalink":"/blog/2020/05/14/entity-class-names"}},"content":"Ever since we introduced lazy loading cards to Lovelace, getting the card size of a lazy loaded card was hard.\n\nWe used to send out an error element before the element was loaded, which would have a `getCardSize` function. But that would be the wrong size.\nWhen the element would be defined we would, fire and rebuild the event so the right card would be recreated.\n\nIn 0.110 we stopped doing this, we would give back the correct element, but the element constructor would not be loaded yet, so it doesn't have the `getCardSize`.\nWhen the constructor is loaded, the element will be upgraded and we set the config. From that moment we can call `getCardSize`.\n\nIn this version, we changed the logic for `getCardSize` so it will wait for this. This means some cards, like stacks, will return a promise because they have to wait for their children to be defined.\n\nIf you are a custom card developer and your custom card uses `getCardSize` to get the size of other cards, you have to adjust it to handle these promises.\n\nOur function to get the card size, which you could copy, now looks like this:\n\n```ts\nexport const computeCardSize = (\n  card: LovelaceCard | LovelaceHeaderFooter\n): number | Promise<number> => {\n  if (typeof card.getCardSize === \"function\") {\n    return card.getCardSize();\n  }\n  if (customElements.get(card.localName)) {\n    return 1;\n  }\n  return customElements\n    .whenDefined(card.localName)\n    .then(() => computeCardSize(card));\n};\n```\n\nWe first have the same check as before, if the element has a `getCardSize` function we will return that value, this should be a `number` or `Promise` that resolves to a `number`.\n\nIf the function doesn't exist, we will check if the constructor of the element is registered, if it is, this means the element doesn't have a `getCardSize` and we will return `1` as we did before.\n\nIf the element isn't registered yet, we will wait until it is and then call the same function again of the now defined card to get the size."},{"id":"/2020/05/14/entity-class-names","metadata":{"permalink":"/blog/2020/05/14/entity-class-names","source":"@site/blog/2020-05-14-entity-class-names.md","title":"Entity class names","description":"Ever wondered when implementing entities for our entity integrations why you had to extend BinarySensorDevice and not BinarySensorEntity? Wonder no longer, as we have addressed the situation in Home Assistant 0.110 by renaming all classes that incorrectly had Device in their name. The old classes are still around but will log a warning when used.","date":"2020-05-14T00:00:00.000Z","tags":[],"readingTime":0.85,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://github.com/balloob","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://github.com/balloob","authorTwitter":"balloob","title":"Entity class names"},"unlisted":false,"prevItem":{"title":"Lovelace: getCardSize can now be async","permalink":"/blog/2020/06/01/getCardSize"},"nextItem":{"title":"Custom icon sets","permalink":"/blog/2020/05/09/custom-iconsets"}},"content":"Ever wondered when implementing entities for our entity integrations why you had to extend `BinarySensorDevice` and not `BinarySensorEntity`? Wonder no longer, as we have addressed the situation in Home Assistant 0.110 by renaming all classes that incorrectly had Device in their name. The old classes are still around but will log a warning when used.\n\nAll integrations in Home Assistant have been upgraded. Custom component authors need to do the migration themselves. You can do this while keeping backwards compatibility by using the following snippet:\n\n```python\ntry:\n    from homeassistant.components.binary_sensor import BinarySensorEntity\nexcept ImportError:\n    from homeassistant.components.binary_sensor import BinarySensorDevice as BinarySensorEntity\n```\n\nThe following classes have been renamed:\n\n| Old Class Name       | New Class Name       |\n| -------------------- | -------------------- |\n| `BinarySensorDevice` | `BinarySensorEntity` |\n| `MediaPlayerDevice`  | `MediaPlayerEntity`  |\n| `LockDevice`         | `LockEntity`         |\n| `ClimateDevice`      | `ClimateEntity`      |\n| `CoverDevice`        | `CoverEntity`        |\n| `VacuumDevice`       | `VacuumEntity`       |\n| `RemoteDevice`       | `RemoteEntity`       |\n| `Light`              | `LightEntity`        |\n| `SwitchDevice`       | `SwitchEntity`       |\n| `WaterHeaterDevice`  | `WaterHeaterEntity`  |"},{"id":"/2020/05/09/custom-iconsets","metadata":{"permalink":"/blog/2020/05/09/custom-iconsets","source":"@site/blog/2020-05-09-custom-iconsets.md","title":"Custom icon sets","description":"If you are the maintainer of a custom icon set, you might need to update it.","date":"2020-05-09T00:00:00.000Z","tags":[],"readingTime":1.185,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://github.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://github.com/bramkragten","authorTwitter":"bramkragten","title":"Custom icon sets"},"unlisted":false,"prevItem":{"title":"Entity class names","permalink":"/blog/2020/05/14/entity-class-names"},"nextItem":{"title":"Instance URL helper","permalink":"/blog/2020/05/08/instance-url-helper"}},"content":"If you are the maintainer of a custom icon set, you might need to update it.\n\nIn Home Assistant core version 0.110 we will change the way our icons are loaded. We no longer load all the `mdi` icons at once, and they will not become DOM elements.\nThis will save us almost 5000 DOM elements and will reduce loading time.\n\nThis also means we no longer use or load `<ha-iconset-svg>`, if your icon set relied on this element, you will have to change your icon set.\n\nWe introduced a new API where you can register your custom icon set with an async function, that we will call with the icon name as parameter.\nWe expect a promise with an object of the icon requested. Your icon set can decide on a strategy for loading and caching.\n\nThe format of the API is:\n```ts\nwindow.customIconsets: {\n  [iconset_name: string]: (icon_name: string) => Promise< { path: string; viewBox?: string } > \n};\n```\n`path` is the path of the `svg`. This is the string that is in the `d` attribute of the `<path>` element.\nThe `viewBox` is optional and will default to `0 0 24 24`.\n\nAn very simple example of this for the icon `custom:icon`:\n\n```js\nasync function getIcon(name) {\n  return {\n    path: \"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\",\n  };\n}\nwindow.customIconsets = window.customIconsets || {};\nwindow.customIconsets[\"custom\"] = getIcon;\n```\n\nHome Assistant will call the fuction `getIcon(\"icon\")` when the icon `custom:icon` is set."},{"id":"/2020/05/08/instance-url-helper","metadata":{"permalink":"/blog/2020/05/08/instance-url-helper","source":"@site/blog/2020-05-08-instance-url-helper.md","title":"Instance URL helper","description":"If you are an integration developer and came across the problem of getting the","date":"2020-05-08T00:00:00.000Z","tags":[],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Instance URL helper"},"unlisted":false,"prevItem":{"title":"Custom icon sets","permalink":"/blog/2020/05/09/custom-iconsets"},"nextItem":{"title":"Logos for custom integrations","permalink":"/blog/2020/05/08/logos-custom-integrations"}},"content":"If you are an integration developer and came across the problem of getting the\nURL of the users' Home Assistant instance, you probably know, this wasn't always\neasy.\n\nThe main problem is that a Home Assistant instance is generally installed, at home.\nMeaning the internal and external address can be different and even those can\nhave variations (for example, if a user has a Home Assistant Cloud subscription).\n\nMatters become worse if the integration has specific requirements for the URL;\nfor example, it must be externally available and requires SSL.\n\nAs of Home Assistant Core 0.110, a new instance URL helper is introduced to\nease that. We started out with the following flow chart to solve this issue:\n\n[![Flow chart of getting a Home Assistant instance URL](/img/en/blog/2020-05-instance-url-helper/flowchart.png)](/img/en/blog/2020-05-instance-url-helper/flowchart.png)\n\nAs a result of this, the previously available `base_url` is now replaced by two\nnew core configuration settings for the user: the internal and external URL.\n\nFrom a development perspective, the use of `hass.config.api.base_url` is now\ndeprecated in favor of the new `get_url` helper method.\n\nFor more information on using and implementing this new URL helper method,\nconsult our documentation [here](/docs/instance_url)."},{"id":"/2020/05/08/logos-custom-integrations","metadata":{"permalink":"/blog/2020/05/08/logos-custom-integrations","source":"@site/blog/2020-05-08-logos-custom-integrations.md","title":"Logos for custom integrations","description":"Recently, Home Assistant started to support images & icons for integrations","date":"2020-05-08T00:00:00.000Z","tags":[],"readingTime":0.635,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"Logos for custom integrations"},"unlisted":false,"prevItem":{"title":"Instance URL helper","permalink":"/blog/2020/05/08/instance-url-helper"},"nextItem":{"title":"Translations for custom Lovelace","permalink":"/blog/2020/04/23/frontend-translations"}},"content":"Recently, Home Assistant started to support images & icons for integrations\nto show up in the frontend. They look amazing and really brings some color\nto the UI of Home Assistant.\n\nWe got a lot of questions lately on how custom integrations (also known as\ncustom components) can add their images. As of today, that is possible!\n\n![HACS icon in the Home Assistant frontend](/img/en/blog/2020-05-logos-custom-integrations/customlogo.png)\n\nCreated a custom integration? Want the logo & icon for your integration to\nshow up in the Home Assistant frontend? In that case, head over to our\n[GitHub brands repository](https://github.com/home-assistant/brands)\nto add yours!\n\n_PS: Did you know you can also add your custom integration to our [Python wheels\nrepository](https://github.com/home-assistant/wheels-custom-integrations)?\nIt will make the installation of your custom integration in\nHome Assistant lightning fast!_"},{"id":"/2020/04/23/frontend-translations","metadata":{"permalink":"/blog/2020/04/23/frontend-translations","source":"@site/blog/2020-04-23-frontend-translations.md","title":"Translations for custom Lovelace","description":"If you are the author of a custom Lovelace card and use translations, please pay attention as the state translation keys have changed.","date":"2020-04-23T00:00:00.000Z","tags":[],"readingTime":0.65,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Translations for custom Lovelace"},"unlisted":false,"prevItem":{"title":"Logos for custom integrations","permalink":"/blog/2020/05/08/logos-custom-integrations"},"nextItem":{"title":"Hassfest for custom components","permalink":"/blog/2020/04/16/hassfest"}},"content":"If you are the author of a custom Lovelace card and use translations, please pay attention as the state translation keys have changed.\n\nBefore 0.109, state translations lived under `state.<domain>.<state>` or `state.<domain>.<device class>.<state>` for binary sensors. Starting with version 0.109, these translations are now part of the backend and so they have the key format for backend translations. We have standardized the state format to always include a device class. The device class `_` is reserved as a fallback for entities without a device class.\n\n| Old                                     | New                                               |\n| --------------------------------------- | ------------------------------------------------- |\n| `state.<domain>.<state>`                | `component.<domain>.state._.<state>`              |\n| `state.<domain>.<device class>.<state>` | `component.<domain>.state.<device class>.<state>` |\n\nIn future releases, we're planning to migrate state attribute translations to the backend too. We'll publish this on this blog when it happens."},{"id":"/2020/04/16/hassfest","metadata":{"permalink":"/blog/2020/04/16/hassfest","source":"@site/blog/2020-04-16-hassfest.md","title":"Hassfest for custom components","description":"Hassfest is an internal tool that we use in Home Assistant to make sure that all integrations have valid data. We've now made Hassfest able to validate any integration, including custom integrations. To make it easy to get started with this, @ludeeus has created a GitHub Action that gets you up and running in less than a minute.","date":"2020-04-16T00:00:00.000Z","tags":[],"readingTime":0.84,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Hassfest for custom components"},"unlisted":false,"prevItem":{"title":"Translations for custom Lovelace","permalink":"/blog/2020/04/23/frontend-translations"},"nextItem":{"title":"S6 Overlay for our Docker containers","permalink":"/blog/2020/04/12/s6-overlay"}},"content":"Hassfest is an internal tool that we use in Home Assistant to make sure that all integrations have valid data. We've now made Hassfest able to validate any integration, including custom integrations. To make it easy to get started with this, [@ludeeus](https://www.github.com/ludeeus) has created a GitHub Action that gets you up and running in less than a minute.\n\nTo install it, follow these steps:\n\n1. Go to your custom component repository on GitHub\n2. Click on \"Create new file\"\n3. For filename, paste `.github/workflows/hassfest.yaml`\n4. Paste the following contents:\n\n   ```yaml\n   name: Validate with hassfest\n\n   on:\n     push:\n     pull_request:\n     schedule:\n       - cron: \"0 0 * * *\"\n\n   jobs:\n     validate:\n       runs-on: \"ubuntu-latest\"\n       steps:\n         - uses: \"actions/checkout@v3\"\n         - uses: home-assistant/actions/hassfest@master\n   ```\n\nGitHub will now lint all incoming PRs and commits with hassfest, and will also run it once every night to check against the latest requirements.\n\nThe Hassfest action will track the beta release channel. That way you will be notified if your integration is incompatible with newer versions of Home Assistant."},{"id":"/2020/04/12/s6-overlay","metadata":{"permalink":"/blog/2020/04/12/s6-overlay","source":"@site/blog/2020-04-12-s6-overlay.md","title":"S6 Overlay for our Docker containers","description":"Home Assistant uses a lot of different Docker containers for all kinds of","date":"2020-04-12T00:00:00.000Z","tags":[],"readingTime":1.37,"hasTruncateMarker":false,"authors":[{"name":"Franck Nijhof","url":"https://twitter.com/frenck","imageURL":"/img/profile/frenck.png","key":null,"page":null}],"frontMatter":{"author":"Franck Nijhof","authorURL":"https://twitter.com/frenck","authorImageURL":"/img/profile/frenck.png","authorTwitter":"frenck","title":"S6 Overlay for our Docker containers"},"unlisted":false,"prevItem":{"title":"Hassfest for custom components","permalink":"/blog/2020/04/16/hassfest"},"nextItem":{"title":"Translations 2.0","permalink":"/blog/2020/04/10/translation-handling"}},"content":"Home Assistant uses a lot of different Docker containers for all kinds of\npurposes. Not only the Home Assistant Core that is available as Docker\ncontainers but also our Supervisor and all add-ons are leveraging Docker.\n\nIn many situations, we need to run multiple processes in our containers,\nthat all need to be managed. We used to do this using simple Bash scripting,\nbut quickly learned we need a proper process manager to handle this.\n\nWe decided to use the [S6 Overlay init system][s6-overlay], which is based on\nthe excellent [S6][s6] toolset that provides process supervision and\nmanagement, logging, and system initialization.\n\nThe S6 Overlay has been added to our [Docker base images][base-imags],\nwhich is used by every Docker image Home Assistant ships.\n\nAll containers have been updated, and changes are automatically handled by the\nHome Assistant Supervisor; For Home Assistant users, there is no noticeable\nimpact.\n\nFor users of the Home Assistant Core containers on Docker, this might impact\nthe way you run or start the container. If you run your Home Assistant Core\ncontainer with an override of the Docker entry point or command, you need to\nadapt those. For example, some container management systems, like Portainer\nand Synology, automatically override those for you so you are impacted.\n\nIn those cases:\n\n- The entry point has changed to: `/init`\n- The command (CMD) has changed to: ` ` _(Empty/not set)_\n\nIf you override the command endpoint to start Home Assistant, the init system\nin the entry point will still be active in the background and a second launch\nHome Assistant. This can lead to unexpected behavior.\n\n[base-imags]: https://github.com/home-assistant/docker-base\n[s6-overlay]: https://github.com/just-containers/s6-overlay\n[s6]: http://skarnet.org/software/s6/"},{"id":"/2020/04/10/translation-handling","metadata":{"permalink":"/blog/2020/04/10/translation-handling","source":"@site/blog/2020-04-10-translation-handling.md","title":"Translations 2.0","description":"We've migrated our translation scripts in the Home Assisstant Core repository under a single namespace. It can now all be invoked using python3 -m script.translations.","date":"2020-04-10T00:00:00.000Z","tags":[],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Translations 2.0"},"unlisted":false,"prevItem":{"title":"S6 Overlay for our Docker containers","permalink":"/blog/2020/04/12/s6-overlay"},"nextItem":{"title":"Changes that can affect custom cards in 0.106","permalink":"/blog/2020/02/18/106-custom-card-changes"}},"content":"We've migrated our translation scripts in the Home Assisstant Core repository under a single namespace. It can now all be invoked using `python3 -m script.translations`.\n\n| Old command                    | New command                               |\n| ------------------------------ | ----------------------------------------- |\n| `script/translations_develop`  | `python3 -m script.translations develop`  |\n| `script/translations_upload`   | `python3 -m script.translations upload`   |\n| `script/translations_download` | `python3 -m script.translations download` |\n| `script/translations_clean`    | `python3 -m script.translations clean`    |\n\nThis will help us prepare for our [Translations 2.0 effort](https://github.com/home-assistant/architecture/blob/master/adr/0009-translations-2.0.md) that will clean up translations and make it scale better."},{"id":"/2020/02/18/106-custom-card-changes","metadata":{"permalink":"/blog/2020/02/18/106-custom-card-changes","source":"@site/blog/2020-02-18-106-custom-card-changes.md","title":"Changes that can affect custom cards in 0.106","description":"We made some changes that can affect custom Lovelace cards in Home Assistant Core 0.106, if you are a custom card developer, please read the following.","date":"2020-02-18T00:00:00.000Z","tags":[],"readingTime":1.33,"hasTruncateMarker":false,"authors":[{"name":"Bram Kragten","url":"https://github.com/bramkragten","key":null,"page":null}],"frontMatter":{"author":"Bram Kragten","authorURL":"https://github.com/bramkragten","authorTwitter":"bramkragten","title":"Changes that can affect custom cards in 0.106"},"unlisted":false,"prevItem":{"title":"Translations 2.0","permalink":"/blog/2020/04/10/translation-handling"},"nextItem":{"title":"Update on the Z-Wave integration","permalink":"/blog/2020/02/04/new-zwave"}},"content":"We made some changes that can affect custom Lovelace cards in Home Assistant Core 0.106, if you are a custom card developer, please read the following.\n\n### Freeze config\n\nWe used to give a copy of the configuration to every card because some cards altered the configuration Lovelace passed to them. In 0.105 we stopped doing this because it is not good for performance to create a deep copy for every card.\nThis resulted in some problems because cards were still altering the configuration. In 0.106 we freeze the configuration. This means that a custom card cannot alter the configuration. If it tries to do it anyway, it will throw an exception or fail silently, depending on if it is run in strict mode.\n\nPlease check if your custom card still works with 0.106 and make adjustments to not alter the configuration. You can create a copy of the configuration yourself if you need to.\n\n### Helper functions\n\n:::info\nWe decided to postpone this change until 0.107.\n:::\n\nA second change that was made, is that we no longer load all element types by default. We load them when they are needed. This will also help performance but might break your custom card.\n\nWe introduced a set of helpers that you can use to create a Lovelace element, these are the same functions Home Assistant uses internally and will always be up to date to the version the user is using.\nYou can use them as follows:\n\n```js\nconst helpers = await loadCardHelpers();\nconst element = helpers.createRowElement(config);\nelement.hass = this.hass;\n```\n\nFor more info see https://github.com/home-assistant/frontend/pull/4853"},{"id":"/2020/02/04/new-zwave","metadata":{"permalink":"/blog/2020/02/04/new-zwave","source":"@site/blog/2020-02-04-new-zwave.md","title":"Update on the Z-Wave integration","description":"At the State of the Union we introduced that we're working on a new Z-Wave integration. It's based on a new project by the Open Z-Wave project called OZWDaemon and we will communicate with it over MQTT.","date":"2020-02-04T00:00:00.000Z","tags":[],"readingTime":1.065,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Update on the Z-Wave integration"},"unlisted":false,"prevItem":{"title":"Changes that can affect custom cards in 0.106","permalink":"/blog/2020/02/18/106-custom-card-changes"},"nextItem":{"title":"Simple Mode in Home Assistant 1.0","permalink":"/blog/2019/10/05/simple-mode"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\nAt the State of the Union we [introduced that we're working on a new Z-Wave integration](https://youtu.be/tc17q1Zn0Xs?t=4482). It's based on a new project by the Open Z-Wave project called [OZWDaemon](https://github.com/OpenZWave/qt-openzwave) and we will communicate with it over MQTT.\n\nThis new approach allows us to integrate directly with the core of Open Z-Wave without relying on bindings via other languages. This allows us to easily keep up to date with the latest Open Z-Wave versions.\n\nThere has been some great progress on the integration thanks to [@cgarwood] and [@marcelveldt] and you can start testing it out today as [a custom component](https://github.com/cgarwood/homeassistant-zwave_mqtt). It's still early and not every device type is supported yet. Currently it supports lights, switches, sensors and binary sensors. The custom component is powered by the new [`python-openzwave-mqtt`](https://github.com/cgarwood/python-openzwave-mqtt) package.\n\n[Please try it out.](https://github.com/cgarwood/homeassistant-zwave_mqtt#requirements) If you find any bugs, [create an issue](https://github.com/cgarwood/homeassistant-zwave_mqtt/issues/new). If you are using Home Assistant 0.105, use the new `mqtt.dump` service on topic `openzwave/#` to make a dump of your Open Z-Wave instance and attach that to your issue. The dump will be written to `mqtt_dump.txt` in your config folder.\n\nOnce the integration is mature enough, it will become part of Home Assistant Core.\n\n[@cgarwood]: https://github.com/cgarwood\n[@marcelveldt]: https://github.com/marcelveldt\n\n<!--truncate-->\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2020/02/04/new-zwave.html\" />"},{"id":"/2019/10/05/simple-mode","metadata":{"permalink":"/blog/2019/10/05/simple-mode","source":"@site/blog/2019-10-05-simple-mode.md","title":"Simple Mode in Home Assistant 1.0","description":"This blog post references simple and advanced mode. This has since been renamed to standard mode and advanced mode.","date":"2019-10-05T00:00:00.000Z","tags":[],"readingTime":3.94,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Simple Mode in Home Assistant 1.0"},"unlisted":false,"prevItem":{"title":"Update on the Z-Wave integration","permalink":"/blog/2020/02/04/new-zwave"},"nextItem":{"title":"Hacktoberfest 2019","permalink":"/blog/2019/09/27/hacktoberfest"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\n:::info\nThis blog post references simple and advanced mode. This has since been renamed to standard mode and advanced mode.\n:::\n\nThe Home Assistant UI has two different modes. There is a simple mode and an advanced mode. Simple mode has been introduced recently in [Home Assistant 0.96](https://www.home-assistant.io/blog/2019/07/17/release-96/#advanced-mode). In this post I want to outline my vision for simple mode in Home Assistant 1.0.\n\n**With simple mode we focus on the core Home Assistant experience. We're trying to answer the question: what is it that we want anyone to be able to do. Can we make it intuitive enough that people, young and old, can install Home Assistant and use it.**\n\n## Core concepts\n\nSimple mode is the simplified interface for non-power users. This is the default UI. Simple mode offers a subset of Home Assistant that is intuitive: easy to understand and easy to use.\n\nIn simple mode, we will structure the configuration to how the user thinks about their house:\n\n- Inputs: devices and persons\n- Outputs: scenes, scripts, automations\n\n<center>\n![Configuration concepts. Inputs are users, integrations, zones, persons, devices. Outputs are scenes, scripts and automations.](/img/en/blog/2019-10-simple-mode/config-concepts.png)\n</center>\n\n<!-- https://docs.google.com/drawings/d/1021ATCQ_Q3eBQQ1Ei5Bq7rSBfn6YtLh9113HimpsYWs/edit?usp=sharing -->\n\nThere are other inputs, but they are there to support devices and persons:\n\n- Integrations allow you to interact with your devices\n- Users allow persons to log in and access Home Assistant\n- Areas allow devices to be grouped\n- Zones label locations on the map to allow tracking persons that carry a GPS emitting device\n\nAs a user in simple mode, you will not be exposed to events, entity IDs, YAML or services.\n\n<!--truncate-->\n\n## Integration requirements\n\nIntegrations need to be able to provide the inputs for the user in simple mode. This means that there will be requirements that need to be met before an integration can be included as part of simple mode.\n\n- All entities of an integration need to have a unique ID\n- All entities of an integration need to provide device info\n\nIntegrations should be set up via discovery or via account linking. In rare cases we can allow an integration to be configured via IP addresses.\n\n## Extended discovery\n\nDuring onboarding and when the user visits the integrations page, we will trigger an extended discovery. By default Home Assistant scans the network with the SSDP and zeroconf discovery protocols. In extended discovery we will run custom discovery protocols for popular integrations like Plex or Unifi.\n\n## No YAML\n\nSimple mode will be fully controlled via the UI. No features should be exposed that require users to open a text editor. For example, a config flow that requires a user to add client_id/secret to the configuration.yaml should not be part of simple mode.\n\n## Hass.io without add-ons\n\nIn simple mode, Hass.io will be the place where users can go to manage hardware settings and updates.\n\nThe initial version of simple mode will not show features to install Hass.io add-ons. This is done to manage the scope of Home Assistant 1.0. In the future we will revisit this and decide which add-ons fit our simple mode.\n\n## Scenes\n\nUsers will control devices from scripts and automations using scenes instead of services. With scenes you take a snapshot of the current state of your devices and can restore this at a future moment. Easy to explain so easy to use. Our UI for managing scenes will be built around devices and areas.\n\n## Automations & Scripts\n\nAutomations and scripts will be used with the current editor, but the types of triggers, conditions and actions will be limited to the ones that match our inputs.\n\n- Trigger types will be limited to time, sun, zone and device triggers.\n- Condition types will be limited to time, zone, sun and device conditions.\n- Action types will be limited to activate scene and device actions.\n\n## I am a power user, why would I care?\n\nBy focusing energy on simple mode, we are making Home Assistant easier to use for all users, both beginners and power users.\n\nA great recent example of a feature that was driven by simple mode, but is beneficial for everyone is device automations. With device automations it is a breeze to configure Zigbee remotes. You can just pick from a list the button that should trigger your automation. Compare this to the old way of doing it: learn that you need to listen for `zha_event` in the event dev tool, then press the button to learn the event data to match on with an event trigger.\n\nAnother ongoing effort that will make it easier for everyone is our Hacktoberfest focus on making scenes a [first-class citizen](https://github.com/home-assistant/core/issues/25681).\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2019/10/05/simple-mode.html\" />"},{"id":"/2019/09/27/hacktoberfest","metadata":{"permalink":"/blog/2019/09/27/hacktoberfest","source":"@site/blog/2019-09-27-hacktoberfest.md","title":"Hacktoberfest 2019","description":"This year we're again participating in Hacktoberfest. Hacktoberfest is a worldwide event to celebrate open source. If you make four pull request in the month of October, you'll get a free Hacktoberfest t-shirt.","date":"2019-09-27T00:00:00.000Z","tags":[],"readingTime":3.115,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Hacktoberfest 2019"},"unlisted":false,"prevItem":{"title":"Simple Mode in Home Assistant 1.0","permalink":"/blog/2019/10/05/simple-mode"},"nextItem":{"title":"Adopting Black","permalink":"/blog/2019/07/31/black"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\nThis year we're again participating in [Hacktoberfest](https://hacktoberfest.digitalocean.com). Hacktoberfest is a worldwide event to celebrate open source. If you make four pull request in the month of October, you'll get a free Hacktoberfest t-shirt.\n\nHome Assistant is currently racing towards our magical 1.0 release. Home Assistant 1.0 is all about user friendliness. As part of this, we have recently introduced device automations and are expanding how scenes work in Home Assistant.\n\nHome Assistant supports a wide range of products, and so not each feature that we built supports each product type yet. For this Hacktoberfest, we've prepared issues to help integrations use the latest Home Assistant features.\n\nTo make it easier to get started, we have introduced a new scaffolding script. This script is able to create all the boilerplate necessary to add new features to existing entity integrations. Including tests! You will only need to focus on code to work with the specific integration. Instructions on how to use it are included in each issue linked below.\n\nIf you want to see all available issues instead of the tailored list below, [check here](https://github.com/issues?page=1&q=is%3Aopen+is%3Aissue+org%3Ahome-assistant+archived%3Afalse+label%3AHacktoberfest&utf8=%E2%9C%93) (requires being logged in to GitHub).\n\n**Update Sep 30:** Added docs section, updated the links in the Almond section, added link to all Home Assistant Hacktoberfest issues.\n\n**Update Okt 1:** Added frontend section.\n\n## Scenes\n\nScenes allow a user to define how a light should look (ie, it should be on and the color should be blue). When a scene is activated, it is then up to Home Assistant to figure out which services to call to make this happen.\n\nScenes are a powerful tool that is easy to understand for users. It's therefore important that we improve our scene support. We have prepared the following issues:\n\n- [Add `scene.create` service to create scenes on the fly.](https://github.com/home-assistant/core/issues/27023)\n- ~~[Add `scene.apply` service to apply a scene defined as service data.](https://github.com/home-assistant/core/issues/26813)~~\n- ~~[Add activate scene to script syntax](https://github.com/home-assistant/core/issues/27026)~~\n- [Add reproduce state support to entity integrations.](https://github.com/home-assistant/core/issues?utf8=%E2%9C%93&q=label%3AHacktoberfest+reproduce_state+is%3Aopen+) (multiple issues)\n\n<!--truncate-->\n\n## Device Automations\n\nDevice Automations are a device-oriented way for users to create automations. When defining a trigger, condition or an action part of an automation, the user will start by picking a device to see a list of possible options for that device. Easy!\n\nDevice automations rely on integrations to define the possible options for each device. As this is a new technology, we still are looking for help in making all our entity integrations (light, switch etc) support this. We have prepared the following issues:\n\n- [Add device trigger support to entity integrations](https://github.com/home-assistant/core/issues?utf8=%E2%9C%93&q=label%3AHacktoberfest+device_trigger+is%3Aopen+) (multiple issues)\n- [Add device condition support to entity integrations](https://github.com/home-assistant/core/issues?utf8=%E2%9C%93&q=label%3AHacktoberfest+device_condition+is%3Aopen+) (multiple issues)\n- [Add device action support to entity integrations](https://github.com/home-assistant/core/issues?utf8=%E2%9C%93&q=label%3AHacktoberfest+device_action+is%3Aopen+) (multiple issues)\n\n## Home Assistant Documentation\n\nGuess what is never done? Documentation.\n\n- [Fill in missing documentation for integrations](https://github.com/home-assistant/home-assistant.io/issues?q=is%3Aissue+is%3Aopen+label%3AHacktoberfest)\n- [Fill in missing documentation for hass.io add-ons](https://github.com/home-assistant/hassio-addons/issues?q=is%3Aissue+is%3Aopen+label%3AHacktoberfest)\n\n## Frontend\n\nWe also have some work to do on the Frontend of Home Assistant.\nSo we have also prepared some issues to get you started:\n\n- [Make all text translatable](https://github.com/home-assistant/frontend/issues?utf8=%E2%9C%93&q=label%3AHacktoberfest+label%3Alocalization+is%3Aopen+) (multiple issues)\n- [Help making Home Assistant better accessible](https://github.com/home-assistant/frontend/issues?q=is%3Aopen+label%3AHacktoberfest+label%3Aaccessibility) (multiple issues)\n- [And a lot of other small UX issues](https://github.com/home-assistant/frontend/labels/Hacktoberfest?page=2&q=is%3Aopen+label%3AHacktoberfest)\n\n## Bonus: Almond - Virtual Assistant\n\n[Almond](https://almond.stanford.edu/) is an open, privacy-preserving virtual assistant by Stanford University. We have been [collaborating](https://github.com/stanford-oval/thingpedia-common-devices/pull/80) on getting it to work with Home Assistant. Right now it's limited to controlling lights in Home Assistant.\n\nFor Hacktoberfest, let's see if we can expand the number of supported types! To get started, check the following links:\n\n- [Documentation on how to contribute Home Assistant specific types](https://almond.stanford.edu/doc/home-assistant-integration.md)\n- [Documentation on how to run tests](https://almond.stanford.edu/doc/thingpedia-testing.md)\n- Run Almond at [home](https://github.com/stanford-oval/almond-server), use [the Android version](https://play.google.com/store/apps/details?id=edu.stanford.thingengine.engine&hl=en_US) or [the Gnome version](https://flathub.org/apps/details/edu.stanford.Almond)\n\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2019/09/27/hacktoberfest.html\" />"},{"id":"/2019/07/31/black","metadata":{"permalink":"/blog/2019/07/31/black","source":"@site/blog/2019-07-31-black.md","title":"Adopting Black","description":"Today we have officially adopted the Python code formatting tool Black. All code has been formatted with Black and all future contributions will be checked to make sure that they have been formatted using Black.","date":"2019-07-31T00:00:00.000Z","tags":[],"readingTime":0.715,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Adopting Black"},"unlisted":false,"prevItem":{"title":"Hacktoberfest 2019","permalink":"/blog/2019/09/27/hacktoberfest"},"nextItem":{"title":"Building All The Things","permalink":"/blog/2019/07/19/building-all-the-things"}},"content":"Today we have officially adopted the Python code formatting tool [Black](https://black.readthedocs.io). All code has been formatted with Black and all future contributions will be checked to make sure that they have been formatted using Black.\n\nAs part of adopting Black, all style checks in flake8 and pylint have been disabled.\n\nTo make sure that all files are Black when you commit your changes, we are using [`pre-commit`](https://pre-commit.com/). The hook is automatically installed for new dev environments (as part of `script/setup`).\n\nIf you have an existing developer installation, please run inside your virtual environment:\n\n```\npip install pre-commit\npre-commit install\n```\n\n`pre-commit` does not change your files, but merely confirms that the changed files are formatted by Black. We suggest that you set up your editor to automatically format files with Black when you hit save. Instructions for various editors can be found [here](https://black.readthedocs.io/en/stable/integrations/editors.html)."},{"id":"/2019/07/19/building-all-the-things","metadata":{"permalink":"/blog/2019/07/19/building-all-the-things","source":"@site/blog/2019-07-19-building-all-the-things.md","title":"Building All The Things","description":"How Home Assistant is using Azure Pipelines to automate all the things.","date":"2019-07-19T00:00:00.000Z","tags":[],"readingTime":7.215,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Building All The Things"},"unlisted":false,"prevItem":{"title":"Adopting Black","permalink":"/blog/2019/07/31/black"},"nextItem":{"title":"Climate Cleanup","permalink":"/blog/2019/07/03/climate-cleanup"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\n_How Home Assistant is using Azure Pipelines to automate all the things._\n\nHere at Home Assistant, we love automation! Not only in our homes, but also when doing development work. We do a release every three weeks and it includes code from over 80 different people. All is managed by only two people working on this full-time (thanks [Nabu Casa](https://www.nabucasa.com)!).\n\nWe distribute Home Assistant as a Python package, and as part of our all-in-one system called Hass.io. Hass.io has its own operating system, a supervisor Docker container and the Home Assistant docker container. Besides that, Hass.io supports add-ons, of which we have a set of official add-ons that we also maintain. Everything we do for Hass.io, we have to do five times, once for each of our supported architectures: amd64, i386, armv6, armv7, aarch64.\n\nTo still be able to move fast, we spend a lot of time on automating build tasks. After working with [TravisCI](https://travis-ci.org/) and [CircleCI](https://circleci.com/), we have finally landed on [Azure Pipelines](https://azure.microsoft.com/en-us/services/devops/pipelines/).\n\nWe started out with Travis but realized that we could significantly speed up our builds by leveraging the CircleCI open source plan that includes 4 workers, test distribution and build artifact caching. We tried to get more workers with CircleCI but adding workers under their new pricing plan was too expensive.\n\n[Pascal Vizeli](https://www.github.com/pvizeli) had experience with Azure from a previous job, and he was able to migrate and build all the YAML based pipelines in days. He did this with support from [Kees Schollaart](https://twitter.com/keesschollaart), who is a DevRel at Azure but famous in our community for creating the [Home Assistant Companion extension for VS Code](https://marketplace.visualstudio.com/items?itemName=keesschollaart.vscode-home-assistant). He helped us a lot whenever we got stuck.\n\nAzure’s open source plan comes with 10 free agents, and after we reached out to Microsoft, we were provided 20 additional agents to help us automate all the things!\n\nInterested to see what we do with all this Azure power?\n\n<!--truncate-->\n\n## Continuous Integration\n\nAll changes to Home Assistant go through our CI pipeline. When a pull request to the Home Assistant repository comes in, it will trigger a pipeline as configured in [`azure-pipelines-ci.yml`](https://github.com/home-assistant/home-assistant/blob/dev/azure-pipelines-ci.yml).\n\nContributions to Home Assistant are tested against our test suite, code style and typing, to make sure that the contribution does not break things. We have split our test suite into 3 different stages. By using stages, we can run a quick validation stage and fail fast if it’s not correct.\n\nThis strategy allows us to not waste any of our workers time on running a full test suite if we know that basic linting is not going to pass.\n\nBelow is a screenshot of our CI pipeline for Home Assistant. Because all work is distributed over multiple workers, the total runtime is the longest task in the first column, plus the longest task in the second column.\n\n<center>\n![Screenshot of the Home Assistant CI pipeline.](/img/en/blog/2019-07-building-all-the-things/test-stages.png)\n</center>\n\nTo improve the time of our CI on Azure, we’re using a preview version of [pipeline artifact caching](https://marketplace.visualstudio.com/items?itemName=1ESLighthouseEng.PipelineArtifactCaching). This allows us to build the dependencies once, store it as a package close to the test runners and re-use it across jobs and pipeline runs.\n\nAnother optimization that we do is that we use our own base images for the test runners. These images already have the correct Python and other base utilities installed. We add them to the [resources](https://github.com/home-assistant/core/blob/de3d28d9d5bd5dd69cf9f84d021d683da2c322d6/azure-pipelines-ci.yml#L12-L18), and then later reference them in the [strategy](https://github.com/home-assistant/core/blob/de3d28d9d5bd5dd69cf9f84d021d683da2c322d6/azure-pipelines-ci.yml#L72-L80) section.\n\nCircleCI had a nice feature that it could distribute your tests over multiple workers by keeping track of the duration of each test. This was reducing the duration of the PyTest suite to around 10 minutes. This is using more agents and we would quickly run out of agents, creating a big backlog. Subsequent stages are only enqueued once the “Overview” stage finishes, causing them to be in the queue behind other contributions that came in.\n\nWith Azure, we get more runners which are more powerful and faster, but no parallelization. This means that an individual build will take longer, however, with many builds coming in, the individual build time remains roughly the same, as we are not experiencing any backlog.\n\n<center>\n![Screenshot of the Home Assistant CI pipeline.](/img/en/blog/2019-07-building-all-the-things/test-results.png)<br />\nScreenshot of the [test results](https://dev.azure.com/home-assistant/Home%20Assistant/_build/results?buildId=3976&view=ms.vss-test-web.build-test-results-tab).\n</center>\n\n## Building HassOS\n\nHassOS is our own embedded Linux distribution. It is tailored to run the bare minimum of what we need to run Home Assistant in a Docker container. BuildRoot powers the build and we’re targeting five different processor architectures.\n\nThe Azure Pipelines agents are using the amd64 CPU architecture. It is possible to compile for different architectures using a method called cross-compiling. We gave it a shot but realized that it is significantly slower than compiling a build using the same native CPU's as that we’re targeting.\n\nWe use a feature on Azure Pipelines called [self-hosted agents](https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/agents?view=azure-devops#install) to host build agents on our own hardware with the right architecture. Azure Pipelines manages the pipeline definition and the orchestration, but the execution runs blazing fast on our own hardware.\n\n<center>\n![Screenshot of the Home Assistant CI pipeline.](/img/en/blog/2019-07-building-all-the-things/build-cabinet.jpg)<br />\nOur build cabinet.\n</center>\n\n## Building Python Wheels\n\nHome Assistant ships as a standalone Python package, and bundled up in Docker containers. Our Docker containers contain all the Python packages for our different integrations pre-installed. Because of this, creating a Docker container took a long time, as we had to install and build each Python package for each architecture. Home Assistant + all integrations rely upon over a 1000 different Python packages.\n\nTo speed this up, we’re leveraging Python Wheels. Wheels are a binary format that contains pre-build Python packages for a specific operating system and CPU architecture. We have an Azure pipeline to help build wheels for all the different packages on all supported CPU architectures. That’s a total of 5000 wheels!\n\nA special wheels format that can target many platforms with a single build. We are unable to use that because it is not compatible with musl libc, which is what Alpine uses.\n\nThis pipeline is triggered automatically when a contribution has been accepted and merged into development and it changed any requirements ([pipeline definition](https://github.com/home-assistant/core/blob/de3d28d9d5bd5dd69cf9f84d021d683da2c322d6/azure-pipelines-wheels.yml#L3-L10)). We also run it daily to make sure that all changes have been captured.\n\nBecause installation using a wheel is significantly faster, we also offer custom integrations to [register themselves](https://github.com/home-assistant/custom-components-wheels). We will scan each custom integration once a day to make sure we have wheels for the Python packages that they use.\n\nBy leveraging wheels, we have been able to reduce the build time of our Home Assistant containers for Hass.io from 1 hour to 10 minutes (measurement from the amd64 build).\n\n_(sidenote. Python is named after Monty Python, and the package index got called “the Cheese Shop” after one of their famous sketches. The Wheel format is thus named after a wheel of cheese, not the wheels of a car. 5000 wheels of cheese is a lot of cheese.)_\n\n## Building Home Assistant releases\n\nHome Assistant does a stable release every three weeks. Prior to this stable release, we usually have around 6 beta releases. After a stable release, we usually have 2 or 3 patch releases.\n\nEach release will need to be built as a standalone Python package, and a Docker container for each of the five supported CPU architectures.\n\nThis pipeline is triggered whenever a [new release is tagged](https://github.com/home-assistant/core/blob/dev/azure-pipelines-release.yml#L3-L7). We first verify that the tag name matches the version in the code and that the release was created by one of our whitelisted release managers. We will then automatically build all the releases and publish them.\n\n## Building Hass.io add-ons\n\nOne of the features of Hass.io is add-ons. Add-ons allow developers to re-use the same infrastructure that Home Assistant uses to run inside Hass.io, but for any other programs that you want to run on your network. These add-ons can tightly integrate with Home Assistant. For example, it is possible to install AdGuard from the [Community Add-ons](https://github.com/hassio-addons/repository) with one click and have it’s data be accessible inside Home Assistant.\n\nHass.io contains a couple of core add-ons. Each release of these add-ons will too need to be built for all five architectures. We keep all the add-ons in a single repository, but each add-on has its own pipeline definition that is only triggered when that add-on changes ([example](https://github.com/home-assistant/hassio-addons/blob/master/mosquitto/azure-pipelines.yml)).\n\n## Conclusion\n\nBuilding out a wide range of automations has really helped Home Assistant scale with a minimum amount of human resources. We’re really happy with all the help that we have received from Azure and their employees. Cheers!\n\n## Links\n\n- [Home Assistant on Azure Pipelines](https://dev.azure.com/home-assistant/Home%20Assistant/_build)\n- [Hass.io on Azure Pipelines](https://dev.azure.com/home-assistant/Hass.io/_build)\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2019/07/19/building-all-the-things.html\" />"},{"id":"/2019/07/03/climate-cleanup","metadata":{"permalink":"/blog/2019/07/03/climate-cleanup","source":"@site/blog/2019-07-03-climate-cleanup.md","title":"Climate Cleanup","description":"This post is about the upcoming changes for the Home Assistant climate integration. These changes are being implemented right now and are no longer up for discussion. If you want to see changes, consider opening an architecture issue.","date":"2019-07-03T00:00:00.000Z","tags":[],"readingTime":2.935,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Climate Cleanup"},"unlisted":false,"prevItem":{"title":"Building All The Things","permalink":"/blog/2019/07/19/building-all-the-things"},"nextItem":{"title":"Internet of Things and the Modern Web","permalink":"/blog/2019/05/22/internet-of-things-and-the-modern-web"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\n_This post is about the upcoming changes for the Home Assistant climate integration. These changes are being implemented right now and are no longer up for discussion. If you want to see changes, consider opening [an architecture issue](https://github.com/home-assistant/architecture/issues)._\n\nStarting with Home Assistant 0.96, we're shipping a big architectural clean up of our climate integrations. This effort is lead by Pascal Vizeli.\n\nOver the years, the climate integration has grown from being a simple place for thermostats to hosting ACs, heat pumps and ventilation systems. During this growth, mistakes have been made which resulted in a confusing and hard to work with design. Work is underway to get this all cleaned up and we're going to ship this in Home Assistant 0.96.\n\nThe biggest mistake we made is that we conflated operating and operation mode. Operation mode is what you want your thermostat to do, for example, heat the house to 19 °C. The operating mode is what the thermostat is _currently_ doing. Is it heating because the house is too cold? Or did it already reach the target temperature and is it currently idle?\n\nOn top of that, we've noticed that a lot of integrations overload operation mode with a wide range of delightful options like \"eco\", \"comfort\", \"boost\" or \"sleep\". After carefully analyzing all the different climate systems out there, we have come to the conclusion that these alternative operation modes are variations of the existing operation modes (heat, cool, heat-cool), but might have different target temperature ranges or try to heat/cool at a slower pace to conserve energy.\n\nTo support as many different thermostats as possible, we have decided to allow climate devices to specify a new \"preset\" mode that they are operating under. It covers hold mode, away mode, or any custom operation mode that a thermostat includes.\n\nYou might wonder, why go for a preset instead of allowing to overload operation mode? On first glance, it might seem fine for an integration to list the possible options and the current chosen option, easy to make a UI for. However, that's not the only way Home Assistant is used. We are also serving as a single place to control any thermostat for external systems like Google Assistant or Amazon Alexa. They have a limited set of operation modes they expect.\n\nA gist of the changes:\n\n- `operation_mode` has been renamed to `hvac_mode` to emphasize what the mode is for.\n- We split HVAC mode `auto` into `auto` and `heat_cool`. If it's `heat_cool`, the user has set a temperature range the device has to use heating and cooling to stay within. Auto mode is now limited to devices that are running on a schedule or AI.\n- The state of a climate entity is now always equal to the HVAC mode.\n- `hvac_action` is introduced for integrations that know the current action: heating, cooling, idle.\n- `set_away_mode` and `set_hold_mode` have been merged into `set_preset_mode`. So instead of `turn_away_mode_on()`, we will now call `set_preset_mode(\"away\")`.\n- The `is_on` property has been removed. If a device is able to turn off, it should include the hvac mode `HVAC_MODE_OFF`.\n- Property names have been aligned, anything ending with \"\\_list\" is now named \"\\_modes\".\n\nIf you are a maintainer of an integration that has a climate platform or maintain a custom component that has one, make sure you [follow the pull request](https://github.com/home-assistant/core/pull/23899) and test your integration during the beta to make sure that it works like expected.\n\n<!--truncate-->\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2019/07/03/climate-cleanup.html\" />"},{"id":"/2019/05/22/internet-of-things-and-the-modern-web","metadata":{"permalink":"/blog/2019/05/22/internet-of-things-and-the-modern-web","source":"@site/blog/2019-05-22-internet-of-things-and-the-modern-web.md","title":"Internet of Things and the Modern Web","description":"Home Assistant is world's biggest open-source home automation platform. It supports over 1000 devices and services, and it is used everywhere: homes, boats and museums.","date":"2019-05-22T00:00:00.000Z","tags":[],"readingTime":18.25,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Internet of Things and the Modern Web"},"unlisted":false,"prevItem":{"title":"Climate Cleanup","permalink":"/blog/2019/07/03/climate-cleanup"},"nextItem":{"title":"Introducing Integrations","permalink":"/blog/2019/04/12/new-integration-structure"}},"content":"import DiscussionBox from '../static/js/discourse_discussion.jsx'\n\n[Home Assistant](https://www.home-assistant.io) is world's biggest open-source home automation platform. It [supports](https://www.home-assistant.io/components/) over 1000 devices and services, and it is used everywhere: homes, [boats](https://hasspodcast.io/ha048/) and [museums](https://twitter.com/sjvanterpool/status/1124035433212649475).\n\nToday I want to talk about our UI, what we're trying to solve and how we solve it. <span class='hide-small'>Before we dive into why, what and how, let's take a look at our user interface. This is an embedded version of <a href='https://demo.home-assistant.io' target='_blank'>our demo</a>, which is fully interactive.</span>\n\n<iframe id='demo' class='hide-small' src=\"https://demo.home-assistant.io\"></iframe>\n\n<p class='show-small'><i>The embedded demo has been hidden because the screen is too small. <a href='https://demo.home-assistant.io' target='_blank'>Open the demo in a new screen.</a></i></p>\n\n# Use Cases\n\nWhen building a platform for the Internet of Things, there are many use cases that warrant a user interface. Note that for the sake of this blog post, we're focusing on graphical user interfaces on devices with screens the size of a phone, or bigger.\n\n**Security.** Users that want to have a quick glance at their house when they are away from home. They quickly want to check if their garage door is closed or maybe they got notified of unexpected motion in the backyard or water below the sink and need to check out. These users will want to see a logbook with recent security related incidents, the current camera streams and the current state of the doors, windows, water- and motion sensors.\n\n**Control all the things.** Users want to have a single place to control all their devices. Their goal of the user interface is to quickly see each part of the house at a glance and control lights, switches, thermostats and the music.\n\n**Control single room.** Users that are building interfaces for devices in each room. These devices need to expose all controls of a single room, with optional extra information about the whole house and options to control other parts of the house.\n\n**Monitor.** Users want to build their own dashboards to visualize all the current and historical data inside Home Assistant and other databases, like InfluxDB. They want to keep track of their energy usage, track their internet speeds or current commute time.\n\n**Administer and Automate.** Users that want to have dashboards that contain their controls to administrate Home Assistant. It contains their automations, scripts and various input controls to allow configuring the parameters of their automations and scripts.\n\nThe odds are that if you are using Home Assistant right now, your UI is a hybrid of a couple of the mentioned use cases. Todays blog post is going to talk about what technologies we have used to built a UI that allows users to build UIs that fit all these use case.\n\n<!--truncate-->\n\n# The Requirements\n\nWhen we started to re-architect a part of our interface last year, we came up with a list of requirements based on the use cases, our experience with building our previous interface, and the problems we ran into.\n\n* **It needs to have zero runtime magic.** Each user wants something different, and so if we make a decision during runtime, people will ask for configuration options to influence this decision. Our UI will need to base all decisions off the configuration, and only jump in with smartness if no configuration is given. We can still suggest configurations to the user, but once the user edits it, they own it and are the only ones updating it.\n* **It needs to be customizable.** Users want to be able to change everything. It is important that we allow users to specify configuration options to change things like styling, names or icons.\n* **It needs to be mobile first.** Home Assistant does not ship with separate mobile applications. Our UI is going to be used on mobile devices, laptops, and everything in between. It needs to be possible to install, use and configure Home Assistant with just a mobile phone.\n* **It needs to be emerging market ready.** Home Assistant wants to make the smart home accessible to everyone. Because we are free and open source, we are accessible to a wide range of people from across the globe. Most of these people are on slow phones and with spotty internet. Our user interface still needs to be usable and be able to run on many different phones.\n* **It needs to be extensible.** With many use cases to cover, it is important that the UI is extensible. Extensibility allows developers to experiment and allows us to support everything, yet not have to satisfy all edge cases/unique features in the Home Assistant core, where it will have to be maintained forever.\n* **It needs to be easy to develop for.** It can be easy to get lost in tooling. Especially while trying to maintain support for all the different devices, but also offer easy theming and configuration. It should be easy for anyone to go from user to developer, without spending 2 days preparing the development environment.\n\n# Modern Web is our Platform of Choice\n\nQuite the list of requirements. Home Assistant is an open source project that, thanks to the generous support of our users, has 2 full time developers working on it together with an army of volunteer developers across the globe. With such a set up, we had to make decisions on how to achieve our goals. And there was only one platform that fit the bill perfectly, a platform that allows us to offer theming, configuration options for defaults but also allows us the user to import external components to render parts of the page, and that allows us to structure the code in an easy way to allow users to easily access it from any device: the modern web.\n\nNote that I say modern. In recent years browsers, web frameworks and tooling have come a really long way in offering a way to easily tackle our challenges. We have seen the introduction of CSS properties, custom elements and all major web tooling supports code splitting out of the box.\n\nAnd all this modern web goodness is widely available: desktop browsers have become evergreen, which means they self-update without user intervention. Android users can get browser updates via the Play Store and Apple tends to give their phones 5 years of updates, with each update containing an updated browser.\n\n# The Implementation\n\nA lot of the things that we do are based off or inspired by others. Although I don’t have a definite list of all people that inspired all our choices or approaches, it was definitely inspired by tweets and talks by [Alex Russel](https://twitter.com/slightlylate), [Rich Harris](https://twitter.com/Rich_Harris), [Justin Fagnani](https://twitter.com/justinfagnani), [Malte Ubl](https://twitter.com/cramforce) and the Polymer team mantra “Do less and be lazy\". These people have helped shape our mindset on how we approach building a great UI.\n\nIn case you are wondering how an open source project got such an extensive list of cool stuff that we are doing, it’s actually _because_ we are open source project. For the volunteers working on this, this is fun. We love following the latest frontend developments and implement them, without having to worry about someone complaining about how our time is better spend on other things.\n\n* **[TypeScript](https://www.typescriptlang.org/) is our language of choice.** Home Assistant supports a lot of different types of devices, contains a lot of APIs and supports a lot of different widgets in the frontend. It is impossible to expect people to remember this all, and by leveraging TypeScript no one has to. TypeScript is a typed version of JavaScript that offers compilation time type-checking and great auto-complete. When we do a release, the TypeScript is converted to JavaScript so that no special runtime is needed in the browser.\n* **[Lit Element](https://lit-element.polymer-project.org/) is our web framework of choice and powers our user interface.** Lit Element is a web framework that allows declarative templating, is just 6kb gzip’d, is blazing fast and has great TypeScript support. Lit Element does not require any build tooling, so it has also become the framework of choice for our developers creating UI extensions.\n* **[Custom Elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements) as the technology of choice for extensibility.** The web is ever changing, and we want to attract a wide range of developers. So we didn’t want to pick a framework and force our users to use it. So instead, we chose the compatibility layer that browsers have built-in: custom elements. Custom elements are a browser specification that allows developers to specify their own HTML tags that, once added to the DOM, interact with your JavaScript code to allow you to update the page.\n\n  Custom elements are very flexible. It is possible to add the tags to the page before the actual JavaScript is loaded. Once loaded, it will take over and render the correct UI. This makes it perfect for being able to build the page up quickly without having to load everything in advance. The browser also allows us to listen for when a custom element gets defined, allowing us to rebuild parts of the UI as things get loaded.\n* **Isolating our components using Shadow DOM.** Although we want developers to run code on our page, we don’t want them to accidentally mess up our built-in components, or even worse, break the whole page. To protect our components, we use Shadow DOM. This allows us to encapsulate the DOM and styling of our components.\n* **Allow theming using CSS properties.** Users want to customize the built-in components and they want to customize third party components that they import. This has to work regardless of the web frameworks that the developers use to build their widgets. We have been able to solve this using CSS properties. CSS properties are CSS values that a user can set on the whole UI, per tab and sometimes per card to customize the look and feel.\n* **Rely on Static DOM.** When the page is first loaded, we will build up the page as per the users configuration. After that, we won’t touch it again. Instead, when a state changes, we will have the state be passed on to all the relevant components where lit-html will efficiently change the pieces that require updating.\n* **Shipping modern JavaScript.** We produce two builds of our frontend. One version is aimed at modern browsers, is imported as a module and can leverage modern features like lambdas, classes and async/await. The modern version generates a lot less code and the JavaScript engine in the browser can better understand the codes’ intention, which results in faster execution.\n\n  We used to use browser user agent detection to decide on what version to ship, but have recently moved to frontend feature detection by leveraging `type=module`, `nomodule` and a specific check to make sure Safari 10.1 doesn’t load both.\n* **Aggressively pre-cache using Service Workers.** Home Assistant ships with a service worker. A service worker is an independent JavaScript script that runs in the background of the website and which we set up to download all code that is ever needed to show our UI in advance. This means that once the service worker is up and running, the only requests to the server are for the data! We already register the service worker while you are logging in, so that when you finish logging in, the frontend has been downloaded. We use [Workbox](https://developers.google.com/web/tools/workbox/) to generate our service worker during build time.\n* **Decouple code that fetches data and code that renders UI.** The first thing that we load on the page is a 5KB JS file that will initiate the connection to the server and start requesting the necessary data. In the meanwhile, the browser is parsing the rest of the JavaScript required to render the initial page. We use a `link rel=preload` to make sure thet this JavaScript file is the first thing that gets downloaded as soon as the page loads.\n* **Easy state management.** To be able to share our state with any component, internal or external, we decided to roll our own state management. It’s a simple object that contains the current state of the house and it is passed down our component tree. Whenever the state changes, we make a copy and update the changed parts and then pass it down again to all the components. Components will then re-render and show the latest state. All state updates are managed by Home Assistant JS Websocket, and are all generated on the server. They are pushed to the frontend using web sockets, allowing all open UIs to stay in sync because they all receive the latest changes as soon as possible.\n\n  [Home Assistant JS Websocket](https://github.com/home-assistant/home-assistant-js-websocket/) is our 4KB WebSocket + Auth library that can be added to any site to integrate it with Home Assistant instances. For a standalone Home Assistant UI built using 50 lines of JavaScript, see [this glitch](https://hass-auth-demo.glitch.me/).\n* **Easy extension development using modules and unpkg.** Developers are able to develop their own cards without running any tooling. All you need is to create a JavaScript file, reference it in the resource section of your config and you can start using it ([example in the docs](/docs/frontend/custom-ui/custom-card#advanced-example)). We default to importing resources as type=module, so that developers can import their dependencies straight from http://unpkg.com during development.\n* **Make it easy to find bloat in bundles.** If we can make it easier to find things that we ship unnecessarily, developers are more likely to find it and  spend time on removing the bloat. For that reason, we include scripts in our repository that allows anyone to quickly run a bundle analysis using the [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer) and see what packages add to our bundle size. These analysis look [like this](https://s3.amazonaws.com/home-assistant-demos/bundle-analysis/report-20190522.html).\n* **Code split translations.** We use [lokalise.co](https://lokalise.co/) to manage our translations. All translation strings in our code base are automatically uploaded to lokalise.co where volunteers are translating the available strings. We have build tooling to split our translations based on the different panels in our UI. This allows us to only load the translations on the fly that we need.\n* **Decentralized routing.** The top level of the application only knows how to route the first part of the url. It knows which code to load and which web component to instantiate. It will pass the rest of the url to the panel and further routing can be done from there. This will avoid the initial bundle to keep growing as more parts are splitter out. We have also created a simple to use router for web components with support for code splitting and loading screens, making it easy for our developers to do the right thing.\n* **Avoid doing things when the source is parsed or classes are initialized.** This one is in the category “Do less and be lazy”. It is important to get to the initial render as fast as possible. It’s therefore important that you avoid anything that isn’t necessary. Lit Element helps with this by offering life cycle hooks that are run after the update is complete. There is no “run before component will update” life cycle.\n\n  A great example of this mantra in Polymer is debounce. Their debounce will not generate a debounced function, but instead you only call it when you want to call the function. It might then call the function and will return a piece of state that you need to pass back in on the next invocation. That way you don’t need to generate a debounced function before it is needed.\n\n# Challenges / Future Improvements\n\nWe do a lot of cool things, but the work is never done. Here are some challenges we faced and future improvements that we might explore. One interesting observation I had while writing this list, is that some of the problems we have are not due to bad design, but are due to outgrowing the design. The designs were the right designs when the UI was smaller, but now that we have grown we need to adapt.\n\n* **Dealing with duplicate custom element names.** A custom element can only be defined once. This means that if a component imports a different version, this will go haywire. Home Assistant has it’s own specialized operating system [Hass.io](https://www.home-assistant.io/hassio/) which ships with it’s own control panel on it’s own release cycle. We were unable to make any guarantees on version compatibility, and after one time too many of breaking our users UI, we sat down and solved it: we are running the Hass.io control panel in an iframe so that the custom elements are isolated from the parents page.\n\n  We also offer this functionality as an extension point for developers. Via the [custom panel integration](https://www.home-assistant.io/components/panel_custom/) they can build their own panel with optional iframe isolation. The other use case we found for iframe isolation was for React. This web framework is popular but does not work in ShadowDOM. By isolating it in an iframe, we were able to solve this too ([example code](https://github.com/home-assistant/custom-panel-starter-kit-react)).\n* **Moving away from trying to put everything in Webpack.** When the project moved from HTML imports to JS imports, we switched to WebPack as our bundler of choice. We got a little too excited and did everything in WebPack, including generating HTML. Since we have two builds of our frontend, we actually have two WebPack builds. By putting everything in WebPack, we made it impossible to create files that could refer to the hashed filenames of both the modern and ES5 version of our builds. It’s our goal to minimize WebPack’s duties to transpiling TypeScript, bundling the files and minification. By reducing the responsibilities, it will be easier for us to try out other bundlers. I am looking forward to experiment with [Rollup](https://rollupjs.org/) + [Closure Compiler plugin](https://github.com/ampproject/rollup-plugin-closure-compiler).\n* **Use [dynamic imports](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Dynamic_imports) in our modern JavaScript build.** WebPack only has a single output mode for bundled builds, which uses their own dependency injection system at runtime. If we can switch to Rollup, we should be able to leverage dynamic imports, which are built into browsers.\n* **Removing Polymer from main bundle.** The first version of the UI was built with the Polymer web framework and the [Paper elements](https://www.webcomponents.org/collection/polymerelements/paper-elements), a set of material design components built using Polymer. We still have some core UI code that relies on Polymer, which means that it’s still part of the initial UI bundle. That means that currently both Polymer and Lit Element are part of our initial bundle, bloating this bundle unnecessarily.\n* **Translating all the strings.** We still ship text that is not translated yet. Home Assistant is used in homes by all demographics. It is important that users can use the UI in a language that they understand. On top of that, we have made great strides with RTL support recently and most is covered, but there are still places where this can be improved too.\n* **Decentralize all the things.** One of my key takeaways from Malte Ubl’s post about [designing big JavaScript applications](https://medium.com/@cramforce/designing-very-large-javascript-applications-6e013a3291a3) is to avoid central configuration. Central configuration will just keep growing as the application grows, and if that is part of the main bundle, you will ship unnecessary things. This currently manifests itself in two places in our code:\n    * We ship an iconset that is build as part of the release and contains all icons referenced in the whole UI. As our UI grows, this iconset is growing. It now includes a lot of icons that are no longer required for initial load but are still loaded. An option to explore is to replace our current icon rendering components with one that supports lit-html templates that contain the SVG icons. We can then start loading the icons via our normal JS import. This will allow our JS bundler to only include the icons referenced by the code in the bundle. We should make sure that we can mark these files as being ok to be duplicated, or else the JS bundler will generate a lot of tiny bundles with just a single icon.\n    * We currently split our translation files out per language and per panel of the UI and then individually fingerprint each file. This manifests file is included in our initial build, and as our app has grown in panels and we have gained support for more languages, our manifest file is now a big chunk of our initial UI bundle. Our first step should be to generate a single hash per language, allowing us to only contain a single line per language.\n* **Analyze current code splitting algorithm.** Right now WebPack will make sure that each JavaScript file is only loaded once (as per the spec). However, this means that we end up with certain files no longer being bundled at all, because there are too many code splitted pieces of code that reference that file, it ends up in its own chunk. Right now our frontend build contains 126 code splitted chunks, of which 85 are less than 5KB! We need to run traces to see if this is a problem, or that the service worker hides most of this.\n* **Stop using local storage.** We use local storage to store the auth tokens, the language preference and if the sidebar is shown. Since local storage is accessed synchronously, the browser will stop executing anything on the page while it is waiting for the local storage to be read from disk. Browser vendors are working on alternatives like [kv-storage](https://github.com/WICG/kv-storage) which are asynchronously and might become a viable alternative.\n* **Swap out Paper elements for [Material Web Components](https://github.com/material-components/material-components-web-components).** The Paper elements are no longer maintained and Material Web Components will be the successor, however they are still under development. The MWC components use Lit Element under the hood and rely on the material.io VanillaJS implementation of Material design. This means that they will be a lot lighter than the current Paper elements and will actually be maintained.\n\n## Comments\n\n<div id='discourse-comments'></div>\n\n<DiscussionBox discourseUrl=\"https://community.home-assistant.io/\"\n      discourseEmbedUrl=\"https://developers.home-assistant.io/blog/2019/05/22/internet-of-things-and-the-modern-web.html\" />"},{"id":"/2019/04/12/new-integration-structure","metadata":{"permalink":"/blog/2019/04/12/new-integration-structure","source":"@site/blog/2019-04-12-new-integration-structure.md","title":"Introducing Integrations","description":"We have finished the great migration. The result will be released as part of Home Assistant 0.92. The release has been a bit delayed because we had a lot of things to fix! With the migration done, we now consider components and platforms that share the same name to be part of the same integration. Each integration is either a single Python file, or a folder with an init.py. file. We have updated the documentation and introduced a new section for integrations.","date":"2019-04-12T00:00:00.000Z","tags":[],"readingTime":1.965,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Introducing Integrations"},"unlisted":false,"prevItem":{"title":"Internet of Things and the Modern Web","permalink":"/blog/2019/05/22/internet-of-things-and-the-modern-web"},"nextItem":{"title":"Can I Have User Permissions?","permalink":"/blog/2019/03/11/user-permissions"}},"content":"We have finished [the great migration](/blog/2019/02/19/the-great-migration). The result will be released as part of Home Assistant 0.92. The release has been a bit delayed because we had a lot of things to fix! With the migration done, we now consider components and platforms that share the same name to be part of the same integration. Each integration is either a single Python file, or a folder with an `__init__.py`. file. We have updated the documentation and introduced a new section for [integrations](/docs/creating_integration_file_structure).\n\nHome Assistant 0.92 introduces a new [`manifest.json`](/docs/creating_integration_manifest) for integrations. This file, which is optional for custom components, is used by integrations to specify metadata: name, link to the documentation, dependencies, requirements and code owners. We are exploring leveraging `manifest.json` for additional future features, like tracking breaking changes or allowing custom components to provide config flows and being discovered.\n\nWith all these changes, we had to drop a few deprecated things and change some behavior:\n\n- Platforms can no longer be in the directory of the entity component, like `light/my_platform.py`. Instead, create a new `my_platform` folder in your custom_components, create an empty `__init__.py` file and move `light/my_platform.py` to `my_platform/light.py`.\n- Platforms can no longer have dependencies or requirements. Instead, create a [`manifest.json`](/docs/creating_integration_manifest) in the `my_platform` folder to specify them, or add `REQUIREMENTS` or `DEPENDENCIES` constants to the `__init__.py` file.\n- A platform will now always require the component, if available, to be set up first.\n- It is no longer possible to provide translations for components that are contained in a single Python file. Convert them to an integration in [a directory](/docs/creating_integration_file_structure).\n- If you want to override a built-in integration, you need to specify a `manifest.json` for your custom integration. Note that we strongly discourage overriding built-in integrations. Instead, if you want to run an integration with custom changes change the integration name. For example if you want to run a custom version of the MQTT integration, named `mqtt` in Home Assistant:\n  - Copy the content of the `mqtt` folder from [the Home Assistant repository](https://github.com/home-assistant/core/tree/dev/homeassistant/components/mqtt) to a new folder `<config>/custom_components/mqtt_custom/`\n  - Open `mqtt_custom/manifest.json` and change the value for `domain` from `mqtt` to `mqtt_custom`\n  - Open `mqtt_custom/__init__.py` and change the value of `DOMAIN` from `mqtt` to `mqtt_custom`\n  - Anywhere in your config where you referenced `mqtt`, reference `mqtt_custom`. So use `mqtt_custom:` to specify the host and use `platform: mqtt_custom` when specifying platforms."},{"id":"/2019/03/11/user-permissions","metadata":{"permalink":"/blog/2019/03/11/user-permissions","source":"@site/blog/2019-03-11-user-permissions.md","title":"Can I Have User Permissions?","description":"Home Assistant has had a user permission system since Home Assistant 0.82 (released Nov, 2018). Permissions are attached to groups, a user can be part of multiple groups, user permissions are based on merging the permission policies of all of its groups. More detailed info can be found in our docs. Users can create their own groups, but there are also three system groups: \"admin\", \"users\" (new in 0.90), and \"read-only\". All three have access to all entities, but the read-only cannot control any of them. Only the users part of the admin group can access administrative options like managing users and integrations.","date":"2019-03-11T00:00:00.000Z","tags":[],"readingTime":3.035,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Can I Have User Permissions?"},"unlisted":false,"prevItem":{"title":"Introducing Integrations","permalink":"/blog/2019/04/12/new-integration-structure"},"nextItem":{"title":"The Great Migration","permalink":"/blog/2019/02/19/the-great-migration"}},"content":"Home Assistant has had a user permission system since Home Assistant 0.82 (released Nov, 2018). Permissions are attached to groups, a user can be part of multiple groups, user permissions are based on merging the permission policies of all of its groups. More detailed info can be found in [our docs](/docs/auth_permissions). Users can create their own groups, but there are also three system groups: \"admin\", \"users\" (new in 0.90), and \"read-only\". All three have access to all entities, but the read-only cannot control any of them. Only the users part of the admin group can access administrative options like managing users and integrations.\n\nBefore Home Assistant 0.90, we were not using any of it. Instead, all users are part of the admin group, as that group provides the same access as before we had permissions. With 0.90, we're going to allow switching the users group between the system groups \"admin\" and \"users\". When a user is part of the \"users\" group, they will not be able to administer Home Assistant. The UI will hide the menu items to open the configuration panel or the developer tools.\n\n![Screenshot showing a user in the users group](/img/en/blog/2019-03-user-permissions/screenshot.png)\n\nThis feature is however unfinished. We need to audit the Home Assistant code to make sure that all APIs and service calls check the users permissions. So although a user will not be able to use the UI to make changes, there might still be APIs that can be accessed without permissions. And not only do we need to check the Home Assistant code, custom components that register services or APIs will also have to be updated.\n\nSo this is where you can help! If you're maintaining an integration, either custom or built-in, read up on [the documentation on how to check permissions](/docs/auth_permissions#checking-permissions). Then check that your integration checks permissions appropriately. Once you checked yours, help others check theirs, and help us to audit all services and API calls in Home Assistant.\n\n## What about custom groups?\n\nAlthough we support the creation of custom groups, don't expect it publicly exposed anytime soon. The reason for this is that it requires a lot of work on APIs that interact with the custom policies. The hardest part is that a custom policy could enable read access to only a couple of entities, and only allow control access to a subset of them. We will need to go through each API to make sure they support this. Lovelace will also need to be updated to support users having their own configuration view.\n\nThat being said, if you do want to play with it, it's possible.\n\n:::danger\nThis is risky. Make backups, etc.\n:::\n\nTurn off Home Assistant and open up `<config>/.storage/auth`. Find the key `\"groups\"` and add a new group:\n\n```json\n{\n  \"id\": \"my-custom-group\",\n  \"name\": \"My Custom Group\",\n  \"policy\": {\n    \"entities\": {\n      \"entity_ids\": {\n        \"light.kitchen\": true,\n        \"switch.ac\": {\n          \"read\": true\n        }\n      }\n    }\n  }\n}\n```\n\nNow scroll down in the file to the `\"users\"` key and find the user you want to apply the custom group to. For this user, update their `\"group_ids\"` value to be that of your custom group. Note, you should not update the user that has `\"owner\": true`, as they will always have all permissions.\n\n```json\n\"group_ids\": [\n    \"my-custom-group\"\n],\n```\n\nNow start Home Assistant and log in with the updated user. If all went well, you should see only the kitchen lights and AC switch. Controlling the AC will fail.\n\nA user can be as many groups as you want. Only members of the `system-admin` group can administer the system. To learn more about the policy format, check the [documentation](/docs/auth_permissions)."},{"id":"/2019/02/19/the-great-migration","metadata":{"permalink":"/blog/2019/02/19/the-great-migration","source":"@site/blog/2019-02-19-the-great-migration.md","title":"The Great Migration","description":"Home Assistant is based around components. One type of components is the one that provide an entity abstraction for a type of device, like lights, switches or media players. Historically, to integrate with these abstractions, you would create a platform for this component. If the light component would be light/, the integration would create its platform as light/hue.py. This way, all logic for the lights was kept together.","date":"2019-02-19T00:00:00.000Z","tags":[],"readingTime":2.255,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"The Great Migration"},"unlisted":false,"prevItem":{"title":"Can I Have User Permissions?","permalink":"/blog/2019/03/11/user-permissions"},"nextItem":{"title":"Deprecating homeassistant.remote","permalink":"/blog/2018/08/13/deprecating-remote-package"}},"content":"Home Assistant is based around components. One type of components is the one that provide an entity abstraction for a type of device, like lights, switches or media players. Historically, to integrate with these abstractions, you would create a platform for this component. If the light component would be `light/`, the integration would create its platform as `light/hue.py`. This way, all logic for the lights was kept together.\n\nAs Home Assistant grown, so has the capabilities/size of the devices/services that we've integrated with. It's no longer that an integration is just a platform for an entity component, it is five platforms + a component to manage the connection. With integrations that big, having the files be spread out as `light/zwave.py`, `switch/zwave.py`, `cover/zwave.py` etc becomes a maintenance hell. It also makes distribution of custom components harder, as now users need to create files across different folders.\n\nSo with Home Assistant 0.87 we started a migration. Instead of looking up platforms for entity components as `light/hue.py`, we will now look it up as `hue/light.py`. The content of the file will stay exactly the same. By moving the files out of the entity component folder, we will also be able to break up big entity components into multiple files, to support maintainability.\n\nThis change has been implemented mostly backwards compatible with a minor breaking change for custom components: if you override a built-in platform, you will now need to use the new `hue/light.py` filename format.\n\nWith the consolidation of integration files into a single folder, we're also going to enforce a new rule: all platforms will be loaded from the same source as the component. This means that if you want to override a built-in component/platform with a custom version, you will need to copy over all component and platform files, not just the one you want to load. By doing so, we can prevent custom platforms or components from breaking if a Home Assistant upgrade moves internal files/values around.\n\n## Notes for custom component developers\n\n- Components are created in `<config>/custom_components/<integration name>/`. Always make sure you create at least an empty `__init__.py` file in that folder.\n- If you make a platform for an entity component, put it in the folder with the name of the integration: `<integration name>/light.py`\n- If you want to share an adjusted version of a Home Assistant integration, copy over ALL the files. Do your users a favor and stick to relative imports to avoid having your component break during an upgrade. Example of a relative import is `from . import DATA_BRIDGE`.\n\n## Resources\n\nRelated architecture issues:\n\n - [Embedded platforms and the road to packaged components](https://github.com/home-assistant/architecture/issues/124)\n - [Disable partial custom component overlays](https://github.com/home-assistant/architecture/issues/141)\n - [Config structure for embedded platforms](https://github.com/home-assistant/architecture/issues/142)"},{"id":"/2018/08/13/deprecating-remote-package","metadata":{"permalink":"/blog/2018/08/13/deprecating-remote-package","source":"@site/blog/2018-08-13-deprecating-remote-package.md","title":"Deprecating homeassistant.remote","description":"With the release of Home Assistant 0.76, the functions in the homeassistant.remote package will be deprecated and will be removed in 0.77. This package contains functions to call the Home Assistant REST API in a non-async way.","date":"2018-08-13T00:00:00.000Z","tags":[],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Deprecating homeassistant.remote"},"unlisted":false,"prevItem":{"title":"The Great Migration","permalink":"/blog/2019/02/19/the-great-migration"},"nextItem":{"title":"Trying the new auth system","permalink":"/blog/2018/07/02/trying-new-auth"}},"content":"With the release of Home Assistant 0.76, the functions in the `homeassistant.remote` package will be deprecated and will be removed in 0.77. This package contains functions to call the Home Assistant REST API in a non-async way.\n\nThe reason for removing is two-fold: first the code is not being used inside Home Assistant and thus should not be part of Home Assistant. Second, it is not compatible with the new auth system nor do we want to spend the time to make it compatible.\n\nIf you want to keep using the methods in `homeassistant.remote`, feel free to copy [the code](https://github.com/home-assistant/core/blob/0.75.0/homeassistant/remote.py) to your own project."},{"id":"/2018/07/02/trying-new-auth","metadata":{"permalink":"/blog/2018/07/02/trying-new-auth","source":"@site/blog/2018-07-02-trying-new-auth.md","title":"Trying the new auth system","description":"In Home Assistant 0.69 we introduced the foundation for a new authentication API. We're switching from a single hardcoded API password to a refresh/access token based authentication system (powered by OAuth2).","date":"2018-07-02T00:00:00.000Z","tags":[],"readingTime":2.1,"hasTruncateMarker":true,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Trying the new auth system"},"unlisted":false,"prevItem":{"title":"Deprecating homeassistant.remote","permalink":"/blog/2018/08/13/deprecating-remote-package"},"nextItem":{"title":"0.71: Improved custom panels and minor changes for custom UI","permalink":"/blog/2018/06/01/071-custom-panels"}},"content":"In Home Assistant 0.69 we introduced the foundation for a new [authentication API](/docs/auth_index). We're switching from a single hardcoded API password to a refresh/access token based authentication system (powered by OAuth2).\n\nFor Home Assistant 0.73, I've sprinted together with [@awarecan] to ensure that we have reached a minimum viable product of the auth system:\n\n- Users can be managed via a built-in command line script.\n- The frontend will ask for username and password to login\n- If you opt-in for the new system, the API password will no longer work.\n- To not force a hard break with the ecosystem around Home Assistant, a temporary legacy mode has been added to turn API password support back on. This will be removed in the future.\n\n**The system is not yet ready for mainstream consumption**, we still need to add Hass.io support and a user interface to help guiding the user to create their first user account and to manage users. You can follow (and join!) the work to be done [here](https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+label%3Aauth).\n\nIf you're interested in trying it out, keep on reading.\n\n<!--truncate-->\n\n## Trying it out\n\nThis requires you to be running Home Assistant 0.73 beta or a later version.\n\nFirst step will be to configure an auth provider. We are going to configure the built-in `homeassistant` auth provider. This provider will be the default one and stores users securely in the config directory.\n\n```yaml\n# Example configuration.yaml entry\nhomeassistant:\n  auth_providers:\n   - type: homeassistant\n   # Uncomment next line if you want to enable legacy API password support\n   # - type: legacy_api_password\n\n# Enable the auth component\nauth:\n```\n\n:::info\nThis rest of the instructions are no longer necessary in Home Assistant 0.74 or later.\n:::\n\nNext step is to create users. Open a terminal and navigate to your Home Assistant installation. The script for managing users is built into Home Assistant and can be invoked using `hass --script auth --config /path/to/config`.\n\n![Screenshot showing the help output of the auth script](/img/en/blog/2018-07-experimental-auth/cli.png)\n\nIf you restart Home Assistant and navigate to the frontend, you'll be prompted with a new login screen. If you enabled both auth providers, you will first have to pick which auth provider to use for authentication.\n\nOnce logged in, the frontend will store the access and a refresh token. The access token expires every 30 minutes and whenever Home Assistant restarts. The fronend will automatically fetch a new access token using the stored refresh token. We're using the OAuth2 standard for this. [More info in the docs](/docs/auth_api).\n\n[@awarecan]: https://github.com/awarecan"},{"id":"/2018/06/01/071-custom-panels","metadata":{"permalink":"/blog/2018/06/01/071-custom-panels","source":"@site/blog/2018-06-01-071-custom-panels.md","title":"0.71: Improved custom panels and minor changes for custom UI","description":"Efforts to modernize and localize the frontend are moving full speed. This blog post will touch upon the upcoming features for Home Assistant 0.71 which should hit the beta channel today and is planned for a release a week from now.","date":"2018-06-01T00:00:00.000Z","tags":[],"readingTime":1.85,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"0.71: Improved custom panels and minor changes for custom UI"},"unlisted":false,"prevItem":{"title":"Trying the new auth system","permalink":"/blog/2018/07/02/trying-new-auth"},"nextItem":{"title":"Updates for Custom UI and Custom Panels","permalink":"/blog/2018/05/22/custom-ui-panels-api"}},"content":"Efforts to modernize and localize the frontend are moving full speed. This blog post will touch upon the upcoming features for Home Assistant 0.71 which should hit the beta channel today and is planned for a release a week from now.\n\n## Improved Custom Panel support\n\nCustom panels allow developers to build panels that will plug into the Home Assistant user interface, with the same possibilities like our other panels like history, map etc. The Home Assistant frontend will manage authentication and the subscription for states of the backend, the panel only has to take care of displaying the data and can offer users option to control things (calling services etc).\n\nThis support has been around for a while, but last week we've spend some time [polishing](https://github.com/home-assistant/core/pull/14708) our support and have three new additions:\n\nFirst new feature is that we now allow importing a panel from a JavaScript URL. This is going to be the preferred way to distribute panels moving forward. This also means that you can refer to a panel hosted externally. The user will have to approve before external panels get loaded. It's still possible for users to host it locally (and no approval is needed) by copying the panel to `<config dir>/www/your-panel.js` and use `/local/your-panel.js` as  the url.\n\nSecond new feature is that we can now embed your panel in an iFrame. This allows panel developers to not have to worry about including duplicate web components and it makes it possible to develop React-based panels. In the past, React-based panels didn't work because React doesn't work well inside Shadow DOM ([more info](https://github.com/facebook/react/pull/12163)).\n\nThird new feature is that we now make a [starter kit](https://github.com/home-assistant/custom-panel-starter-kit-react) available to start developing React based panels! The kit contains everything that is needed to start developing React-based panels and share them with the community. Let us know what you're building!\n\n## Custom UI: `<state-info>` and `<ha-relative-time>`\n\nIf you're building custom UI, odds are that you're using either `<state-info>` and `<ha-relative-time>`. Although not officially supported as external facing API, we still want to give a heads up that it's going to be needed to pass the `hass` object in.\n\nThis is necessary because `<ha-relative-time>` can now be localized thanks to c727 in [#1241](https://github.com/home-assistant/frontend/pull/1241.)"},{"id":"/2018/05/22/custom-ui-panels-api","metadata":{"permalink":"/blog/2018/05/22/custom-ui-panels-api","source":"@site/blog/2018-05-22-custom-ui-panels-api.md","title":"Updates for Custom UI and Custom Panels","description":"With the release of Home Assistant 0.70, we've migrated the build pipeline for our frontend from being based on HTML imports to ES module imports (more on this later). One of the effects of this is that we're no longer using the window object to share classes, data and utilities with other pieces of code.","date":"2018-05-22T00:00:00.000Z","tags":[],"readingTime":0.735,"hasTruncateMarker":false,"authors":[{"name":"Paulus Schoutsen","url":"https://twitter.com/balloob","imageURL":"/img/profile/paulus.jpg","key":null,"page":null}],"frontMatter":{"author":"Paulus Schoutsen","authorURL":"https://twitter.com/balloob","authorImageURL":"/img/profile/paulus.jpg","authorTwitter":"balloob","title":"Updates for Custom UI and Custom Panels"},"unlisted":false,"prevItem":{"title":"0.71: Improved custom panels and minor changes for custom UI","permalink":"/blog/2018/06/01/071-custom-panels"}},"content":"With the release of Home Assistant 0.70, we've migrated the build pipeline for our frontend from being based on HTML imports to ES module imports (more on this later). One of the effects of this is that we're no longer using the `window` object to share classes, data and utilities with other pieces of code.\n\nThis might impact you if you dependend on some of this. Examples are Polymer (`window.Polymer`) or one of our utilitity functions that used to be available as `window.hassUtil`, `window.HAWS` or `window.hassMixins`.\n\nTo give developers time to migrate, we're adding a temporary legacy support layer that will expose some of our internals again on the `window` object. We've already added `window.Polymer`, `window.Polymer.Element` and `window.Polymer.html`. If you're using other specific things from the window object, [please let us know](https://github.com/home-assistant/frontend/issues/1157).\n\nTh legacy support layer will no longer be included in releases happening after July 2018."}],"blogListPaginated":[{"items":["/2025/01/31/energy-distance-units","/2025/01/15/service-info","/2024/12/26/area-squared-units","/2024/12/21/moving-to-pydantic-v2","/2024/12/14/kelvin-preferred-color-temperature-unit","/2024/12/13/water-heater-entity-description","/2024/12/08/new-vacuum-state-property","/2024/12/03/climate-horizontal-swing","/2024/11/28/dt-util-utc-to-timestamp-deprecation","/2024/11/26/camera-deprecations"],"metadata":{"permalink":"/blog","page":1,"postsPerPage":10,"totalPages":22,"totalCount":212,"nextPage":"/blog/page/2","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/11/21/unit-of-measurement-translations","/2024/11/20/integration-quality-scale","/2024/11/12/options-flow","/2024/11/04/reauth-reconfigure-entry-id","/2024/10/31/core-config-moved","/2024/10/31/update-entity-changes","/2024/10/22/new-alarm-state-property","/2024/10/21/reauth-reconfigure-helpers","/2024/10/09/extend-deprecation-hass-helpers","/2024/10/08/state-constants-cover-deprecation"],"metadata":{"permalink":"/blog/page/2","page":2,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog","nextPage":"/blog/page/3","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/10/08/unit-of-conductivity-changes","/2024/10/01/assist-satellite-entity","/2024/09/28/update-version-compare","/2024/09/24/climate-set-temp-validation","/2024/09/24/device-tracker-entity-description","/2024/09/23/constants-media-player-deprecation","/2024/09/23/feature-flag-constants-vacuum-deprecation","/2024/09/23/state-constants-camera-deprecation","/2024/09/23/state-constants-lock-deprecation","/2024/09/11/extending-deprecation-hass-components"],"metadata":{"permalink":"/blog/page/3","page":3,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/2","nextPage":"/blog/page/4","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/09/10/calories-units","/2024/09/02/template-hass-required","/2024/08/27/changed-icon-translations-schema","/2024/08/27/entity-service-schema-validation","/2024/08/23/lawn-mower-activity-returning","/2024/08/05/coordinator_async_setup","/2024/07/24/climate-min-max-temperature-check","/2024/07/19/fan-fanentityfeatures-turn-on_off","/2024/07/16/device-info-model-id","/2024/07/16/service-actions"],"metadata":{"permalink":"/blog/page/4","page":4,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/3","nextPage":"/blog/page/5","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/07/07/climate-hvacaction-defrosting","/2024/06/22/excluding-state-attributes-from-recording-match-all","/2024/06/18/async_register_static_paths","/2024/06/12/async_forward_entry_setups","/2024/05/22/alarm_control_panel_validation","/2024/05/20/llm-api","/2024/05/19/fix_zoneinfo_blocking_io","/2024/05/10/group-integration","/2024/05/10/lock-supports-open-state","/2024/05/09/improving-ci-test-execution"],"metadata":{"permalink":"/blog/page/5","page":5,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/4","nextPage":"/blog/page/6","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/05/03/notify-title","/2024/05/01/improved-hass-data-typing","/2024/04/30/store-runtime-data-inside-config-entry","/2024/04/25/always-reload-after-successful-reauth-flow","/2024/04/13/deprecate_async_track_state_change","/2024/04/10/new-notify-entity-platform","/2024/04/08/deprecated-backports-and-typing-aliases","/2024/04/07/deprecate_add_hass_job","/2024/04/03/build-images-with-uv","/2024/03/30/deprecate-hass-helpers"],"metadata":{"permalink":"/blog/page/6","page":6,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/5","nextPage":"/blog/page/7","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/03/21/config-entry-reconfigure-step","/2024/03/20/state_reported_timestamp","/2024/03/15/exception-translations","/2024/03/13/deprecate_add_run_job","/2024/03/10/climate-aux-heater-deprecated","/2024/03/09/import_executor_default","/2024/03/05/platform_entity_translations_deprecation","/2024/02/28/device-name-translations","/2024/02/27/deprecate-bind-hass-and-hass-components","/2024/02/26/single-instance-only-manifest-option"],"metadata":{"permalink":"/blog/page/7","page":7,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/6","nextPage":"/blog/page/8","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/02/25/Climate-toggle-service","/2024/02/12/async_update_entry","/2024/02/12/light-color-mode-mandatory","/2024/01/30/ha-state-icon-properties-changes","/2024/01/24/climate-climateentityfeatures-expanded","/2024/01/23/light-color-mode-changes","/2024/01/22/async_services_for_domain","/2024/01/19/entity-translations-placeholders","/2024/01/19/icon-translations","/2024/01/17/deprecate-invalid-sensor-uom-state-class-use"],"metadata":{"permalink":"/blog/page/8","page":8,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/7","nextPage":"/blog/page/9","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2024/01/11/async-show-progress-changes","/2023/12/28/support-feature-magic-numbers-deprecation","/2023/12/19/constant-deprecation","/2023/12/18/config-entry-minor-version","/2023/12/11/entity-description-changes","/2023/12/05/scaling-utils","/2023/11/30/service-exceptions-and-translations","/2023/11/27/config-validation-and-error-handling","/2023/11/06/public-addon-config","/2023/10/12/country_selector"],"metadata":{"permalink":"/blog/page/9","page":9,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/8","nextPage":"/blog/page/10","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2023/10/03/conversion-functions-cleanup","/2023/10/01/hacktoberfest-2023","/2023/09/20/excluding-state-attributes-from-recording","/2023/09/12/ws-entity-source-simplified","/2023/08/29/hass-format-state","/2023/08/29/homeassistant-changed-signature","/2023/08/23/sensor-updates","/2023/08/07/weather_entity_forecast_types","/2023/07/27/avoiding-unnecessary-callbacks-with-dataupdatecoordinator","/2023/07/21/change-naming-mqtt-entities"],"metadata":{"permalink":"/blog/page/10","page":10,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/9","nextPage":"/blog/page/11","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2023/07/11/translating-services","/2023/07/10/vacuum-updates","/2023/07/07/action-event-custom-cards","/2023/06/28/entity-name-changes","/2023/06/28/service-description-filters","/2023/06/14/service-calls","/2023/05/21/retained-mqtt-messages-filtered","/2023/05/07/job-home-assistant-core","/2023/04/30/statistics_impossible_values","/2023/04/13/new_limits_for_add_ons"],"metadata":{"permalink":"/blog/page/11","page":11,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/10","nextPage":"/blog/page/12","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2023/04/04/deprecating_polymer","/2023/03/28/calendar_best_practices","/2023/03/27/entity_name_translations","/2023/02/28/custom-tile-features","/2023/02/21/deprecated-callback-removed","/2023/02/20/snapshot-testing","/2023/02/15/json","/2023/02/09/hassgetstate","/2023/02/08/sensor_presentation_rounding","/2023/02/07/introducing-PR-drafting-in-reviews"],"metadata":{"permalink":"/blog/page/12","page":12,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/11","nextPage":"/blog/page/13","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2023/02/06/translations-files-removed-from-core","/2023/02/03/responses","/2023/01/25/sensor_rounding","/2023/01/24/conversation-updates","/2023/01/20/cover-intent-deprecated","/2023/01/12/bluetooth-adapters","/2023/01/02/db-schema-v32","/2022/12/08/multi-pan-rollback","/2022/12/07/entity-color-changes","/2022/12/07/unit_system_changes"],"metadata":{"permalink":"/blog/page/13","page":13,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/12","nextPage":"/blog/page/14","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2022/12/05/more-unit-enumerators","/2022/12/01/entity_translations","/2022/11/28/more-unit-enumerators","/2022/11/16/statistics_refactoring","/2022/10/26/new-unit-enumerators","/2022/10/25/new-precipitation-intensity-units","/2022/10/24/hubs-devices-services-virtual-integrations","/2022/10/21/code-owner-commands","/2022/10/14/deprecate-unit-system","/2022/10/10/add-options-to-SelectEntityDescription"],"metadata":{"permalink":"/blog/page/14","page":14,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/13","nextPage":"/blog/page/15","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2022/09/29/statistics_refactoring","/2022/09/28/deprecate-conversion-utilities","/2022/09/28/new_sensor_device_classes","/2022/09/16/bluetooth-unavailable-api-changes","/2022/09/06/media-player-repeat-mode-deprecation","/2022/08/25/issue_registry_moved_to_helpers","/2022/08/24/globally_accessible_hass","/2022/08/18/light_white_value_removed","/2022/08/15/automation-action-type-deprecation","/2022/08/08/bluetooth-api-changes"],"metadata":{"permalink":"/blog/page/15","page":15,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/14","nextPage":"/blog/page/16","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2022/07/29/device-tracker_source-type-deprecation","/2022/07/10/entity_naming","/2022/07/08/config_entry_forwards","/2022/07/08/generic-store","/2022/06/27/weather_entity_refactoring","/2022/06/14/number_entity_refactoring","/2022/06/13/unsafe_reloads_during_entry_setup","/2022/06/07/dataflow-constants-deprecation","/2022/06/02/update_coordinator-context","/2022/05/31/media-player-updates"],"metadata":{"permalink":"/blog/page/16","page":16,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/15","nextPage":"/blog/page/17","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2022/05/24/entity_matches_only_removed_logbook_card","/2022/05/12/s6-overlay-base-images","/2022/05/03/constants-deprecations","/2022/05/03/serviceinfo-model-improvements","/2022/04/26/tts-say-media-source","/2022/04/20/saying-goodbye-to-event_time_changed","/2022/04/18/calendar-data-model","/2022/04/16/local-oauth2","/2022/04/02/support-constants-deprecation","/2022/03/30/2022.4-new-dev-features"],"metadata":{"permalink":"/blog/page/17","page":17,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/16","nextPage":"/blog/page/18","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2022/03/20/update-entity","/2022/02/28/opt-in-remove-device","/2022/02/18/paper-elements","/2021/10/26/config-entity","/2021/09/20/state_class_total","/2021/08/24/supervisor_update","/2021/08/16/state_class_total","/2021/08/12/sensor_temperature_conversion","/2021/05/25/sensor_attributes","/2021/05/19/lit-2.0"],"metadata":{"permalink":"/blog/page/18","page":18,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/17","nextPage":"/blog/page/19","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2021/05/07/switch-pytz-to-python-dateutil","/2021/04/09/astral-2.2","/2021/01/29/custom-integration-changes","/2020/11/09/system-health-and-templates","/2020/10/29/supervisor-update","/2020/10/02/lazyMoreInfo","/2020/09/30/customViewChanges","/2020/07/13/alpine-python","/2020/06/01/getCardSize","/2020/05/14/entity-class-names"],"metadata":{"permalink":"/blog/page/19","page":19,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/18","nextPage":"/blog/page/20","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2020/05/09/custom-iconsets","/2020/05/08/instance-url-helper","/2020/05/08/logos-custom-integrations","/2020/04/23/frontend-translations","/2020/04/16/hassfest","/2020/04/12/s6-overlay","/2020/04/10/translation-handling","/2020/02/18/106-custom-card-changes","/2020/02/04/new-zwave","/2019/10/05/simple-mode"],"metadata":{"permalink":"/blog/page/20","page":20,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/19","nextPage":"/blog/page/21","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2019/09/27/hacktoberfest","/2019/07/31/black","/2019/07/19/building-all-the-things","/2019/07/03/climate-cleanup","/2019/05/22/internet-of-things-and-the-modern-web","/2019/04/12/new-integration-structure","/2019/03/11/user-permissions","/2019/02/19/the-great-migration","/2018/08/13/deprecating-remote-package","/2018/07/02/trying-new-auth"],"metadata":{"permalink":"/blog/page/21","page":21,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/20","nextPage":"/blog/page/22","blogDescription":"Blog","blogTitle":"Blog"}},{"items":["/2018/06/01/071-custom-panels","/2018/05/22/custom-ui-panels-api"],"metadata":{"permalink":"/blog/page/22","page":22,"postsPerPage":10,"totalPages":22,"totalCount":212,"previousPage":"/blog/page/21","blogDescription":"Blog","blogTitle":"Blog"}}],"blogTags":{},"blogTagsListPath":"/blog/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/","source":"@site/src/pages/index.js"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-svgr":{},"docusaurus-theme-classic":{},"@easyops-cn/docusaurus-search-local":{},"docusaurus-theme-mermaid":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}}